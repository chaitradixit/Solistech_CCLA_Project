/* 	Latest schema file, should supersede all previous ones. 

	Doesn't contain any 'core' CCLA data tables, these are now in the separate CCLA tablespace.
	All the core tables have public synonyms to make them accessible in the UCMADMIN schema.
	
	Lots of refactoring is required for foreign keys etc.
	
	New model for auditing should replace all existing _AUDIT tables with a more generic model,
	Keith is currently in charge of this.
	
*/

CREATE SEQUENCE  SEQ_ELEMENT_ID  			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 6000000 CACHE 20 NOORDER NOCYCLE;   
CREATE SEQUENCE  SEQ_ELEMENT_RELATION_ID 	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 3000000 CACHE 20 NOORDER NOCYCLE;

CREATE SEQUENCE  SEQ_CLIENT_AURORA_MAP_ID  	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_PERSON_AURORA_MAP_ID  	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 

CREATE SEQUENCE  SEQ_CONTACT_ID 			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_ADDRESS_ID 			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_BANK_ACCOUNT_ID 		MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_BANK_ACCOUNT_RELATION_ID 		MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 

CREATE SEQUENCE  CCLA_IDENTITY_CHECK_LOOKUP_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER NOCYCLE;

CREATE SEQUENCE  SEQ_ACCOUNT_INTENTION_ID MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2120 CACHE 20 NOORDER NOCYCLE;

/* Records intentions of entities/persons for opening/investment of
 * new accounts.
*/
CREATE TABLE "CCLA_ACCOUNT_INTENTION"
(
	"ACCOUNT_INTENTION_ID"	NUMBER(15,0),
	"ORGANISATION_ID"		NUMBER(15,0),
	"PERSON_ID"				NUMBER(15,0),
	"USER_ID"				VARCHAR2(40 CHAR),
	"UPDATE_USER_ID"		VARCHAR2(40 CHAR),
	
	"FUND_CODE"				VARCHAR2(10 CHAR),
	"UNITS"					NUMBER(20,6),
	"CASH"					NUMBER(20,6),
	
	"ACCOUNT_ID"			NUMBER(15,0),
	"STATUS"				VARCHAR2(10 CHAR),
	
	"DATE_ADDED"			TIMESTAMP(6),
	"LAST_UPDATED"			TIMESTAMP(6),
	
	CONSTRAINT "ACCOUNTINTENTION_PK" 				PRIMARY KEY ("ACCOUNT_INTENTION_ID") ENABLE,
	CONSTRAINT "ACCOUNTINTENTION_ORGANISATION_FK"	FOREIGN KEY ("ORGANISATION_ID") REFERENCES "ORGANISATION" ("ORGANISATION_ID"),
	CONSTRAINT "ACCOUNTINTENTION_PERSON_FK"			FOREIGN KEY ("PERSON_ID") REFERENCES "PERSON" ("PERSON_ID"),
	CONSTRAINT "ACCOUNTINTENTION_ACCOUNT_FK"		FOREIGN KEY ("ACCOUNT_ID") REFERENCES "ACCOUNT" ("ACCOUNT_ID"),
	CONSTRAINT "ACCOUNTINTENTION_FUNDCODE_FK"		FOREIGN KEY ("FUND_CODE") REFERENCES "FUND" ("FUNDCODE")
);


/* Static list of subjects available on Record Interaction screen.

    Each subject is linked to a set of categories.
*/
CREATE TABLE "CCLA_INTERACTION_SUBJECT"
(
	"INTERACTION_SUBJECT_ID"	NUMBER(15,0),
	"SUBJECT"					VARCHAR2(40 CHAR),
	
	CONSTRAINT "INTERACTION_SUBJECT_PK" 	PRIMARY KEY ("INTERACTION_SUBJECT_ID") ENABLE
);

Insert into CCLA_INTERACTION_SUBJECT (INTERACTION_SUBJECT_ID,SUBJECT) values (1,'Mandate');

/* Static list of subject categories available on Record Interaction screen.
*/
CREATE TABLE "CCLA_INTERACTION_CATEGORY"
(
	"INTERACTION_CATEGORY_ID"	NUMBER(15,0),
	"INTERACTION_SUBJECT_ID"	NUMBER(15,0),				
	"CATEGORY"					VARCHAR2(100 CHAR),
	
	CONSTRAINT "INTERACTION_CATEGORY_PK" 	PRIMARY KEY ("INTERACTION_CATEGORY_ID") ENABLE,
	CONSTRAINT "CATEGORY_SUBJECT_FK" 		FOREIGN KEY ("INTERACTION_SUBJECT_ID") REFERENCES "CCLA_INTERACTION_SUBJECT"("INTERACTION_SUBJECT_ID")  ENABLE
);

Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (1,1,'Original not received/Client to complete');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (2,1,'Account has Zero balance/Client wants to close');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (3,1,'Mandate received but CCLA records not updated');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (4,1,'Mandate returned - what is status?');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (5,1,'Mandate has been IVS checked?');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (6,1,'Confirmation of update sent to client – why in population?');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (7,1,'Internal records were updated - why in population?');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (8,1,'Nominee issue');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (9,1,'Not prepared to complete form');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (10,1,'Client is investigating');
Insert into CCLA_INTERACTION_CATEGORY (INTERACTION_CATEGORY_ID,INTERACTION_SUBJECT_ID,CATEGORY) values (11,1,'Recently sent BAU mandate');

/* 	New Interaction record table. Replaces CCLA_INTERACTIONS
	
	TODO: Fix in accordance with new schema
*/
CREATE TABLE CCLA_INTERACTION
  (
    "INTERACTION_ID"        NUMBER(10,0),
	
	"USER_ID"      			VARCHAR2(48 CHAR),
	"INTERACTION_DATE"		TIMESTAMP(6),
	
    "ENTITY_ID"           	NUMBER(15,0),
    "PERSON_ID"         	NUMBER(15,0),
	"ACCOUNT_ID"			NUMBER(15,0),
	
	"CONFIRM_TYPES"			VARCHAR2(48 CHAR),
	"CONFIRM_OTHER"			VARCHAR2(48 CHAR),
    "INTERACTION_TYPE"      VARCHAR2(48 CHAR),
	
    "SUBJECT_ID"         	NUMBER(15,0),
	"CATEGORY_ID"			NUMBER(15,0),
	
	"IS_QUERY"				VARCHAR2(1 CHAR),
	"IS_COMPLAINT"			VARCHAR2(1 CHAR),
	"IS_BREACH"				VARCHAR2(1 CHAR),
	"IS_ERROR"				VARCHAR2(1 CHAR),
	
    "CAMPAIGN_ID"         	NUMBER(10,0),
	"JOB_ID"				VARCHAR2(20 CHAR),
    "OUTCOME"         		VARCHAR2(64 CHAR),
    "INTERACTION_STATUS"    VARCHAR2(96 CHAR),
	
    "ASSIGNEE"         		VARCHAR2(96 CHAR),
    "DEADLINE"             	TIMESTAMP (6),
	
	"LAST_UPDATED"			TIMESTAMP (6),
	
	CONSTRAINT "INTERACTION_PK" 			PRIMARY KEY ("INTERACTION_ID") ENABLE,
	CONSTRAINT "INTERACTION_SUBJECT_FK" 	FOREIGN KEY ("SUBJECT_ID") REFERENCES "CCLA_INTERACTION_SUBJECT" ("INTERACTION_SUBJECT_ID")  ENABLE,
	CONSTRAINT "INTERACTION_CATEGORY_FK" 	FOREIGN KEY ("CATEGORY_ID") REFERENCES "CCLA_INTERACTION_CATEGORY" ("INTERACTION_CATEGORY_ID")  ENABLE,
	CONSTRAINT "INTERACTION_PERSON_FK"		FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_PERSON" ("PERSON_ID") ENABLE,
	CONSTRAINT "INTERACTION_ENTITY_FK"		FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE,
	CONSTRAINT "INTERACTION_ACCOUNT_FK"		FOREIGN KEY ("ACCOUNT_ID") REFERENCES "CCLA_ACCOUNT" ("ACCOUNT_ID") ENABLE
	
  ); 


/* New column for CCLA_CAMPAIGNS table */
ALTER TABLE CCLA_CAMPAIGNS ADD "IDOC_INCLUDE_INFIX" VARCHAR2(40 CHAR);
  
/* 	New Process record table. Replaces CCLA_PROCESSES.
	
	Now refactored to use new schema.
 */
CREATE TABLE "CCLA_PROCESS"
  (
    "PROCESS_ID"     		NUMBER(15,0) NOT NULL ENABLE,
	"CAMPAIGN_ID" 			NUMBER(15,0) NOT NULL ENABLE,
    "PERSON_ID"      		NUMBER(15,0),
    "ORGANISATION_ID"      	NUMBER(15,0) NOT NULL ENABLE,
	"PREF_CONTACT_METHOD" 	VARCHAR2(20 CHAR),	
    "PROCESS_STATUS" 		VARCHAR2(30 CHAR),
    "PROCESS_DATE" 			TIMESTAMP (6),
    "LAST_ACTION" 			TIMESTAMP (6),
	
    CONSTRAINT "CCLA_PROCESS_PK" 				PRIMARY KEY ("PROCESS_ID") ENABLE,
    CONSTRAINT "CCLA_PR_CLIENT_PERSON_UNIQUE" 	UNIQUE ("CAMPAIGN_ID", "ORGANISATION_ID", "PERSON_ID") ENABLE,
    CONSTRAINT "CCLA_PROCESS_CAMPAIGN_FK" 		FOREIGN KEY ("CAMPAIGN_ID") REFERENCES "CCLA_CAMPAIGNS" ("CAMPAIGN_ID") ENABLE,
	CONSTRAINT "CCLA_PROCESS_ORGANISATION_FK" 	FOREIGN KEY ("ORGANISATION_ID") REFERENCES "ORGANISATION" ("ORGANISATION_ID") ENABLE,
    CONSTRAINT "CCLA_PROCESS_PERSON_FK" 		FOREIGN KEY ("PERSON_ID") REFERENCES "PERSON" ("PERSON_ID") ENABLE
  );

SELECT pr.process_id, pr.campaign_id, pr.process_status, pr.last_action, pr.process_date, 
ORG.ORGANISATION_ID, p.PERSON_ID AS person_id
FROM CCLA_PROCESSES pr 
LEFT JOIN REF_COMPANY comp ON (pr.company = comp.company_code) 
LEFT JOIN CLIENT_AURORA_MAP cl_map ON
(pr.client_id = cl_map.client_number AND comp.company_id = cl_map.company_id)
LEFT JOIN ORGANISATION org ON (cl_map.organisation_id = org.ORGANISATION_ID)

LEFT JOIN PERSON_AURORA_MAP p_map ON
(pr.PERSON_ID = p_map.corr_id)
LEFT JOIN PERSON p ON
(p_map.person_id = p.PERSON_ID);  
  
/* Replacement table for CCLA_FORMS */
CREATE TABLE "CCLA_FORM"
  (
    "FORM_ID"          		NUMBER(20,0),
    "FORM_TYPE"        		VARCHAR2(60 CHAR),
    "FORM_SUBTYPE"     		VARCHAR2(60 CHAR),
    "PROCESS_ID"       		NUMBER(15,0),
	"ORGANISATION_ID"  		NUMBER(15,0),
    "CLIENT_AURORA_MAP_ID"	NUMBER(15,0),
    "PERSON_ID"        		NUMBER(12,0),
    "BASE_DOCNAME"     		VARCHAR2(38 CHAR),
    "BASE_ID"          		NUMBER(38,0),
    "PRINTED"          		VARCHAR2(1 CHAR),
    "GENERATED"        		VARCHAR2(1 CHAR),
    "RETURNED"         		VARCHAR2(1 CHAR),
    "RETURNED_DOCNAME" 		VARCHAR2(38 CHAR),
    "FORM_STATUS"      		VARCHAR2(80 CHAR),
    "CREATE_DATE" 			TIMESTAMP (6),
    "PRINT_DATE" 			TIMESTAMP (6),
    "GEN_DATE" 				TIMESTAMP (6),
    "RETURN_DATE" 			TIMESTAMP (6),
    "STATIC_DATA_CHANGE" 	VARCHAR2(1 CHAR),
    "ADDITIONAL_DATA"    	VARCHAR2(1 CHAR),
    "NO_CHANGES"         	VARCHAR2(1 CHAR),
    "VALID"              	VARCHAR2(1 CHAR),
    "INVALID_REASON"     	VARCHAR2(48 CHAR),
	"LAST_UPDATED"			TIMESTAMP(6),
	
    CONSTRAINT "CCLA_FORM_PK" PRIMARY KEY ("FORM_ID") ENABLE,
	CONSTRAINT "FORM_ORGANISATION_FK" FOREIGN KEY("ORGANISATION_ID") REFERENCES "ORGANISATION"("ORGANISATION_ID") ENABLE,
	CONSTRAINT "FORM_PERSON_FK" FOREIGN KEY("PERSON_ID") REFERENCES "PERSON"("PERSON_ID") ENABLE,
	CONSTRAINT "FORM_CLIENT_AURORA_MAP_FK" FOREIGN KEY ("CLIENT_AURORA_MAP_ID") REFERENCES "CLIENT_AURORA_MAP"("CLIENT_AURORA_MAP_ID") ENABLE
  );

/* Query used to fetch old data from CCLA_FORMS table and connect it with new
     Entity/Person data.
	 
	 NOTE: Ignore validation errors on import.
	 
	 Export as csv.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/  
SELECT frm.*, cl_map.client_aurora_map_id, org.ORGANISATION_ID, p.PERSON_ID AS new_person_id
FROM CCLA_FORMS frm 
INNER JOIN REF_COMPANY comp ON (FRM.COMPANY = comp.company_code)
INNER JOIN CLIENT_AURORA_MAP cl_map ON
(frm.client_id = cl_map.client_number AND comp.company_id = cl_map.company_id)
INNER JOIN ORGANISATION org ON (cl_map.organisation_id = org.ORGANISATION_ID)

LEFT JOIN PERSON_AURORA_MAP p_map ON
(frm.PERSON_ID = p_map.corr_id)
LEFT JOIN PERSON p ON
(p_map.person_id = p.PERSON_ID);   
  
/* Move FORM_ACCOUNT_MAP constraint to point to new CCLA_FORM table. */
alter table "CCLA_FORM_ACCOUNT_MAP" drop constraint "CCLA_FORMS_FK";
alter table "CCLA_FORM_ACCOUNT_MAP" add constraint "CCLA_FORM_FK" FOREIGN KEY("FORM_ID") REFERENCES "CCLA_FORM"("FORM_ID") ENABLE;

/* Move FORM_ACCOUNT_MAP constraint to point to new CCLA_FORM table. */
alter table "CCLA_FORM_ACCOUNT_MAP" drop constraint "CCLA_FORMS_FK";

/* Replacement table for CCLA_ACCOUNTS_AML_STATUS. */
CREATE TABLE "CCLA_ACCOUNT_AML_STATUS"
  (
    "ORGANISATION_ID"	NUMBER(15,0) NOT NULL ENABLE,
    "ACCNUMEXT" 		VARCHAR2(20 CHAR) NOT NULL ENABLE,
    "CHECKED"   		NUMBER(1,0),
    CONSTRAINT "CCLA_ACCOUNT_AML_STATUS_PK" PRIMARY KEY ("ACCNUMEXT") ENABLE,
	CONSTRAINT "CCLA_ACC_AML_STATUS_ORG_FK" FOREIGN KEY ("ORGANISATION_ID") REFERENCES "ORGANISATION"("ORGANISATION_ID") ENABLE
  );
  
/* Translation query for old ACCOUNTS_AML_STATUS to new table */
SELECT org.ORGANISATION_ID, aaml.ACCNUMEXT, aaml.CHECKED
FROM CCLA_ACCOUNTS_AML_STATUS aaml 
INNER JOIN REF_COMPANY comp ON (aaml.COMPANY = comp.company_code)
INNER JOIN CLIENT_AURORA_MAP cl_map ON
(aaml.client_id = cl_map.client_number AND comp.company_id = cl_map.company_id)
INNER JOIN ORGANISATION org ON (cl_map.organisation_id = org.ORGANISATION_ID);  

/* New Activity records table. Replaces CCLA_ACTIVITIES */
CREATE TABLE "CCLA_ACTIVITY"
  (
    "ACTIVITY_ID" 		NUMBER(15,0) NOT NULL,
    "PROCESS_ID"  		NUMBER(15,0),
	"INTERACTION_ID"	NUMBER(15,0),
    "PERSON_ID"   		NUMBER(15,0),
    "ORGANISATION_ID"   NUMBER(15,0),
    "USER_ID"     		VARCHAR2(40 CHAR),
    "ACTIVITY_DATE" 	TIMESTAMP(6),
    "ACTIVITY_TYPE"   	VARCHAR2(50 CHAR),
    "ACTIVITY_ACTION" 	VARCHAR2(150 CHAR),
    "NOTE_ID"         	NUMBER(12,0),
    "ERROR"           	NUMBER(1,0),
    CONSTRAINT "ACTIVITY_PK" 				PRIMARY KEY ("ACTIVITY_ID") ENABLE,
    CONSTRAINT "ACTIVITY_PROCESS_FK" 		FOREIGN KEY ("PROCESS_ID") REFERENCES "CCLA_PROCESS" ("PROCESS_ID") ON DELETE CASCADE ENABLE,
	CONSTRAINT "ACTIVITY_INTERACTION_FK" 	FOREIGN KEY ("INTERACTION_ID") REFERENCES "CCLA_INTERACTION" ("INTERACTION_ID") ON DELETE CASCADE ENABLE,
	
	CONSTRAINT "ACTIVITY_ORGANISATION_FK" 	FOREIGN KEY ("ORGANISATION_ID") REFERENCES "ORGANISATION" ("ORGANISATION_ID") ENABLE,
    CONSTRAINT "ACTIVITY_PERSON_FK" 		FOREIGN KEY ("PERSON_ID") REFERENCES "PERSON" ("PERSON_ID") ENABLE,
	
	CONSTRAINT "ACTIVITY_NOTE_FK"			FOREIGN KEY ("NOTE_ID") REFERENCES "CCLA_NOTES" ("NOTE_ID") ENABLE
  );
  
/* Query used to fetch old data from CCLA_ACTIVITIES table and connect it with new
     Entity/Person data.
	 
   Ensure ambiguous Client Number ref (no company) doesn't generate duplicates.
   
	 Export as csv.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/  
SELECT act.activity_id, act.process_id, act.user_id, act.activity_date, act.activity_type, act.activity_action, act.note_id, to_number(act.error) AS ERROR, 
org.ORGANISATION_ID, p.PERSON_ID AS person_id
FROM CCLA_ACTIVITIES act 
LEFT JOIN CLIENT_AURORA_MAP cl_map ON
(act.client_id = cl_map.client_number AND (cl_map.company_id = 1 OR cl_map.company_id = 2))
LEFT JOIN ORGANISATION org ON (cl_map.organisation_id = org.organisation_id)

LEFT JOIN PERSON_AURORA_MAP p_map ON
(act.PERSON_ID = p_map.corr_id)
LEFT JOIN PERSON p ON
(p_map.person_id = p.PERSON_ID);  
  
  /* Query for mapping old ACCOUNTS_AML_STATUS data to new Org IDs. */
SELECT aml.ACCNUMEXT, TO_NUMBER(CHECKED) AS CHECKED, org.ORGANISATION_ID
FROM CCLA_ACCOUNTS_AML_STATUS aml
INNER JOIN REF_COMPANY comp ON (aml.company = comp.company_code)
INNER JOIN CLIENT_AURORA_MAP cl_map ON
(aml.client_id = cl_map.client_number AND aml.company = comp.company_code)
LEFT JOIN ORGANISATION org ON (cl_map.organisation_id = org.ORGANISATION_ID);

CREATE TABLE "CCLA_ACCOUNT_ACTIONS"
  (
    "ACCOUNT_ACTION_ID"             NUMBER(12,0) NOT NULL ENABLE,
    "SOURCE_ACC_NUM_EXT"            VARCHAR2(15 CHAR),
    "SOURCE_ACC_COMPANY"            VARCHAR2(5 CHAR),
    "SOURCE_ACC_CLIENT_ID"          NUMBER(12,0),
    "SOURCE_ACC_NUM"                NUMBER(12,0),
    "SOURCE_ACC_FUND"               VARCHAR2(2 CHAR),
    "SOURCE_ACC_SUBTITLE"           VARCHAR2(64 CHAR),
    "SOURCE_ACC_CASH"               NUMBER(38,6),
    "SOURCE_ACC_UNITS"              NUMBER(38,6),
    "SOURCE_ACC_CORR_ID"            NUMBER(12,0),
    "SOURCE_ACC_INCOME_DIST_METHOD" VARCHAR2(6 CHAR),
    "SOURCE_ACC_IS_EXTERNAL"        VARCHAR2(1 CHAR),
    "SOURCE_ACC_SHARE_CLASS"        VARCHAR2(5 CHAR),
    "DEST_ACC_NUM_EXT"              VARCHAR2(15 CHAR),
    "DEST_ACC_COMPANY"              VARCHAR2(5 CHAR),
    "DEST_ACC_CLIENT_ID"            NUMBER(12,0),
    "DEST_ACC_NUM"                  NUMBER(12,0),
    "DEST_ACC_FUND"                 VARCHAR2(2 CHAR),
    "DEST_ACC_SUBTITLE"             VARCHAR2(64 CHAR),
    "DEST_ACC_CASH"                 NUMBER(38,6),
    "DEST_ACC_UNITS"                NUMBER(38,6),
    "DEST_ACC_CORR_ID"              NUMBER(12,0),
    "DEST_ACC_INCOME_DIST_METHOD"   VARCHAR2(6 CHAR),
    "DEST_ACC_IS_EXTERNAL"          VARCHAR2(1 CHAR),
    "DEST_ACC_SHARE_CLASS"        VARCHAR2(5 CHAR),
    "BANKING_DETAILS_ID"            NUMBER(12,0),
    "DOCNAME"                       VARCHAR2(48 CHAR),
    "USER_ID"                       VARCHAR2(64 CHAR),
    "ACTION"                        VARCHAR2(30 CHAR) NOT NULL ENABLE,
    "STATUS"                        VARCHAR2(30 CHAR),
    "SUSPENDED"                     VARCHAR2(1 CHAR),
    "COMPLETED"                     VARCHAR2(1 CHAR),
    "JOB_ID"                        VARCHAR2(64 CHAR),
    "SUBMITTED_FOR_AUTH"            VARCHAR2(1 CHAR),
    "BATCH_ERRORS"                  VARCHAR2(1 CHAR),
    "AURORA_BATCH_ID"               NUMBER(38,0),
	"AUTH_STATUS"					VARCHAR2(50 CHAR),
    "DATE_ADDED" 					TIMESTAMP (6),
    "LAST_UPDATED" 					TIMESTAMP (6),
	
    CONSTRAINT "ACCOUNT_ACTION_PK" 				PRIMARY KEY ("ACCOUNT_ACTION_ID"),
	CONSTRAINT "ACCOUNT_ACTION_BNK_DETAILS_FK" 	FOREIGN KEY ("BANKING_DETAILS_ID") REFERENCES "CCLA_ACCOUNT_BANKING_DETAILS" ("BANKING_DETAILS_ID")
);

CREATE OR REPLACE FORCE VIEW "CCLA_ACCOUNT_ACTIONS_FULL" ("ACCOUNT_ACTION_ID", "SOURCE_ACC_NUM_EXT", "SOURCE_ACC_COMPANY", "SOURCE_ACC_CLIENT_ID", "SOURCE_ACC_NUM", "SOURCE_ACC_FUND", "SOURCE_ACC_SUBTITLE", "SOURCE_ACC_CASH", "SOURCE_ACC_UNITS", "SOURCE_ACC_CORR_ID", "SOURCE_ACC_INCOME_DIST_METHOD", "SOURCE_ACC_IS_EXTERNAL", "SOURCE_ACC_SHARE_CLASS", "DEST_ACC_NUM_EXT", "DEST_ACC_COMPANY", "DEST_ACC_CLIENT_ID", "DEST_ACC_NUM", "DEST_ACC_FUND", "DEST_ACC_SUBTITLE", "DEST_ACC_CASH", "DEST_ACC_UNITS", "DEST_ACC_CORR_ID", "DEST_ACC_INCOME_DIST_METHOD", "DEST_ACC_IS_EXTERNAL", "DEST_ACC_SHARE_CLASS", "BANKING_DETAILS_ID", "DOCNAME", "USER_ID", "ACTION", "STATUS", "SUSPENDED", "COMPLETED", "JOB_ID", "SUBMITTED_FOR_AUTH", "BATCH_ERRORS", "AURORA_BATCH_ID", "AUTH_STATUS", "DATE_ADDED", "LAST_UPDATED", "WITH_ACC_NUMBER", "WITH_SORT_CODE", "WITH_ACC_NAME", "INC_ACC_NUMBER", "INC_SORT_CODE", "INC_ACC_NAME", "MANDATED_ACC_COMPANY", "MANDATED_ACC_NUM_EXT")
AS
  SELECT act."ACCOUNT_ACTION_ID",
    act."SOURCE_ACC_NUM_EXT",
    act."SOURCE_ACC_COMPANY",
    act."SOURCE_ACC_CLIENT_ID",
    act."SOURCE_ACC_NUM",
    act."SOURCE_ACC_FUND",
    act."SOURCE_ACC_SUBTITLE",
    act."SOURCE_ACC_CASH",
    act."SOURCE_ACC_UNITS",
    act."SOURCE_ACC_CORR_ID",
    act."SOURCE_ACC_INCOME_DIST_METHOD",
    act."SOURCE_ACC_IS_EXTERNAL",
    act."SOURCE_ACC_SHARE_CLASS",
    act."DEST_ACC_NUM_EXT",
    act."DEST_ACC_COMPANY",
    act."DEST_ACC_CLIENT_ID",
    act."DEST_ACC_NUM",
    act."DEST_ACC_FUND",
    act."DEST_ACC_SUBTITLE",
    act."DEST_ACC_CASH",
    act."DEST_ACC_UNITS",
    act."DEST_ACC_CORR_ID",
    act."DEST_ACC_INCOME_DIST_METHOD",
    act."DEST_ACC_IS_EXTERNAL",
    act."DEST_ACC_SHARE_CLASS",
    act."BANKING_DETAILS_ID",
    act."DOCNAME",
    act."USER_ID",
    act."ACTION",
    act."STATUS",
    act."SUSPENDED",
    act."COMPLETED",
    act."JOB_ID",
    act."SUBMITTED_FOR_AUTH",
    act."BATCH_ERRORS",
    act."AURORA_BATCH_ID",
    act."AUTH_STATUS",
    act."DATE_ADDED",
    act."LAST_UPDATED",
    bnk.WITH_ACC_NUMBER,
    bnk.WITH_SORT_CODE,
    bnk.WITH_ACC_NAME,
    bnk.INC_ACC_NUMBER,
    bnk.INC_SORT_CODE,
    bnk.INC_ACC_NAME,
    bnk.MANDATED_ACC_COMPANY,
    bnk.MANDATED_ACC_NUM_EXT
  FROM CCLA_ACCOUNT_ACTIONS act
  LEFT JOIN CCLA_ACCOUNT_BANKING_DETAILS bnk
  ON (act.BANKING_DETAILS_ID = bnk.BANKING_DETAILS_ID);
	
CREATE TABLE "CCLA_ACCOUNT_ACTIONS_AUDIT" (
	
	"AUDIT_ID"					NUMBER(15,0) NOT NULL ENABLE,
	"ACCOUNT_ACTION_ID"         NUMBER(12,0) NOT NULL ENABLE,
	
	"ACTION"					VARCHAR2(25 CHAR),
	"DESCRIPTION"				VARCHAR2(60 CHAR),
	"USER_ID"					VARCHAR2(48 CHAR),
	"ACTION_DATE"				TIMESTAMP(6),
	
	CONSTRAINT "ACCOUNT_ACTION_AUDIT_PK" 		PRIMARY KEY ("AUDIT_ID")
);
  