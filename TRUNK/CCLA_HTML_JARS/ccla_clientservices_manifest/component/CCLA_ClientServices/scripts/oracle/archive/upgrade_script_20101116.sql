/* Schema update script - 04/11/2010 */






DROP PUBLIC SYNONYM REF_ORG_SOURCE;
DROP PUBLIC SYNONYM ORG_REFERENCES;
DROP PUBLIC SYNONYM REF_ORG_IDENTIFIERS;

ALTER TABLE PERSON RENAME COLUMN SECOND_NAME TO LAST_NAME;

/* Missing foreign key in ACCOUNT_VALUE table */
ALTER TABLE ACCOUNT_VALUE ADD CONSTRAINT ACCOUNT_ACCOUNTVALUE_FK FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID)
/


/********************************/
/* ACCOUNT */

ALTER TABLE ACCOUNT DROP COLUMN ACC_ACCOUNT_CODE;

/********************************/
/* REF_DATA_SOURCE */

/* New Data Source table. Replaces Org Source. */
CREATE TABLE REF_DATA_SOURCE(
  DATA_SOURCE_ID Number(10,0) CONSTRAINT DATASOURCE_ID_NN NOT NULL,
  DATA_SOURCE_NAME Varchar2(30 CHAR) CONSTRAINT DATASOURCENAME_NN NOT NULL
);

ALTER TABLE REF_DATA_SOURCE ADD CONSTRAINT DATASOURCE_PK PRIMARY KEY (DATA_SOURCE_ID)
/

COMMENT ON TABLE REF_DATA_SOURCE IS 'The original source that the organisation was loaded or created from (e.g. Aurora, specific spreadsheet, UI, etc)'
/

/

REM INSERTING into REF_DATA_SOURCE
Insert into REF_DATA_SOURCE (DATA_SOURCE_ID,DATA_SOURCE_NAME) values (1,'Aurora');
Insert into REF_DATA_SOURCE (DATA_SOURCE_ID,DATA_SOURCE_NAME) values (2,'User');
Insert into REF_DATA_SOURCE (DATA_SOURCE_ID,DATA_SOURCE_NAME) values (3,'Local Authority spreadsheet');
Insert into REF_DATA_SOURCE (DATA_SOURCE_ID,DATA_SOURCE_NAME) values (4,'Public Sector spreadsheet');
Insert into REF_DATA_SOURCE (DATA_SOURCE_ID,DATA_SOURCE_NAME) values (5,'Guidestar');

/********************************/
/* RELATION_PROPERTY tables */

/* Rework of Relation Property/Property Applied tables. Drop current tables first. */

DROP TABLE PROPERTY_APPLIED;
DROP TABLE REF_RELATION_PROPERTY;
DROP TABLE REF_RELATION_PROPERTY_NAMES;

CREATE TABLE REF_PROPERTY (
  PROPERTY_ID Number(6,0) CONSTRAINT PROPERTYID_NN NOT NULL,
  PROPERTY_NAME Varchar2(30 CHAR) CONSTRAINT PROPERTYNAMEID_NN NOT NULL
)
/

ALTER TABLE REF_PROPERTY ADD CONSTRAINT PROPERTY_PK PRIMARY KEY (PROPERTY_ID)
/

COMMENT ON TABLE REF_PROPERTY IS 'Contains a list of the Properties that can be applied to a Relation'
/

REM INSERTING into REF_PROPERTY
Insert into REF_PROPERTY (PROPERTY_ID,PROPERTY_NAME) values (1,'Default');

CREATE TABLE REF_RELATION_PROPERTY(
  RELATION_PROPERTY_ID Number(6,0) CONSTRAINT RELPROP_RELPROPID_NN NOT NULL,
  RELATION_NAME_ID Number(6,0) CONSTRAINT RELPROP_RELNAMEID_NN NOT NULL,
  PROPERTY_ID Number(6,0) CONSTRAINT RELPROP_PROPID_NN NOT NULL
)
/

ALTER TABLE REF_RELATION_PROPERTY ADD CONSTRAINT RELAPROP_PK PRIMARY KEY (RELATION_PROPERTY_ID)
/

ALTER TABLE REF_RELATION_PROPERTY ADD CONSTRAINT PROPERTY_RELATIONPROPERTY_FK FOREIGN KEY (PROPERTY_ID) REFERENCES REF_PROPERTY (PROPERTY_ID)
/
ALTER TABLE REF_RELATION_PROPERTY ADD CONSTRAINT RELPROP_RELNAME_FK FOREIGN KEY (RELATION_NAME_ID) REFERENCES REF_RELATION_NAMES (RELATION_NAME_ID)
/

COMMENT ON TABLE REF_RELATION_PROPERTY IS 'Stores the mapping of which Properties have been assigned to specific RelationNames. e.g the Employee Relation can have a JobTitle Property'
/

CREATE TABLE RELATION_PROPERTY_APPLIED(
  PROPERTY_APPLIED_ID Number(15,0) CONSTRAINT PROPAPPLIED_PROPAPPLIEDID_NN NOT NULL,
  RELATION_PROPERTY_ID Number(6,0) CONSTRAINT PROPAPPLIED_RELPROPID_NN NOT NULL,
  RELATION_ID Number(38,0) CONSTRAINT PROPAPPLIED_RELID_NN NOT NULL,
  DATE_ADDED Timestamp(6) CONSTRAINT PROPAPPLIED_DATEADDED_NN NOT NULL,
  PROPERTY_VALUE Varchar2(30 )
)
/

CREATE UNIQUE INDEX RELATIONPROPERTYAPPLIED_UQ ON RELATION_PROPERTY_APPLIED (RELATION_PROPERTY_ID,RELATION_ID)
/
ALTER TABLE RELATION_PROPERTY_APPLIED ADD CONSTRAINT PROPERTYAPPLIED_PK PRIMARY KEY (PROPERTY_APPLIED_ID)
/
ALTER TABLE RELATION_PROPERTY_APPLIED ADD CONSTRAINT RELPROPAPPL_REL_FK FOREIGN KEY (RELATION_ID) REFERENCES RELATIONS (RELATION_ID)
/
ALTER TABLE RELATION_PROPERTY_APPLIED ADD CONSTRAINT RELPROPAPPL_RELPROP_FK FOREIGN KEY (RELATION_PROPERTY_ID) REFERENCES REF_RELATION_PROPERTY (RELATION_PROPERTY_ID)
/

COMMENT ON TABLE RELATION_PROPERTY_APPLIED IS 'Mapping between Relation Properties (RELATION_PROPERTY entries) to Relations (RELATIONS entries).

Each mapping has an optional Value. So for a ''Job Title'' relation property, the value would be the actual job title, e.g. ''Treasurer''

A particular Relation Property may only be linked to a particular Relation once.';

/********************************/
/* REF_ELEMENT_TYPE */

/* New table: REF_ELEMENT_TYPE */
CREATE TABLE REF_ELEMENT_TYPE(
  ELEMENT_TYPE_ID Number(10,0) CONSTRAINT ELEMTYPEID_NN NOT NULL,
  ELEMENT_TYPE_NAME Varchar2(12 CHAR) CONSTRAINT ELEMTYPENAME_NN NOT NULL
);



ALTER TABLE REF_ELEMENT_TYPE ADD CONSTRAINT ELEMENTTYPE_PK PRIMARY KEY (ELEMENT_TYPE_ID)
/

COMMENT ON TABLE REF_ELEMENT_TYPE IS 'List of all the possible Element Types'
/

/* Add ELEMENT_TYPE data. */
REM INSERTING into REF_ELEMENT_TYPE
Insert into REF_ELEMENT_TYPE (ELEMENT_TYPE_ID,ELEMENT_TYPE_NAME) values (1,'Organisation');
Insert into REF_ELEMENT_TYPE (ELEMENT_TYPE_ID,ELEMENT_TYPE_NAME) values (2,'Person');
Insert into REF_ELEMENT_TYPE (ELEMENT_TYPE_ID,ELEMENT_TYPE_NAME) values (3,'Account');
Insert into REF_ELEMENT_TYPE (ELEMENT_TYPE_ID,ELEMENT_TYPE_NAME) values (4,'BankAccount');


ALTER TABLE REF_RELATION_NAMES RENAME COLUMN "ELEMENT_RELATION_TYPE_ID" TO "RELATION_TYPE_ID";

/********************************/
/* REF_COUNTRY */

/* Change to REF_COUNTRY */
ALTER TABLE REF_COUNTRY RENAME COLUMN "COUNTRY_ISO_ALPHA2_CODE" TO "ISO_CODE_ALPHA2";





/********************************/
/* ELEMENT */

/* ELEMENT table updates, movement of SOURCE_IDs to ELEMENT table */



ALTER TABLE "ELEMENT" ADD (
  ELEMENT_TYPE_ID Number(10,0),
  KYC_SCORE Number(38,0) DEFAULT 0,
  DATA_SOURCE_ID Number(10,0)
);

COMMENT ON TABLE ELEMENT IS 'An element is a virtual concept to allow physical entities to be dynamically related to another entity. It can be any one of the following object types: person, organisation, CCLA account, bank account.'
/
COMMENT ON COLUMN ELEMENT.PREFERRED_CONTACTMETHOD IS 'Indicates the elements preferred method of contact (i.e. phone, email, etc) '
/
COMMENT ON COLUMN ELEMENT.DO_NOT_CONTACT_FLAG IS 'Flag to indicate that this element is not to be contacted for marketing purposes.'
/
COMMENT ON COLUMN ELEMENT.KYC_SCORE IS 'Computed field that stores the sum of all the Identifiers and Attributes assigned to the Element that is available for the generation of Rules (i.e RuleFields).

The value in this field must be maintained by triggers on the Attributes and Identifiers tables.'
/

/* Movement of Org Source IDs to Element table. */
UPDATE ELEMENT elem SET (DATA_SOURCE_ID) = 
(SELECT ORG_SOURCE_ID from ORGANISATION org WHERE org.ORGANISATION_ID = elem.ELEMENT_ID); 

/* Set Data Source IDs of Person elements from GuideStar */
UPDATE ELEMENT elem SET (DATA_SOURCE_ID) = 5
WHERE elem.ELEMENT_ID IN
(SELECT p.PERSON_ID FROM PERSON p WHERE p.PERSON_ACCOUNT_CODE LIKE 'GUIP%'); 

/* Set Data Source IDs of Person elements from Aurora */
UPDATE ELEMENT elem SET (DATA_SOURCE_ID) = 1
WHERE elem.ELEMENT_ID IN
(SELECT p.PERSON_ID FROM PERSON p
WHERE p.DATE_ADDED < TO_DATE('01/10/2010 19:50', 'dd/mm/yyyy hh24:mi')); 


ALTER TABLE ORGANISATION RENAME COLUMN GROSS_DISTRIBUTION_NUMBER_ TO GROSS_DISTRIBUTION_NUMBER;
ALTER TABLE ORGANISATION DROP COLUMN ORG_SOURCE_ID;




/* Transfer of Element Type string data in Element table to normalized ID values */
UPDATE ELEMENT SET (ELEMENT_TYPE_ID) = 
(SELECT REF_ELEMENT_TYPE.ELEMENT_TYPE_ID FROM REF_ELEMENT_TYPE
WHERE ELEMENT.ELEMENT_TYPE = REF_ELEMENT_TYPE.ELEMENT_TYPE_NAME);

/* Now drop unused ELEMENT_TYPE column. */
ALTER TABLE ELEMENT DROP COLUMN ELEMENT_TYPE;

/* Now add non-null constraint on ELEMENT_TYPE_ID */
alter table "ELEMENT" modify (ELEMENT_TYPE_ID Number(10,0) CONSTRAINT ELEMENT_TYPEID_NN NOT NULL);
alter table "ELEMENT" modify (KYC_SCORE Number(38,0) CONSTRAINT ELEMENT_KYCSCORE_NN NOT NULL);

/* New foreign keys for Element table */
ALTER TABLE ELEMENT ADD CONSTRAINT ELEMENT_ELEMENTTYPE_FK FOREIGN KEY (ELEMENT_TYPE_ID) REFERENCES REF_ELEMENT_TYPE (ELEMENT_TYPE_ID);
ALTER TABLE ELEMENT ADD CONSTRAINT DATASOURCE_ELEMENT_FK FOREIGN KEY (DATA_SOURCE_ID) REFERENCES REF_DATA_SOURCE (DATA_SOURCE_ID);

DROP TABLE REF_ORG_SOURCE;

/* Replace REF_RELATION_TYPES table. */
CREATE TABLE REF_RELATION_TYPES_NEW (
  RELATION_TYPE_ID Number(6,0) CONSTRAINT RELTYPES_ID_NN NOT NULL,
  RELATION_LABEL Varchar2(32 CHAR) CONSTRAINT RELTYPES_LABEL_NN NOT NULL,
  ELEMENT_TYPE_ID_1 Number(10,0) CONSTRAINT RELTYPES_TYPEID1_NN NOT NULL,
  ELEMENT_TYPE_ID_2 Number(10,0) CONSTRAINT RELTYPES_TYPEID2_NN NOT NULL
);


/* Drop FK constraint to old relation types table */
alter table REF_RELATION_NAMES drop constraint RELATIONTYPES_RELATIONNAMES_FK;


/* Populate new table*/
insert into REF_RELATION_TYPES_NEW
SELECT relt.element_relation_type_id AS RELATION_TYPE_ID, RELT.ELEMENT_LABEL AS RELATION_LABEL,
e1.element_type_id AS ELEMENT_TYPE_ID_1,
e2.element_type_id AS ELEMENT_TYPE_ID_2
FROM REF_RELATION_TYPES relt 
INNER JOIN REF_ELEMENT_TYPE e1 ON (relt.element1_type = e1.element_type_name)
INNER JOIN REF_ELEMENT_TYPE e2 ON (relt.element2_type = e2.element_type_name)
ORDER BY relt.element_relation_type_id;



/* Switch to new table */
DROP TABLE REF_RELATION_TYPES;
ALTER TABLE REF_RELATION_TYPES_NEW RENAME TO REF_RELATION_TYPES;

-- Create indexes for table REF_RELATION_TYPES
CREATE UNIQUE INDEX RELATIONTYPES_UQ ON REF_RELATION_TYPES (ELEMENT_TYPE_ID_1,ELEMENT_TYPE_ID_2)
/
-- Add keys for table REF_RELATION_TYPES
ALTER TABLE REF_RELATION_TYPES ADD CONSTRAINT RELATIONTYPES_PK PRIMARY KEY (RELATION_TYPE_ID)
/

ALTER TABLE REF_RELATION_TYPES ADD CONSTRAINT ELEMENTTYPE_RELATIONTYPES_1_FK FOREIGN KEY (ELEMENT_TYPE_ID_1) REFERENCES REF_ELEMENT_TYPE (ELEMENT_TYPE_ID)
/
ALTER TABLE REF_RELATION_TYPES ADD CONSTRAINT ELEMENTTYPE_RELATIONTYPES_2_FK FOREIGN KEY (ELEMENT_TYPE_ID_2) REFERENCES REF_ELEMENT_TYPE (ELEMENT_TYPE_ID)
/

-- Table and Columns comments section
COMMENT ON TABLE REF_RELATION_TYPES IS 'List of possible Element Type pairings (e.g. Person -> Person, Organisation -> Person)'
/

/* Add FK constraint to new relation types table */
ALTER TABLE REF_RELATION_NAMES ADD CONSTRAINT RELATIONTYPES_RELATIONNAMES_FK FOREIGN KEY (RELATION_TYPE_ID) REFERENCES REF_RELATION_TYPES (RELATION_TYPE_ID);


/********************************/
/* REF_ELEMENT_IDENTIFIERS */

/* New tables to support KYC scoring/rules. */

/* Replacement table for REF_ORG_IDENTIFIERS */
CREATE TABLE REF_ELEMENT_IDENTIFIERS(
  ELEMENT_IDENTIFIER_ID Number(10,0) CONSTRAINT ELEMENTIDENTIFIERID_NN NOT NULL,
  ELEMENT_TYPE_ID Number(10,0) CONSTRAINT ELEMIDENTIFIERS_TYPEID_NN NOT NULL,
  IDENTIFIER_NAME Varchar2(30 ) CONSTRAINT ELEMENTIDENTIFIERNAME_NN NOT NULL
)
/
ALTER TABLE REF_ELEMENT_IDENTIFIERS ADD CONSTRAINT ELEMENTIDENTIFERS_PK PRIMARY KEY (ELEMENT_IDENTIFIER_ID)
/
COMMENT ON TABLE REF_ELEMENT_IDENTIFIERS IS 'List of all the possible identifiers that may be used to uniquely identify an organisation (i.e Charity registration Number, ONS)'
/
COMMENT ON COLUMN REF_ELEMENT_IDENTIFIERS.IDENTIFIER_NAME IS 'i.e. Charity Registration Number, ONS number, etc'
/
/
ALTER TABLE REF_ELEMENT_IDENTIFIERS ADD CONSTRAINT ELEMIDS_ELEMTYPE_FK FOREIGN KEY (ELEMENT_TYPE_ID) REFERENCES REF_ELEMENT_TYPE (ELEMENT_TYPE_ID)
/

REM INSERTING into REF_ELEMENT_IDENTIFIERS
Insert into REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID,ELEMENT_TYPE_ID,IDENTIFIER_NAME) values (1,1,'Charity Ref');
Insert into REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID,ELEMENT_TYPE_ID,IDENTIFIER_NAME) values (2,1,'ONS No');
Insert into REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID,ELEMENT_TYPE_ID,IDENTIFIER_NAME) values (3,1,'Company Ref');
Insert into REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID,ELEMENT_TYPE_ID,IDENTIFIER_NAME) values (4,1,'Crockfords');
Insert into REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID,ELEMENT_TYPE_ID,IDENTIFIER_NAME) values (5,1,'HMRC No');

/********************************/
/* ELEMENT_IDENTIFIERS_APPLIED */

/* Replacement table for ORG_REFERENCES */
CREATE TABLE ELEMENT_IDENTIFIERS_APPLIED(
  ELEMENT_ID Number(15,0) CONSTRAINT ELEMIDAPPL_ELEMENTID_NN NOT NULL,
  ELEMENT_IDENTIFIER_ID Number(10,0) CONSTRAINT ELEMIDAPPL_ELEMIDENTIFER_NN NOT NULL,
  IDENTIFIER_VALUE Varchar2(50 ) CONSTRAINT ELEMIDAPPL_IDVALUE_NN NOT NULL,
  DATE_ADDED Date CONSTRAINT ELEMIDAPPL_DATEADDED_NN NOT NULL
)
/

ALTER TABLE ELEMENT_IDENTIFIERS_APPLIED ADD CONSTRAINT ELEMENTIDENTIFIER_PK PRIMARY KEY (ELEMENT_IDENTIFIER_ID,ELEMENT_ID)
/
-- Create indexes for table ELEMENT_IDENTIFIERS_APPLIED
CREATE INDEX ELEMIDAPPL_ELEMENTID_IX ON ELEMENT_IDENTIFIERS_APPLIED (ELEMENT_ID)
/
CREATE INDEX ELEMIDAPPL_IDENTIFERID_IX ON ELEMENT_IDENTIFIERS_APPLIED (ELEMENT_IDENTIFIER_ID)
/



COMMENT ON TABLE ELEMENT_IDENTIFIERS_APPLIED IS 'Any reference number that can be assigned to an organisation to help with identification purposes (e.g. ONS number, Charity reference Number, etc)'
/
ALTER TABLE ELEMENT_IDENTIFIERS_APPLIED ADD CONSTRAINT IDENTIFIERSAPPLIED_IDENT_FK FOREIGN KEY (ELEMENT_IDENTIFIER_ID) REFERENCES REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID)
/
ALTER TABLE ELEMENT_IDENTIFIERS_APPLIED ADD CONSTRAINT IDENTIFIERSAPPLIED_ELEMENT_FK FOREIGN KEY (ELEMENT_ID) REFERENCES ELEMENT (ELEMENT_ID)
/




/* insert data into ELEMENT_IDENTIFIERS_APPLIED */
insert into ELEMENT_IDENTIFIERS_APPLIED
SELECT oref.organisation_id AS ELEMENT_ID, 
oref.org_identifier_id AS ELEMENT_IDENTIFIER_ID, 
OREF.IDENTIFIER_VALUE AS IDENTIFIER_VALUE, 
SYSDATE AS DATE_ADDED
FROM ORG_REFERENCES oref;

/* Drop old tables */
ALTER TABLE ORG_REFERENCES DROP CONSTRAINT ORGIDENTIFERS_ORGREFERENCES_FK;

DROP TABLE REF_ORG_IDENTIFIERS;
DROP TABLE ORG_REFERENCES;

/********************************/
/* REF_ELEMENT_ATTRIBUTES */

/* New table Element Attributes. */
CREATE TABLE REF_ELEMENT_ATTRIBUTES(
  ELEMENT_ATTRIBUTE_ID Number(15,0) CONSTRAINT ELEMENTATTR_ID_NN NOT NULL,
  ELEMENT_ATTRIBUTE_NAME Varchar2(30 ) CONSTRAINT ELEMENTATTR_NAME_NN NOT NULL,
  ELEMENT_TYPE_ID Number(10,0) CONSTRAINT ELEMENTATTR_TYPEID_NN NOT NULL,
  ELEMENT_ATTRIBUTE_DESCRIPTION Varchar2(200 ),
  SET_BY_USER Integer DEFAULT 1 CONSTRAINT ELEMENTATTR_SETBYUSER_NN NOT NULL
        CONSTRAINT ELEMENTATTRIBUTE_SETBYUSER_CK CHECK (SET_BY_USER IN (0,1))
)
/

ALTER TABLE REF_ELEMENT_ATTRIBUTES ADD CONSTRAINT ELEMENTATTRIBUTE_PK PRIMARY KEY (ELEMENT_ATTRIBUTE_ID)
/
ALTER TABLE REF_ELEMENT_ATTRIBUTES ADD CONSTRAINT ELEMATTRS_ELEMTYPE_FK FOREIGN KEY (ELEMENT_TYPE_ID) REFERENCES REF_ELEMENT_TYPE (ELEMENT_TYPE_ID)
/

COMMENT ON COLUMN REF_ELEMENT_ATTRIBUTES.SET_BY_USER IS 'Indicates whether the Element Attribute is to be explicitly set by a User, or if the Attribute will be automatically calculated by a back-end function (1-> Set By User, 0-> Automatically Calculated; Default Value -> 1)'
/

/********************************/
/* ELEMENT_ATTRIBUTE_APPLIED */

CREATE TABLE ELEMENT_ATTRIBUTE_APPLIED(
  ELEMENT_ID Number(15,0) CONSTRAINT ELEMATTRAPPL_ELEM_ID_NN NOT NULL,
  ELEMENT_ATTRIBUTE_ID Number(15,0) CONSTRAINT ELEMATTRAPPL_ATTR_ID_NN NOT NULL,
  DATE_ADDED Date CONSTRAINT ELEMATTRAPPL_DATEADDED_NN NOT NULL
)
/

ALTER TABLE ELEMENT_ATTRIBUTE_APPLIED ADD CONSTRAINT ELEMENTATTRIBUTEAPPLIED_PK PRIMARY KEY (ELEMENT_ATTRIBUTE_ID,ELEMENT_ID)
/
ALTER TABLE ELEMENT_ATTRIBUTE_APPLIED ADD CONSTRAINT ATTRAPPL_ELEMATTR_FK FOREIGN KEY (ELEMENT_ATTRIBUTE_ID) REFERENCES REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID)
/
ALTER TABLE ELEMENT_ATTRIBUTE_APPLIED ADD CONSTRAINT ATTRAPPL_ELEM_FK FOREIGN KEY (ELEMENT_ID) REFERENCES ELEMENT (ELEMENT_ID)
/

CREATE TABLE RULE_FIELDS(
  RULE_FIELD_ID Number(15,0) CONSTRAINT RULEFIELDID_NN NOT NULL,
  ELEMENT_IDENTIFIER_ID Number(10,0),
  ELEMENT_ATTRIBUTE_ID Number(15,0),
  RULE_FIELD_VALUE Number(38,0) AS (POWER(2,RULE_FIELD_ID-1)) CONSTRAINT RULEFIELDVALUE_NN NOT NULL,
  CONSTRAINT RULEFIELD_ID_ATTR_NN CHECK ((ELEMENT_IDENTIFIER_ID IS NULL AND ELEMENT_ATTRIBUTE_ID IS NOT NULL)
OR
(ELEMENT_IDENTIFIER_ID IS NOT NULL AND ELEMENT_ATTRIBUTE_ID IS NULL)
)
)
/

ALTER TABLE RULE_FIELDS ADD CONSTRAINT RULEFIELD_PK PRIMARY KEY (RULE_FIELD_ID)
/

ALTER TABLE RULE_FIELDS ADD CONSTRAINT RULEFIELD_RULEFIELDVALUE_UQ UNIQUE (RULE_FIELD_VALUE)
/
ALTER TABLE RULE_FIELDS ADD CONSTRAINT RULEFIELDS_ELEMIDS_FK FOREIGN KEY (ELEMENT_IDENTIFIER_ID) REFERENCES REF_ELEMENT_IDENTIFIERS (ELEMENT_IDENTIFIER_ID)
/
ALTER TABLE RULE_FIELDS ADD CONSTRAINT RULEFIELDS_ELEMATTR_FK FOREIGN KEY (ELEMENT_ATTRIBUTE_ID) REFERENCES REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID)
/

COMMENT ON TABLE RULE_FIELDS IS 'Flag to indicate that the Attribute is to be made available for use as a check condition in the KYC (Know Your Client) rules. (Available ->1, Not Available -> 0; Default Value -> 0)'
/



CREATE TABLE RULES(
  RULE_ID Number(15,0) CONSTRAINT RULEID_NN NOT NULL,
  FUND_CODE Varchar2(2 CHAR),
  CATEGORY_ID Number(3,0),
  RELATION_NAME_ID Number(6,0),
  KYC_SCORE Number(38,0) DEFAULT 0 CONSTRAINT RULEKYCSCORE_NN NOT NULL,
  CONSTRAINT FUND_CATEGORY_NN CHECK (NOT (FUND_CODE IS NULL AND CATEGORY_ID IS NULL))
)
/

-- Create indexes for table RULES

CREATE UNIQUE INDEX RULE_PARAMS_UQ ON RULES (RELATION_NAME_ID,CATEGORY_ID,FUND_CODE)
/

ALTER TABLE RULES ADD CONSTRAINT RULE_PK PRIMARY KEY (RULE_ID)
/

ALTER TABLE RULES ADD CONSTRAINT FUND_RULES_FK FOREIGN KEY (FUND_CODE) REFERENCES FUND (FUND_CODE)
/
ALTER TABLE RULES ADD CONSTRAINT ORGCATEGORY_RULES_FK FOREIGN KEY (CATEGORY_ID) REFERENCES REF_ORG_CATEGORY (CATEGORY_ID)
/
ALTER TABLE RULES ADD CONSTRAINT RELATIONNAMES_RULES_FK FOREIGN KEY (RELATION_NAME_ID) REFERENCES REF_RELATION_NAMES (RELATION_NAME_ID)
/

COMMENT ON COLUMN RULES.KYC_SCORE IS 'Computed field that stores the sum of all the RuleFieldsApplied to the Rule.

The value in this field must be maintained by triggers on the RuleFieldsApplied table.'
/

CREATE TABLE RULE_FIELDS_APPLIED(
  RULE_FIELD_ID Number(15,0) CONSTRAINT RULEFIELDSAPPL_FIELDID_NN NOT NULL,
  RULE_ID Number(15,0) CONSTRAINT RULEFIELDSAPPL_RULEID_NN NOT NULL
)
/

-- Add keys for table RULE_FIELDS_APPLIED

ALTER TABLE RULE_FIELDS_APPLIED ADD CONSTRAINT RULEFIELDSAPPLIED_PK PRIMARY KEY (RULE_FIELD_ID,RULE_ID)
/

ALTER TABLE RULE_FIELDS_APPLIED ADD CONSTRAINT RULEFIELDSAPPL_RULEFIELS_FK FOREIGN KEY (RULE_FIELD_ID) REFERENCES RULE_FIELDS (RULE_FIELD_ID)
/
ALTER TABLE RULE_FIELDS_APPLIED ADD CONSTRAINT RULEFIELDSAPPL_RULES_FK FOREIGN KEY (RULE_ID) REFERENCES RULES (RULE_ID)
/

CREATE TABLE FUND_ELIGIBILITY(
  CATEGORY_ID Number(3,0) CONSTRAINT FUNDELIGIBILITY_CATID_NN NOT NULL,
  FUND_CODE Varchar2(2 CHAR) CONSTRAINT FUNDELIGIBILITY_FUNDCODE_NN NOT NULL
)
/

-- Add keys for table FUND_ELIGIBILITY

ALTER TABLE FUND_ELIGIBILITY ADD CONSTRAINT FUNDELIGIBILITY_PK PRIMARY KEY (CATEGORY_ID,FUND_CODE)
/
ALTER TABLE FUND_ELIGIBILITY ADD CONSTRAINT FUNDELIGIBILITY_ORGCATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES REF_ORG_CATEGORY (CATEGORY_ID)
/
ALTER TABLE FUND_ELIGIBILITY ADD CONSTRAINT FUND_FUNDELIGIBILITY_FK FOREIGN KEY (FUND_CODE) REFERENCES FUND (FUND_CODE)
/

CREATE OR REPLACE PUBLIC SYNONYM ELEMENT_IDENTIFIERS_APPLIED FOR ELEMENT_IDENTIFIERS_APPLIED;
CREATE OR REPLACE PUBLIC SYNONYM REF_ELEMENT_IDENTIFIERS FOR REF_ELEMENT_IDENTIFIERS;
CREATE OR REPLACE PUBLIC SYNONYM RELATION_PROPERTY_APPLIED FOR RELATION_PROPERTY_APPLIED;
CREATE OR REPLACE PUBLIC SYNONYM REF_ELEMENT_ATTRIBUTES FOR REF_ELEMENT_ATTRIBUTES;
CREATE OR REPLACE PUBLIC SYNONYM ELEMENT_ATTRIBUTE_APPLIED FOR ELEMENT_ATTRIBUTE_APPLIED;
CREATE OR REPLACE PUBLIC SYNONYM RULE_FIELDS FOR RULE_FIELDS;
CREATE OR REPLACE PUBLIC SYNONYM "RULES" FOR "RULES";
CREATE OR REPLACE PUBLIC SYNONYM RULE_FIELDS_APPLIED FOR RULE_FIELDS_APPLIED;
CREATE OR REPLACE PUBLIC SYNONYM FUND_ELIGIBILITY FOR FUND_ELIGIBILITY;
CREATE OR REPLACE PUBLIC SYNONYM REF_DATA_SOURCE FOR REF_DATA_SOURCE;
CREATE OR REPLACE PUBLIC SYNONYM REF_PROPERTY FOR REF_PROPERTY;
CREATE OR REPLACE PUBLIC SYNONYM REF_ELEMENT_TYPE FOR REF_ELEMENT_TYPE;


-- rename all Primary key constraints that are like 'SYS_C%'
set serveroutput on
declare
  rename_sql varchar2(4000);
begin

  for pkey in (
      select t.constraint_name, t.constraint_type, t.table_name 
      from user_constraints t 
      where t.constraint_name like 'SYS_C%'
      and   t.constraint_type='P'
      )
  loop
    rename_sql := 'ALTER TABLE '|| pkey.table_name || ' RENAME CONSTRAINT '|| pkey.constraint_name||' TO '|| replace(pkey.table_name,'_') || '_PK';
    dbms_output.put_line(rename_sql);
    execute immediate (rename_sql);
	end loop;
end;
/

-- rename all NOT NULL constraints that are named like 'SYS_C%'
set serveroutput on size 100000

CREATE OR REPLACE FUNCTION CC (P_CONSTRAINT VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  FOR R1 IN (SELECT SEARCH_CONDITION FROM USER_CONSTRAINTS
             WHERE CONSTRAINT_NAME = P_CONSTRAINT) LOOP
      --DBMS_OUTPUT.PUT_LINE(R1.SEARCH_CONDITION);
     RETURN R1.SEARCH_CONDITION;
      EXIT;
  END LOOP;
  RETURN NULL;
END;
/

declare
  rename_sql varchar2(4000);
  new_name   varchar2(100);
begin

  for pkey in (
      select t.constraint_name, t.constraint_type, t.table_name,cols.column_name col_name
      from user_constraints t 
        inner join user_cons_columns cols on cols.constraint_name = t.constraint_name and cols.table_name = t.table_name
      where t.constraint_name like 'SYS_C%'
      and   t.constraint_type='C'
      and   cc(t.constraint_name) like '%NOT NULL%'
      )
  loop
    new_name := replace(replace(pkey.table_name,'REF_',''),'_') ||'_'||
                replace(pkey.col_name,'_')||'_NN';
    IF length(new_name) > 30 then
       new_name := replace(new_name,'DISTRIBUTION','DIST');
       new_name := replace(new_name,'CLASSIFICATION','CLASS');
       new_name := replace(new_name,'REFERENCES','REF');
       new_name := replace(new_name,'INCOME','INC');
       new_name := replace(new_name,'SERVICE','SERV');
			 new_name := replace(new_name,'DELIVERY','DEL');
			 new_name := replace(new_name,'IDENTIFIER','IDENT');
			 new_name := replace(new_name,'REGULAR','REG');
			 new_name := replace(new_name,'SCHEDULE','SCHED');
			 new_name := replace(new_name,'COUNTRYISOALPHA2CODE','ISOALPHA2CODE');
			 IF length(new_name) > 30 then
			 		   dbms_output.put_line('Invalid Length');
			 end if;
		end if;
    rename_sql := 'ALTER TABLE '|| pkey.table_name || ' RENAME CONSTRAINT '|| pkey.constraint_name||
		' TO '||new_name ;
    dbms_output.put_line(rename_sql);
    execute immediate (rename_sql);
  end loop;
end;
/

DROP FUNCTION CC;


-- rename all FK constraints that are named like 'SYS_C%'
set serveroutput on size 100000

declare
  rename_sql varchar2(4000);
  new_name   varchar2(100);
  alt_name   varchar2(100);
  v_check_name int;
	v_name_num   int := 1;
begin

  for pkey in (
      select t.constraint_name, t.constraint_type, t.table_name ,t1.table_name reftable_name
      from user_constraints t 
      inner join user_constraints t1 on t.r_constraint_name = t1.constraint_name
      where   t.constraint_type='R'
      )
  loop
    new_name := replace(replace(pkey.table_name,'REF_'),'_') ||'_'||
                replace(replace(pkey.reftable_name,'REF_'),'_')||'_FK';
    alt_name := replace(replace(pkey.reftable_name,'REF_'),'_') ||'_'||
                replace(replace(pkey.table_name,'REF_'),'_')||'_FK';            
    --IF length(new_name) > 30 then
       new_name := replace(new_name,'DISTRIBUTION','DIST');
       new_name := replace(new_name,'CLASSIFICATION','CLASS');
       new_name := replace(new_name,'REFERENCES','REF');
       new_name := replace(new_name,'INCOME','INC');
       new_name := replace(new_name,'SERVICE','SERV');
       new_name := replace(new_name,'DELIVERY','DEL');
       new_name := replace(new_name,'IDENTIFIER','ID');
       new_name := replace(new_name,'REGULAR','REG');
       new_name := replace(new_name,'SCHEDULE','SCHED');
       new_name := replace(new_name,'RELATION','REL');
       new_name := replace(new_name,'PROPERTY','PROP');
       new_name := replace(new_name,'CONTACT','CONT');
       new_name := replace(new_name,'ATTRIBUTE','ATT');
       new_name := replace(new_name,'ORGANISATION','ORG');
       new_name := replace(new_name,'ELEMENT','ELEM');
       new_name := replace(new_name,'FIELDS','FLDS');
       new_name := replace(new_name,'COUNTRYISOALPHA2CODE','ISOALPHA2CODE');
       IF length(new_name) > 30 then
              dbms_output.put_line('Invalid Length '||length(new_name)||' '||new_name);
       end if;
    --end if;
    if pkey.constraint_name <> new_name and pkey.constraint_name <> alt_name then
        select count(t.constraint_name)
        into v_check_name
        from user_constraints t where t.constraint_name=new_name;
        if v_check_name > 0 then 
          new_name := new_name ||'_'||v_name_num;
					v_name_num := v_name_num+1;
       end if;
      rename_sql := 'ALTER TABLE '|| pkey.table_name || ' RENAME CONSTRAINT '|| pkey.constraint_name||
      ' TO '||new_name ;
      dbms_output.put_line(rename_sql);
      execute immediate (rename_sql);
    end if;
  end loop;
end;
/
