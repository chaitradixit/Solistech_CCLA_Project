
-- Table REF_ELEMENT_ATTRIBUTE_TYPE
CREATE TABLE REF_ELEMENT_ATTRIBUTE_TYPE(
  ELEMENT_ATTRIBUTE_TYPE_ID Number(15,0) NOT NULL,
  ELEMENT_ATTRIBUTE_TYPE_NAME Varchar2(60 ) NOT NULL,
  ELEMENT_ATTRIBUTE_TYPE_DESC Varchar2(500 )
)
/

-- Add keys for table REF_ELEMENT_ATTRIBUTE_TYPE
ALTER TABLE REF_ELEMENT_ATTRIBUTE_TYPE ADD CONSTRAINT ELEMATTRIBTYPE_PK PRIMARY KEY (ELEMENT_ATTRIBUTE_TYPE_ID)
/

-- Table and Columns comments section
COMMENT ON TABLE REF_ELEMENT_ATTRIBUTE_TYPE IS 'Type list for Element Attributes, e.g. Marketing Details, Entity Verification, Relation Verification, IVS Checking'
/

-- Data load for new table
REM INSERTING into REF_ELEMENT_ATTRIBUTE_TYPE
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (1,'Entity Verification','Used for tagging verified sources and Entity Check overrides against Organisations');
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (2,'Relationship Verification','Used for overriding Relationship Verification/Checking against Organisations');
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (3,'IVS Checking','Used for overriding IVS Checking');
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (4,'Marketing Details','Marketing information');
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (5,'Misc Account Details','Account flags');
Insert into REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID,ELEMENT_ATTRIBUTE_TYPE_NAME,ELEMENT_ATTRIBUTE_TYPE_DESC) values (6,'Misc Organisation Details','Organisation flags and other information');


-- New columns in REF_ELEMENT_ATTRIBUTES
ALTER TABLE REF_ELEMENT_ATTRIBUTES ADD (
  ELEMENT_ATTRIBUTE_DATA_TYPE Varchar2(20 ),
  ELEMENT_ATTRIBUTE_TYPE_ID Number(15,0)
);

-- FK between DATATYPE and ELEMATTRIB
CREATE INDEX DATATYPE_ELEMATTRIB_IX ON REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_DATA_TYPE) 
/
ALTER TABLE REF_ELEMENT_ATTRIBUTES ADD CONSTRAINT DATATYPE_ELEMATTRIB_FK FOREIGN KEY (ELEMENT_ATTRIBUTE_DATA_TYPE) REFERENCES REF_DATA_TYPE (DATA_TYPE_NAME)
/

-- FK between ELEMATTRIBTYPE and ELEMATTRIB
CREATE INDEX ELEMATTRIBTYPE_ELEMATTRIB_IX ON REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_TYPE_ID) 
/
ALTER TABLE REF_ELEMENT_ATTRIBUTES ADD CONSTRAINT ELEMATTRIBTYPE_ELEMATTRIB_FK FOREIGN KEY (ELEMENT_ATTRIBUTE_TYPE_ID) REFERENCES REF_ELEMENT_ATTRIBUTE_TYPE (ELEMENT_ATTRIBUTE_TYPE_ID)
/

-- Grants/synonyms
CREATE OR REPLACE PUBLIC SYNONYM REF_ELEMENT_ATTRIBUTE_TYPE FOR CCLA.REF_ELEMENT_ATTRIBUTE_TYPE;
GRANT ALL ON REF_ELEMENT_ATTRIBUTE_TYPE TO UCMADMIN;

CREATE OR REPLACE PUBLIC SYNONYM REF_ELEMENT_ATTRIBUTES FOR CCLA.REF_ELEMENT_ATTRIBUTES;
GRANT ALL ON REF_ELEMENT_ATTRIBUTES TO UCMADMIN;


-- Assign groups to existing attributes

-- Entity Verification
UPDATE REF_ELEMENT_ATTRIBUTES SET ELEMENT_ATTRIBUTE_TYPE_ID = 1 
WHERE ELEMENT_ATTRIBUTE_ID >= 1 AND ELEMENT_ATTRIBUTE_ID <= 12;
UPDATE REF_ELEMENT_ATTRIBUTES SET ELEMENT_ATTRIBUTE_TYPE_ID = 1 
WHERE ELEMENT_ATTRIBUTE_ID >= 26 AND ELEMENT_ATTRIBUTE_ID <= 29;

-- Marketing Details
UPDATE REF_ELEMENT_ATTRIBUTES SET ELEMENT_ATTRIBUTE_TYPE_ID = 4 
WHERE (ELEMENT_ATTRIBUTE_ID >= 13 AND ELEMENT_ATTRIBUTE_ID <= 25) OR ELEMENT_ATTRIBUTE_ID = 30;

-- Set every data type to BOOL to begin with.
UPDATE REF_ELEMENT_ATTRIBUTES SET ELEMENT_ATTRIBUTE_DATA_TYPE = 'BOOL';

-- Set string types for marketing details, except for bool ones.
UPDATE REF_ELEMENT_ATTRIBUTES SET ELEMENT_ATTRIBUTE_DATA_TYPE = 'STRING'
WHERE ELEMENT_ATTRIBUTE_TYPE_ID = 4
AND ELEMENT_ATTRIBUTE_ID NOT IN (22, 25, 18);

-- Add NN constraints to new columns
ALTER TABLE REF_ELEMENT_ATTRIBUTES MODIFY (
  ELEMENT_ATTRIBUTE_DATA_TYPE Varchar2(20 ) CONSTRAINT ELEMATTRIB_DATATYPE_NN NOT NULL,
  ELEMENT_ATTRIBUTE_TYPE_ID Number(15,0) CONSTRAINT ELEMATTRIB_TYPE_NN NOT NULL
);

