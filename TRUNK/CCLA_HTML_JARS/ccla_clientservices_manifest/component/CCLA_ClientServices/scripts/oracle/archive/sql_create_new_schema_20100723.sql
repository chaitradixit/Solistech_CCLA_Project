/* New table schema 07/2010. Should supersede any related tables listed previously.
   Created by Katie Dent/Tom Marchant */

CREATE SEQUENCE  SEQ_ELEMENT_ID  			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 6000000 CACHE 20 NOORDER NOCYCLE;   
CREATE SEQUENCE  SEQ_ELEMENT_RELATION_ID 	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 3000000 CACHE 20 NOORDER NOCYCLE;

CREATE SEQUENCE  SEQ_CLIENT_AURORA_MAP_ID  	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_PERSON_AURORA_MAP_ID  	MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 

CREATE SEQUENCE  SEQ_CONTACT_ID 			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_ADDRESS_ID 			MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2000000 CACHE 20 NOORDER NOCYCLE; 
CREATE SEQUENCE  SEQ_BANK_ACCOUNT_ID 		MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1000000 CACHE 20 NOORDER NOCYCLE; 

CREATE SEQUENCE  CCLA_IDENTITY_CHECK_LOOKUP_SEQ MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER NOCYCLE;
  

/* 	Now in new schema as ELEMENT

	Core table for all Element IDs, as used by Person, Body
   and Account table entries. 
*/
CREATE TABLE "CCLA_ELEMENT"
(
	"ELEMENT_ID"	NUMBER(15,0) NOT NULL,
	"TYPE"			VARCHAR2(12 CHAR) NOT NULL,
	
	CONSTRAINT "ELEMENT_PK" PRIMARY KEY ("ELEMENT_ID") ENABLE
);

/* 	Now in new schema as ORGANISATION

	Represents a charity, organisation, church etc. 
	A subset of these will be in the CLIENTS table. 
	
	TODO: Confirm attributes with CCLA */ 
CREATE TABLE "CCLA_ENTITY"
(
	"ENTITY_ID"      		NUMBER(15,0),			/* Maps to existing ELEMENT_ID */
	"NAME"					VARCHAR2(255 CHAR),

	"TYPE_ID"				NUMBER(3,0),
	
	"SECTOR_ID"				NUMBER(15,0),
	"SUB_SECTOR_ID"			NUMBER(15,0),
		
	"CLASS_ID"				NUMBER(15,0),
	
	/*
	"SUBTYPE_ID"			NUMBER(5,0),
	*/
	
	"ONS_NUMBER"			VARCHAR2(20 CHAR),	/* Office of National Statistics no. */
	"COMPANY_REG_NUM"		VARCHAR2(15 CHAR),	/* Company Reg. no. */
	"CHARITY_COMM_REG_NUM"	VARCHAR2(20 CHAR),	/* Charity Commision Reg. no. */
	
	"PERSON_ID"				NUMBER(15,0), 		/* Will be used in future if CCLA offer personal investment accounts */
	
	"SOURCE"				VARCHAR2(15 CHAR), 	/* Source of Body data: Aurora, ONS, manual entry, etc. */
	
	"DATE_ADDED"			TIMESTAMP(6),
	"LAST_UPDATED" 			TIMESTAMP(6),
	
	CONSTRAINT				"CCLA_ENTITY_PK"			PRIMARY KEY ("ENTITY_ID") ENABLE,
	CONSTRAINT				"CCLA_ENTITY_FK"			FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE,
	
	CONSTRAINT 				"CCLA_ENTITY_TYPE_FK" 		FOREIGN KEY ("TYPE_ID") REFERENCES "CCLA_ENTITY_TYPE" ("TYPE_ID") ENABLE,
	
	/*
	CONSTRAINT 				"CCLA_ENTITY_SUBTYPE_FK" 	FOREIGN KEY ("SUBTYPE_ID") REFERENCES "CCLA_ENTITY_SUBTYPE" ("SUBTYPE_ID") ENABLE
	*/
);

/*  No longer part of schema.

	Registered CCLA clients. Must exist in CCLA_ENTITY table and
	be synced/reflected in Aurora.
   
   A single ENTITY may have a single associated CLIENT, this is
   a 1-to-1 mapping. The referenced ENTITY_ID in the Clients table
   functions as the Client table primary key.
   */
CREATE TABLE "CCLA_CLIENT"
(
	"ENTITY_ID"				NUMBER(15,0) NOT NULL,		/* Maps to existing ENTITY_ID */
	"CLIENT_ACCOUNT_CODE"	VARCHAR2(16 CHAR), 	/* Displayable ID */
	"NAME"					VARCHAR2(255 CHAR),
	
	"TYPE"					VARCHAR2(20 CHAR),	/* No yet used (future proofing) */
	"STATUS"				VARCHAR2(15 CHAR),	/* Active/Dormant */
	
	"DATE_ENROLLED"			TIMESTAMP(6),
	"LAST_UPDATED"			TIMESTAMP(6),
	
	CONSTRAINT "CCLA_CLIENT_PK"			PRIMARY KEY ("ENTITY_ID") ENABLE,
	CONSTRAINT "CCLA_CLIENT_ENTITY_FK" 	FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE
);

 /* Now in new schema as CLIENT_AURORA_MAP
 
	Maps CLIENT entries to Aurora 'client' data
 */
CREATE TABLE "CCLA_CLIENT_AURORA_MAP"
(
	"CLIENT_AURORA_MAP_ID"	NUMBER(15,0),		/* Uses sequence SEQ_CLIENT_AURORA_MAP */
	"CLIENT_ID"      		NUMBER(15,0), 		/* Body ID */
    "COMPANY"        		VARCHAR2(10 CHAR), 	/* Aurora client company */
	"CLIENT_NUMBER"		 	NUMBER(15,0), 		/* Aurora client number */
	
	CONSTRAINT "CLIENT_AURORA_MAP_PK" 	PRIMARY KEY ("CLIENT_AURORA_MAP_ID") ENABLE,
	CONSTRAINT "CCLA_CLIENT_AURORA_FK" 	FOREIGN KEY ("CLIENT_ID") REFERENCES "CCLA_CLIENT" ("ENTITY_ID") ENABLE
); 

/* Records entity validation check method/outcome */ 
CREATE TABLE "CCLA_ENTITY_CHECK"
(
	"ORGANISATION_ID"		NUMBER(15,0),
	"CHECK_TYPE"		    VARCHAR2(15 CHAR),
	"CHECK_SCORE"		    NUMBER(10,0),
	"CHECK_DATE"		    TIMESTAMP(6),
	
	CONSTRAINT "ENTITY_CHECK_PK" 	PRIMARY KEY ("ORGANISATION_ID") ENABLE,
	CONSTRAINT "ENTITY_CHECK_ORG_FK" foreign key ("ORGANISATION_ID") REFERENCES ORGANISATION("ORGANISATION_ID") ENABLE
);

/* 	Moved to new schema as PERSON

	Models individuals. */
CREATE TABLE "CCLA_PERSON"
  (
    "PERSON_ID"      NUMBER(15,0),		/* Maps to existing ELEMENT_ID */
	"ACCOUNT_CODE"	 VARCHAR2(16 CHAR), 	/* Displayable ID */
	
    "SALUTATION"     VARCHAR2(64 CHAR),
    "TITLE"          VARCHAR2(32 CHAR),
    "FIRST_NAME"     VARCHAR2(48 CHAR),
    "MIDDLE_NAME"    VARCHAR2(48 CHAR),
    "SECOND_NAME"    VARCHAR2(48 CHAR),
    "FULL_NAME"      VARCHAR2(255 CHAR),
    "QUALIFICATIONS" VARCHAR2(48 CHAR),
	"JOB_TITLE"		 VARCHAR2(64 CHAR),
    "DATE_OF_BIRTH"  TIMESTAMP (6),
    "GENDER"       	 VARCHAR2(32 CHAR),
    "TYPE"  		 VARCHAR2(32 CHAR), /* Not sure if this is needed. Keep for future proofing */
	
	"CONSENT_TO_AUTH"	NUMBER(1,0),	/* Determines whether this person has given explicit permission
										   for CCLA to run an Experian Authentication check */
	"IS_DECEASED"		NUMBER(1,0),
	
    "LAST_UPDATED" TIMESTAMP (6),
	
    CONSTRAINT "CCLA_PERSON_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
	CONSTRAINT "CCLA_PERSON_FK"	FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE,
	
	CONSTRAINT "ACCOUNT_CODE_UNIQUE" UNIQUE("ACCOUNT_CODE")
  );

 /* 
	Moved to new schema as PERSON_AURORA_MAP
	Maps PERSON entries to Aurora 'correspondent' data
	
	TODO: Add PK/index info */
CREATE TABLE "CCLA_PERSON_AURORA_MAP"
(
	"PERSON_AURORA_MAP_ID"	NUMBER(15,0),	/* Sourced from SEQ_PERSON_AURORA_MAP_ID sequence */
	"PERSON_ID"      NUMBER(15,0),
    "COMPANY"        VARCHAR2(10 CHAR),
	"CORR_ID"		 NUMBER(15,0),
	
	CONSTRAINT "PERSON_AURORA_MAP_PK" PRIMARY KEY ("PERSON_AURORA_MAP_ID") ENABLE,
	CONSTRAINT "PERSON_AURORA_MAP_FK"	FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_PERSON" ("PERSON_ID") ENABLE
); 

/* Moved to new schema as ADDRESS */
CREATE TABLE "CCLA_ADDRESS"
  (
    "ADDRESS_ID"    NUMBER(15,0),	/* Sourced from SEQ_ADDRESS_ID sequence */
    "ADDR_FLAT"    VARCHAR2(80 CHAR),
    "ADDR_HOUSENAME"    VARCHAR2(80 CHAR),
    "ADDR_HOUSENUMBER"    VARCHAR2(80 CHAR),
    "ADDR_STREET"    VARCHAR2(80 CHAR),
	 "ADDR_DISTRICT"    VARCHAR2(80 CHAR),
    "ADDR_CITY"     VARCHAR2(48 CHAR),
    "ADDR_COUNTY"   VARCHAR2(48 CHAR),
    "ADDR_COUNTRY"  VARCHAR2(48 CHAR),
    "ADDR_POSTCODE" VARCHAR2(25 CHAR),
	"QAS_VALID" 	NUMBER(1,0),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "ADDRESSES_ID_PK" PRIMARY KEY ("ADDRESS_ID") ENABLE
  );

  /* Moved to new schema as ELEMENT_RELATION_TYPES */
CREATE TABLE "CCLA_ELEMENT_RELATION_TYPES"
(
	"TYPE_ID"			NUMBER(6,0),
	"LABEL"				VARCHAR2(32 CHAR),
	
	CONSTRAINT "ELEMENT_RELATION_TYPE_PK" PRIMARY KEY ("TYPE_ID") ENABLE
);

Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (1,'Client-Person');
Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (2,'Client-Account');
Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (3,'Person-Account');
Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (4,'Client-Client');
Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (5,'Person-Person');
Insert into CCLA_ELEMENT_RELATION_TYPES (TYPE_ID,LABEL) values (6,'Account-Account');

  /* Moved to new schema as ELEMENT_RELATION_NAMES */
CREATE TABLE "CCLA_ELEMENT_RELATION_NAMES"
(
	"RELATION_NAME_ID"	NUMBER(6,0) NOT NULL,
	"TYPE_ID"			NUMBER(6,0) NOT NULL,
	"RELATION"			VARCHAR2(32 CHAR) NOT NULL,
	"SHORT_NAME"		VARCHAR2(8 CHAR) NOT NULL,
	"IS_SINGLETON"		NUMBER(1,0) NOT NULL,
	
	CONSTRAINT "RELATION_NAME_PK" PRIMARY KEY ("RELATION_NAME_ID") ENABLE,
	CONSTRAINT "RELATION_NAME_TYPE_FK" FOREIGN KEY ("TYPE_ID") REFERENCES "CCLA_ELEMENT_RELATION_TYPES" ("TYPE_ID") ENABLE
);

/* Moved to new schema as RELATIONS

	Models all entity-entity relations */
CREATE TABLE "CCLA_ELEMENT_RELATIONS"
(
	"RELATION_ID" 		NUMBER(15,0), 			/* Uses sequence SEQ_ELEMENT_RELATION_ID */
	"ELEMENT_ID1"		NUMBER(15,0) NOT NULL,
	"ELEMENT_ID2"		NUMBER(15,0) NOT NULL,
	"RELATION_TYPE_ID"	NUMBER(6,0) NOT NULL,
	"RELATIONSHIP"		VARCHAR2(32 CHAR) NOT NULL,
	"RELATION_FLAGS"	NUMBER(6,0),
	"RELATION_DATE"		TIMESTAMP(6),
	"LAST_UPDATED"		TIMESTAMP(6),
	CONSTRAINT "ELEMENT_RELATION_PK" PRIMARY KEY ("RELATION_ID") ENABLE,
	CONSTRAINT "ELEMENT_RELATION_TYPE_FK" FOREIGN KEY ("RELATION_TYPE_ID") REFERENCES "CCLA_ELEMENT_RELATION_TYPES" ("TYPE_ID") ENABLE,
	
	CONSTRAINT "ELEMENT_ID1_FK" FOREIGN KEY ("ELEMENT_ID1") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE,
	CONSTRAINT "ELEMENT_ID2_FK" FOREIGN KEY ("ELEMENT_ID2") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE

);
  
/* Moved to new schema as REF_CONTACT_METHOD

	Must be pre-filled with default entries (see below) */
CREATE TABLE CCLA_CONTACT_TYPES
(
	"CONTACT_TYPE_ID"    				NUMBER(15,0),
	"NAME"			        			VARCHAR2(20 CHAR), 
	CONSTRAINT "CCLA_CONTACT_TYPE_PK" 	PRIMARY KEY ("CONTACT_TYPE_ID") ENABLE
);

Insert into CCLA_CONTACT_TYPES (CONTACT_TYPE_ID,NAME) values (1,'Address');
Insert into CCLA_CONTACT_TYPES (CONTACT_TYPE_ID,NAME) values (2,'Phone');
Insert into CCLA_CONTACT_TYPES (CONTACT_TYPE_ID,NAME) values (3,'Email');
Insert into CCLA_CONTACT_TYPES (CONTACT_TYPE_ID,NAME) values (4,'Web');
Insert into CCLA_CONTACT_TYPES (CONTACT_TYPE_ID,NAME) values (5,'Fax');

/* Moved to new schema as REF_CONTACT_SUBMETHOD

	Must be pre-filled with default entries (see below) */
CREATE TABLE CCLA_CONTACT_SUBTYPES
(
	"CONTACT_TYPE_ID"    	NUMBER(15,0),
	"NAME"			        VARCHAR2(25 CHAR), 
	CONSTRAINT 				"CCLA_CONTACT_TYPE_FK" FOREIGN KEY ("CONTACT_TYPE_ID") REFERENCES "CCLA_CONTACT_TYPES" ("CONTACT_TYPE_ID") ENABLE,
	CONSTRAINT 				"CCLA_CONTACT_SUBTYPE_PK" PRIMARY KEY ("NAME") ENABLE
);

Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (1,'Home address');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (1,'Previous address');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (1,'Previous address (2)');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (1,'Work address');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (1,'Alternate address');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (2,'Home');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (2,'Mobile');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (2,'Work');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (3,'Personal email');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (3,'Work email');
Insert into CCLA_CONTACT_SUBTYPES (CONTACT_TYPE_ID,NAME) values (4,'Website');

/* Moved to new schema as CONTACT_POINT */
CREATE TABLE "CCLA_CONTACT_MAP"
(
	"CONTACT_ID" 	NUMBER(15,0),				/* Sourced from sequence SEQ_CONTACT_MAP_ID */
    "ELEMENT_ID"  	NUMBER(15,0),
    "TYPE"       	NUMBER(15,0),				/* References ID in CCLA_CONTACT_TYPE table */
    "NAME"       	VARCHAR2(48 CHAR),
    "VALUE"      	VARCHAR2(128 CHAR),
    "ADDRESS_ID" 	NUMBER(15,0),				/* References entry in CCLA_ADDRESS, can be null */
	
    "PREFERENCE" 	NUMBER(2,0),
	"IS_DEFAULT" 	NUMBER(1,0),				/* Flag indicating if this is the default contact
												   entry for the related element. */
	"IS_DUBIOUS" 	NUMBER(1,0),				/* Used to flag dubious pieces of contact data, 
												   e.g. addresses which give returned mail */
	"IS_EXPERIAN"	NUMBER(1,0),				/* Flag indicating that this contact should be used
												   when performing Experian checks. Only relevant
												   for addresses. */
	
	"LAST_UPDATED"	TIMESTAMP(6),
	
	CONSTRAINT "CONTACT_MAP_PK" 	PRIMARY KEY ("CONTACT_ID") ENABLE,
	CONSTRAINT "CONTACT_ELEMENT_FK" FOREIGN KEY ("ELEMENT_ID") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE,
	CONSTRAINT "CONTACT_TYPE_FK" 	FOREIGN KEY ("TYPE") REFERENCES "CCLA_CONTACT_TYPES" ("CONTACT_TYPE_ID") ENABLE,
	CONSTRAINT "CONTACT_ADDRESS_FK" FOREIGN KEY ("ADDRESS_ID") REFERENCES "CCLA_ADDRESS" ("ADDRESS_ID") ON DELETE CASCADE ENABLE
  );
  
CREATE TABLE "CCLA_IDENTITY_CHECK"
  (
    "PERSON_ID"            NUMBER(12,0),
	"IS_AUTHENTICATED"     VARCHAR2(10 CHAR),
    "IS_EXPERIAN_AUTHENTICATED"     VARCHAR2(10 CHAR),
    "AUTHENTICATION_INDEX" NUMBER,
    "DECISION"             VARCHAR2(20 CHAR),
    "DECISION_TEXT"        VARCHAR2(255 CHAR),
    "CHECK_DATE" TIMESTAMP (6),
    "EXPIRY_DATE" TIMESTAMP (6),
	"RECALCULATE_DATE" TIMESTAMP (6),
    "RISK_CONDITIONS"      VARCHAR2(50 CHAR),
    "RISK_CONDITIONS_TEXT" VARCHAR2(2000 CHAR),
    "REF_NO"               VARCHAR2(20 CHAR),
    "TOTAL_HAPPY_SCORE"    NUMBER,
    "TOTAL_UNHAPPY_SCORE"  NUMBER,
    "LEGACY_CHECKED"       NUMBER,
    "MANUAL_OVERRIDE"      NUMBER,
	
    CONSTRAINT "CCLA_IDENTITY_CHECK_PK" PRIMARY KEY ("PERSON_ID") ENABLE,
	constraint "IDENTITY_CHECK_FK" foreign key ("PERSON_ID") REFERENCES PERSON("PERSON_ID") ENABLE
  );

CREATE TABLE "CCLA_IDENTITY_CHECK_LOOKUP"
  (
    "OUTCOME_ID"             NUMBER(15,0),
    "DESCRIPTION"            VARCHAR2(2000 CHAR),
    "EXPERIAN_RISK_CODE"     VARCHAR2(20 CHAR),
    "EXPERIAN_DECISION_CODE" VARCHAR2(20 CHAR),
    "EXPERIAN_DECISION_TEXT" VARCHAR2(255 CHAR),
    "HAPPY_SCORE"            NUMBER,
    "UNHAPPY_SCORE"          NUMBER,
    "FAIL_CONDITION"         NUMBER,
    "PASS_CONDITION"         NUMBER,
	"AMBER_CONDITION"		 NUMBER,
    CONSTRAINT "CCLA_IDENTITY_LOOKUP_CHECK_PK" PRIMARY KEY ("OUTCOME_ID") ENABLE
  );
  
CREATE OR REPLACE TRIGGER "CCLA_ID_CHECK_LOOKUP_TRIG" BEFORE
  INSERT ON CCLA_IDENTITY_CHECK_LOOKUP FOR EACH row WHEN (new.OUTCOME_ID IS NULL) BEGIN
  SELECT CCLA_IDENTITY_CHECK_LOOKUP_SEQ.nextval INTO :NEW.OUTCOME_ID FROM dual;
END;
/
ALTER TRIGGER "CCLA_ID_CHECK_LOOKUP_TRIG" ENABLE; 

REM INSERTING into CCLA_IDENTITY_CHECK_LOOKUP
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (45,'Incomplete address/name','U999','RA00',null,null,73,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (61,'Manual override for authentication',null,null,null,19,null,null,1,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (5,'Address pending verification',null,null,null,null,3,null,null,1);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (6,'Driving Licence validated',null,null,null,5,null,null,1,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (3,'Passed Experian authentication',null,'AU01',null,13,null,null,1,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (4,'Awaiting authentication',null,null,null,null,5,null,null,1);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (7,'Passport Number validated',null,null,null,7,null,null,1,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (8,'Utility Mailsort validated',null,null,null,11,null,null,1,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (21,'Address added manually',null,null,null,null,2,null,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (22,'Address validated by QAS',null,null,null,2,null,null,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (23,'Experian authentication expired',null,null,null,null,17,null,null,1);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (24,'Legacy IVS checked',null,null,null,17,null,null,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (25,'Failed Experian authentication',null,'NA00',null,null,19,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (26,'Risk - unknown address','U000','RA00',null,null,23,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (27,'Risk - name found on Mortality File','U001','RA00',null,null,37,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (28,'Risk - name found on Basic Sanctions file','U131','RA00',null,null,29,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (29,'Risk - name found on Basic PEP file','U133','RA00',null,null,31,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (30,'Risk - address found on Experian accommodation file','U004','RA00',null,null,41,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (31,'Risk - potential ''developed'' identity','U007','RA00',null,null,43,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (32,'Risk - address found on post office redirections file','U013','RA00',null,null,47,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (33,'Risk - name found on Sanctions/PEP file','U015','RA00',null,null,53,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (34,'Risk - significant application data inconsisencies present','U018','RA00',null,null,59,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (35,'Risk - applicant under age','U019','RA00',null,null,61,1,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (41,'Address is dubious',null,null,null,null,67,null,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (42,'Driving Licence failed validition',null,null,null,null,71,0,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (43,'Passport Number failed validation',null,null,null,null,7,null,null,null);
Insert into CCLA_IDENTITY_CHECK_LOOKUP (OUTCOME_ID,DESCRIPTION,EXPERIAN_RISK_CODE,EXPERIAN_DECISION_CODE,EXPERIAN_DECISION_TEXT,HAPPY_SCORE,UNHAPPY_SCORE,FAIL_CONDITION,PASS_CONDITION,AMBER_CONDITION) values (44,'Utility Mailsort failed validation',null,null,null,null,11,null,null,null);

CREATE TABLE "CCLA_IDENTITY_CHECK_AUDIT"
  (
    "AUDIT_CHECK_ID" NUMBER(*,0),
    "PERSON_ID"      NUMBER(*,0),
    "CHECK_TYPE"     VARCHAR2(20 CHAR),
    "USER_ID"        VARCHAR2(20 CHAR),
    "CHECK_DATE" TIMESTAMP (6),
    "CHECK_DATA" VARCHAR2(300 CHAR),
    "DECISION"   VARCHAR2(20 CHAR),
    "REF_NO"     VARCHAR2(20 CHAR),
    CONSTRAINT "CCLA_IDENTITY_CHECK_AUDIT_PK" PRIMARY KEY ("AUDIT_CHECK_ID") ENABLE);
	
CREATE SEQUENCE "CCLA_IDENTITY_CHECK_AUDIT_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

CREATE OR REPLACE TRIGGER "CCLA_IDENTITY_CHECK_AUDIT_TRIG" BEFORE
  INSERT ON CCLA_IDENTITY_CHECK_AUDIT FOR EACH row WHEN (new.AUDIT_CHECK_ID IS NULL) BEGIN
  SELECT CCLA_IDENTITY_CHECK_AUDIT_SEQ.nextval INTO :NEW.AUDIT_CHECK_ID FROM dual;
END;

/* 	In new schema as REF_INCOME_DIST_METHOD

	Stores Income Distribution Method codes and descriptions.
   
   Data should be kept in sync with Aurora Common DB 
   'IncomeDistributionMethods' table.
*/
CREATE TABLE CCLA_INCOME_DIST_METHOD (
  "IDM_CODE" VARCHAR2(10 CHAR),
  "IDM_NAME" VARCHAR2(100 CHAR),
  
  CONSTRAINT "INCOME_DIST_METHOD_PK" PRIMARY KEY("IDM_CODE") ENABLE
);

/* Income Dist. data */
Insert into CCLA_INCOME_DIST_METHOD (IDM_CODE,IDM_NAME) values ('PAYA','Pay Away Income');
Insert into CCLA_INCOME_DIST_METHOD (IDM_CODE,IDM_NAME) values ('REIN','Re-Invest Dividends');
Insert into CCLA_INCOME_DIST_METHOD (IDM_CODE,IDM_NAME) values ('RETN','Retain Interest');
Insert into CCLA_INCOME_DIST_METHOD (IDM_CODE,IDM_NAME) values ('TXRI','Transfer Dividends to Dep Fund');

/* In new schema as ACCOUNT
*/
CREATE TABLE "CCLA_ACCOUNT" (
	 
	"ACCOUNT_ID" NUMBER(15,0) NOT NULL, 	/* referenced ELEMENT_ID */
	 
	"ACC_CLIENT_ID" NUMBER(15,0), 		/* referenced Client ID from CCLA_CLIENT */
	
	/* Determines whether the account data should be synchronized with Aurora. */
	"ACC_SYNC_TO_AURORA" NUMBER(1,0),
	
	/* Date of last units/cash refresh from Aurora */
	"DATE_LAST_REFRESH" TIMESTAMP (6),
	
	/* Aurora correspondent references. */
	/*
	"ACC_AURORA_CORCODE" NUMBER(15,0),
	"ACC_AURORA_BENCORCDE" NUMBER(15,0), 
	*/
	
	"ACC_ACCOUNTNUMBER" NUMBER(15,0), 
	"ACC_FUNDCODE" VARCHAR2(3 CHAR), 
	
	/* External account number, functions as primary key. */
	"ACC_ACCNUMEXT" VARCHAR2(15), 
	
	/* Are these even needed now? */
	/*
	"ACC_CLIENTID_CH" VARCHAR2(10), 
	"ACC_ACCOUNTNUMBER_CH" VARCHAR2(10), 
	*/
	
	"ACC_SUBTITLE" VARCHAR2(64), 
	"ACC_STATUS" VARCHAR2(4), 
	"ACC_DATEOPENED" TIMESTAMP (6), 
	"ACC_LSTAMDDTE" TIMESTAMP (6), 
	
	"ACC_CASH" NUMBER(38,6), 
	"ACC_UNITS" NUMBER(38,6),
	"ACC_SHARE_CLASS" VARCHAR2(5 CHAR),

	/* New field - determines no. of signatures required for instructions */
	"ACC_REQ_SIGNATURES" NUMBER(5,0),
	
	"ACC_INCOME_DIST_METHOD" VARCHAR2(6), 

	"ACC_MANDATED_ACCNUMEXT" VARCHAR2(15),
	
	/*
	"ACC_MANDATED_COMPANY" VARCHAR2(20), 
	*/
	
	/* This account can only have 1 mapped bank account when this is true. */
	"ACC_EXCLUSIVE_BANK_ACCOUNT" NUMBER(1,0),
	
	/*
	"ACC_AML_CHECKED"	NUMBER(1,0),
	*/
	
	"ACC_AML_CHECK_OVERRIDE_USER" VARCHAR2(48 CHAR),
	
	/* Aurora-specific fields - no need to store or update these.
	"ACC_MANDATELETTERSENT" NVARCHAR2(6), 
	"ACC_MANDATELETTERSENTDATE" TIMESTAMP (6), 
	
	"ACC_STATRAIND" NUMBER(15,0), 
	"ACC_ACCRUEDINCOME" NUMBER(18,6), 
	"ACC_INTDIVACCRUED" NUMBER(18,6), 
	"ACC_MGTEXPACCRUED" NUMBER(18,6), 
	"ACC_LSTSMTCASH" NUMBER(18,6), 
	"ACC_LSTSMTUNITS" NUMBER(18,6), 
	"ACC_IVSCFID" NVARCHAR2(48), 
	"ACC_IVSREFERENCENUMBER" NVARCHAR2(64), 
	"ACC_INTDIVACCRUEDNONTIERED" NUMBER(18,6), 
	*/
	
	/* Not sure what this Auorora field is, or if we need it. */
	"ACC_ISEXTERNALACCOUNT" NUMBER(1,0), 
	
	"ACC_NOTES"			VARCHAR2(200 CHAR),
	
	"LAST_UPDATED" TIMESTAMP (6),
	
	CONSTRAINT "CCLA_ACCOUNT_PK" 			PRIMARY KEY ("ACCOUNT_ID") ENABLE,
	CONSTRAINT "CCLA_ACCOUNT_ACCNUMEXT_UNIQUE" 			UNIQUE ("ACC_ACCNUMEXT") ENABLE,
	
	CONSTRAINT "CCLA_ACCOUNT_ELEMENT_FK" 	FOREIGN KEY ("ACCOUNT_ID") REFERENCES "CCLA_ELEMENT" ("ELEMENT_ID") ENABLE,
	CONSTRAINT "CCLA_ACCOUNT_IDM_FK"		FOREIGN KEY ("ACC_INCOME_DIST_METHOD") REFERENCES "CCLA_INCOME_DIST_METHOD" ("IDM_CODE") ENABLE,
	CONSTRAINT "CCLA_ACCOUNT_ENTITY_FK" 	FOREIGN KEY ("ACC_ENTITY_ID") REFERENCES "CCLA_CLIENT" ("ENTITY_ID") ENABLE
);

CREATE INDEX "UCMADMIN"."ACCOUNT_CLIENT_ID_INDEX" ON "UCMADMIN"."CCLA_ACCOUNT" ("ACC_CLIENT_ID")

/* 	Table no longer valid!

	WIP
	
	Models relationships between CCLA accounts and bank accounts.
*/
CREATE TABLE "CCLA_BANK_ACCOUNT_RELATIONS" (
	"BANK_ACCOUNT_RELATION_ID" NUMBER(15,0),	/* Sourced from SEQ_BANK_ACC_RELATION_ID */
	
	"ACCOUNT_ID" 		NUMBER(15,0),
	"BANK_ACCOUNT_ID"  	NUMBER(15,0),
	
	"WITHDRAWAL"		NUMBER(1,0),
	"INCOME"			NUMBER(1,0),
	
	"IS_DEFAULT"		NUMBER(1,0),
	"LAST_UPDATED"		TIMESTAMP(6),
	
	CONSTRAINT "BANK_ACCOUNT_RELATION_PK"	PRIMARY KEY ("BANK_ACCOUNT_RELATION_ID") ENABLE,
	CONSTRAINT "BANK_ACCOUNT_RELATION_UNIQUE"	UNIQUE("ACCOUNT_ID","BANK_ACCOUNT_ID") ENABLE,
	CONSTRAINT "BANK_ACCOUNT_FK"			FOREIGN KEY ("BANK_ACCOUNT_ID") REFERENCES "CCLA_BANK_ACCOUNT" ("BANK_ACCOUNT_ID") ENABLE,
	CONSTRAINT "BANK_ACCOUNT_ACC_FK"		FOREIGN KEY ("ACCOUNT_ID") REFERENCES "CCLA_ACCOUNT" ("ACCOUNT_ID") ENABLE
);

/* In new schema as BANK_ACCOUNT

	Bank account details. Sort code/account no. combinations must be unique. */
CREATE TABLE "CCLA_BANK_ACCOUNT"
(
	"BANK_ACCOUNT_ID" 			NUMBER(15,0), /* Sourced from SEQ_BANK_ACC_ID */
	"ENTITY_ID"					NUMBER(15,0), /* Existing Entity ID */
	
	"ACCOUNT_NO" 					VARCHAR2(10 CHAR),
	"SORT_CODE" 					VARCHAR2(6 CHAR),
	"ACCOUNT_NAME" 					VARCHAR2(64 CHAR),
	
	CONSTRAINT "BANK_ACCOUNT_PK" 			PRIMARY KEY ("BANK_ACCOUNT_ID") ENABLE,
	CONSTRAINT "BANK_ACCOUNT_UNIQUE" 		UNIQUE ("ACCOUNT_NO", "SORT_CODE") ENABLE,
	
	CONSTRAINT "BANK_ACCOUNT_ENTITY_PK" 	FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE
);

/* 
	TODO: not yet added to new schema.
	
	Share classes configuration. Each share class-enabled Fund can have 1 or more
	entries here.
*/
CREATE TABLE "CCLA_SHARE_CLASS"
(
	"SHARE_CLASS_ID" 			NUMBER(15,0),	/* Sourced from SEQ_SHARE_CLASS_ID */
	"FUND_ID"					NUMBER(15,0), /* Entity ID for share-class enabled Fund */
	
	"LABEL"						VARCHAR2(5 CHAR),
	"THRESHOLD"					NUMBER(15,0), /* Minimum units/capital to qualify for this share class */
	
	CONSTRAINT "SHARE_CLASS_PK" 		PRIMARY KEY ("SHARE_CLASS_ID") ENABLE,
	CONSTRAINT "SHARE_CLASS_UNIQUE" 	UNIQUE ("FUND_ID", "LABEL") ENABLE
);

/* 	TODO: not yet added to new schema.
	Full history of calculated share class allocations.

   Each entry will be linked to a set of share classes.
*/
CREATE TABLE "CCLA_FUND_ALLOCATION"
(
	"ALLOCATION_ID" 			NUMBER(15,0),  /* Sourced from SEQ_FUND_ALLOCATION_ID */
	"FUND_ID"					NUMBER(15,0),
	
	"ALLOCATION_DATE"			TIMESTAMP(6),
	"ALLOCATION_STATUS"			VARCHAR2(15 CHAR),
	
	CONSTRAINT "FUND_ALLOCATION_PK" 		PRIMARY KEY ("ALLOCATION_ID") ENABLE,
);

/* 	TODO: not yet added to new schema.
	Individual share class allocations. Each entry is linked to a parent Fund Allocation
   record.
*/
CREATE TABLE "CCLA_SHARE_CLASS_ALLOCATION"
(
	"SC_ALLOCATION_ID" 	NUMBER(15,0),			/* Sourced from SEQ_SC_ALLOCATION_ID */
	"ALLOCATION_ID"		NUMBER(15,0),
	"ALLOCATION_DATE"	TIMESTAMP(6),
	"SHARE_CLASS_ID"	NUMBER(15,0),
	
	"SHARE"				NUMBER(0,6),
	"BASE_ALLOCATION"	NUMBER(12,6),
	"BASE_ALLOCATION"	NUMBER(12,6),
	
	
	CONSTRAINT "SC_ALLOCATION_PK" 	PRIMARY KEY ("SC_ALLOCATION_ID") ENABLE,
	CONSTRAINT "SC_ALLOCATION_FK" 	FOREIGN KEY ("ALLOCATION_ID") REFERENCES "CCLA_FUND_ALLOCATION" ("ALLOCATION_ID") ENABLE
);

/* Records intentions of entities/persons for opening/investment of
 * new accounts.
*/
CREATE TABLE "CCLA_ACCOUNT_INTENTION"
(
	"ACCOUNT_INTENTION_ID"	NUMBER(15,0),
	"ENTITY_ID"				NUMBER(15,0),
	"PERSON_ID"				NUMBER(15,0),
	"USER_ID"				VARCHAR2(40 CHAR),
	"UPDATE_USER_ID"		VARCHAR2(40 CHAR),
	
	"FUND_CODE"				VARCHAR2(10 CHAR),
	"UNITS"					NUMBER(20,6),
	"CASH"					NUMBER(20,6),
	
	"ACCOUNT_ID"			NUMBER(15,0),
	"STATUS"				VARCHAR2(10 CHAR),
	
	"DATE_ADDED"			TIMESTAMP(6),
	"LAST_UPDATED"			TIMESTAMP(6),
	
	CONSTRAINT "ACCOUNT_INTENTION_PK" 	PRIMARY KEY ("ACCOUNT_INTENTION_ID") ENABLE
);

CREATE SEQUENCE "UCMADMIN"."SEQ_ACCOUNT_INTENTION_ID" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2120 CACHE 20 NOORDER NOCYCLE ;

/* Static list of subjects available on Record Interaction screen.

    Each subject is linked to a set of categories.
*/
CREATE TABLE "CCLA_INTERACTION_SUBJECT"
(
	"INTERACTION_SUBJECT_ID"	NUMBER(15,0),
	"SUBJECT"					VARCHAR2(40 CHAR),
	
	CONSTRAINT "INTERACTION_SUBJECT_PK" 	PRIMARY KEY ("INTERACTION_SUBJECT_ID") ENABLE
);

Insert into CCLA_INTERACTION_SUBJECT (INTERACTION_SUBJECT_ID,SUBJECT) values (1,'Mandate');

/* Static list of subject categories available on Record Interaction screen.
*/
CREATE TABLE "CCLA_INTERACTION_CATEGORY"
(
	"INTERACTION_CATEGORY_ID"	NUMBER(15,0),
	"INTERACTION_SUBJECT_ID"	NUMBER(15,0),				
	"CATEGORY"					VARCHAR2(100 CHAR),
	
	CONSTRAINT "INTERACTION_CATEGORY_PK" 	PRIMARY KEY ("INTERACTION_CATEGORY_ID") ENABLE,
	CONSTRAINT "CATEGORY_SUBJECT_FK" 		FOREIGN KEY ("INTERACTION_SUBJECT_ID") REFERENCES "CCLA_INTERACTION_SUBJECT"("INTERACTION_SUBJECT_ID")  ENABLE
);

/* New Interaction record table. Replaces CCLA_INTERACTIONS
*/
CREATE TABLE CCLA_INTERACTION
  (
    "INTERACTION_ID"        NUMBER(10,0),
	
	"USER_ID"      			VARCHAR2(48 CHAR),
	"INTERACTION_DATE"		TIMESTAMP(6),
	
    "ENTITY_ID"           	NUMBER(15,0),
    "PERSON_ID"         	NUMBER(15,0),
	"ACCOUNT_ID"			NUMBER(15,0),
	
	"CONFIRM_TYPES"			VARCHAR2(48 CHAR),
	"CONFIRM_OTHER"			VARCHAR2(48 CHAR),
    "INTERACTION_TYPE"      VARCHAR2(48 CHAR),
	
    "SUBJECT_ID"         	NUMBER(15,0),
	"CATEGORY_ID"			NUMBER(15,0),
	
	"IS_QUERY"				VARCHAR2(1 CHAR),
	"IS_COMPLAINT"			VARCHAR2(1 CHAR),
	"IS_BREACH"				VARCHAR2(1 CHAR),
	"IS_ERROR"				VARCHAR2(1 CHAR),
	
    "CAMPAIGN_ID"         	NUMBER(10,0),
	"JOB_ID"				VARCHAR2(20 CHAR),
    "OUTCOME"         		VARCHAR2(64 CHAR),
    "INTERACTION_STATUS"    VARCHAR2(96 CHAR),
	
    "ASSIGNEE"         		VARCHAR2(96 CHAR),
    "DEADLINE"             	TIMESTAMP (6),
	
	"LAST_UPDATED"			TIMESTAMP (6),
	
	CONSTRAINT "INTERACTION_PK" 			PRIMARY KEY ("INTERACTION_ID") ENABLE,
	CONSTRAINT "INTERACTION_SUBJECT_FK" 	FOREIGN KEY ("SUBJECT_ID") REFERENCES "CCLA_INTERACTION_SUBJECT" ("INTERACTION_SUBJECT_ID")  ENABLE,
	CONSTRAINT "INTERACTION_CATEGORY_FK" 	FOREIGN KEY ("CATEGORY_ID") REFERENCES "CCLA_INTERACTION_CATEGORY" ("INTERACTION_CATEGORY_ID")  ENABLE,
	CONSTRAINT "INTERACTION_PERSON_FK"		FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_PERSON" ("PERSON_ID") ENABLE,
	CONSTRAINT "INTERACTION_ENTITY_FK"		FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE,
	CONSTRAINT "INTERACTION_ACCOUNT_FK"		FOREIGN KEY ("ACCOUNT_ID") REFERENCES "CCLA_ACCOUNT" ("ACCOUNT_ID") ENABLE
	
  ); 

/* Query used to fetch old data from CCLA_INTERACTIONS table and connect it with
     new Enity/Person/Subject/Category IDs.
	 
	 Export as XLS and import into CCLA_INTERACTION.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/
SELECT I_OLD.INTERACTION_ID, I_OLD.INTERACTION_DATE, i_old.USER_ID, i_old.interaction_type, i_old.interaction_status, i_old.confirm_types, i_old.confirm_other,
i_old.is_query, i_old.is_breach, i_old.is_complaint, i_old.is_error, i_old.job_id,
ent.ENTITY_ID, p.PERSON_ID AS PERSON_ID, 
i_old.subject AS OLD_SUBJECT, i_old.category AS OLD_CATEGORY,
cat.interaction_category_id AS CATEGORY_ID, cat.interaction_subject_id AS SUBJECT_ID FROM CCLA_INTERACTIONS i_old 
LEFT JOIN CCLA_INTERACTION_CATEGORY cat
ON (cat.category = i_old.category)

LEFT JOIN CCLA_PERSON_AURORA_MAP pa_map ON (pa_map.corr_id = i_old.person_id)
LEFT JOIN CCLA_PERSON p ON (p.PERSON_ID = pa_map.person_id)

LEFT JOIN CCLA_CLIENT_AURORA_MAP cl_map ON (cl_map.client_number = I_OLD.CLIENT_ID AND cl_map.company = i_old.company)
LEFT JOIN CCLA_ENTITY ent ON (ent.ENTITY_ID = cl_map.client_id)

WHERE INTERACTION_CATEGORY_ID IS NOT NULL;

/* Required constraint altering on CCLA_NOTE_MAPPING table, after transfer of interaction data */
ALTER TABLE CCLA_NOTE_MAPPING DROP CONSTRAINT "CCLA_NOTE_INTERACTION_FK";
ALTER TABLE CCLA_NOTE_MAPPING ADD CONSTRAINT "CCLA_NOTE_INTERACTION_FK" FOREIGN KEY ("INTERACTION_ID") REFERENCES "CCLA_INTERACTION" ("INTERACTION_ID") ENABLE;

/* New Process record table. Replaces CCLA_PROCESSES. */
CREATE TABLE "CCLA_PROCESS"
  (
    "PROCESS_ID"     	NUMBER(15,0) NOT NULL ENABLE,
	"CAMPAIGN_ID" 		NUMBER(15,0) NOT NULL ENABLE,
    "PERSON_ID"      	NUMBER(15,0),
    "ENTITY_ID"      	NUMBER(15,0) NOT NULL ENABLE,
	"PREF_CONTACT_METHOD" VARCHAR2(20 CHAR),	
    "PROCESS_STATUS" 	VARCHAR2(30 CHAR),
    "PROCESS_DATE" 		TIMESTAMP (6),
    "LAST_ACTION" 		TIMESTAMP (6),
	
    CONSTRAINT "CCLA_PROCESS_PK" 				PRIMARY KEY ("PROCESS_ID") ENABLE,
    CONSTRAINT "CCLA_PR_CLIENT_PERSON_UNIQUE" 	UNIQUE ("CAMPAIGN_ID", "ENTITY_ID", "PERSON_ID") ENABLE,
    CONSTRAINT "CCLA_PROCESS_CAMPAIGN_FK" 		FOREIGN KEY ("CAMPAIGN_ID") REFERENCES "CCLA_CAMPAIGNS" ("CAMPAIGN_ID") ENABLE,
	CONSTRAINT "CCLA_PROCESS_ENTITY_FK" 		FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE,
    CONSTRAINT "CCLA_PROCESS_PERSON_FK" 		FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_PERSON" ("PERSON_ID") ENABLE
  );

/* Query used to fetch old data from CCLA_PROCESSES table and connect it with new
     Entity/Person data.
	 
	 Export as csv.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/
SELECT pr.process_id, pr.campaign_id, pr.process_status, pr.last_action, pr.process_date, 
ent.ENTITY_ID, p.PERSON_ID AS person_id
FROM CCLA_PROCESSES pr LEFT JOIN CCLA_CLIENT_AURORA_MAP cl_map ON
(pr.client_id = cl_map.client_number AND pr.company = cl_map.company)
LEFT JOIN CCLA_ENTITY ent ON (cl_map.client_id = ent.ENTITY_ID)

LEFT JOIN CCLA_PERSON_AURORA_MAP p_map ON
(pr.PERSON_ID = p_map.corr_id)
LEFT JOIN CCLA_PERSON p ON
(p_map.person_id = p.PERSON_ID);

/* New Activity records table. Replaces CCLA_ACTIVITIES */
CREATE TABLE "CCLA_ACTIVITY"
  (
    "ACTIVITY_ID" 		NUMBER(15,0) NOT NULL,
    "PROCESS_ID"  		NUMBER(15,0),
	"INTERACTION_ID"	NUMBER(15,0),
    "PERSON_ID"   		NUMBER(15,0),
    "ENTITY_ID"   		NUMBER(15,0),
    "USER_ID"     		VARCHAR2(40 CHAR),
    "ACTIVITY_DATE" 	TIMESTAMP(6),
    "ACTIVITY_TYPE"   	VARCHAR2(50 CHAR),
    "ACTIVITY_ACTION" 	VARCHAR2(150 CHAR),
    "NOTE_ID"         	NUMBER(12,0),
    "ERROR"           	NUMBER(1,0),
    CONSTRAINT "ACTIVITY_PK" 				PRIMARY KEY ("ACTIVITY_ID") ENABLE,
    CONSTRAINT "ACTIVITY_PROCESS_FK" 		FOREIGN KEY ("PROCESS_ID") REFERENCES "CCLA_PROCESS" ("PROCESS_ID") ON DELETE CASCADE ENABLE,
	CONSTRAINT "ACTIVITY_INTERACTION_FK" 	FOREIGN KEY ("INTERACTION_ID") REFERENCES "CCLA_INTERACTION" ("INTERACTION_ID") ON DELETE CASCADE ENABLE,
	CONSTRAINT "ACTIVITY_ENTITY_FK" 		FOREIGN KEY ("ENTITY_ID") REFERENCES "CCLA_ENTITY" ("ENTITY_ID") ENABLE,
    CONSTRAINT "ACTIVITY_PERSON_FK" 		FOREIGN KEY ("PERSON_ID") REFERENCES "CCLA_PERSON" ("PERSON_ID") ENABLE
  );

/* Query used to fetch old data from CCLA_ACTIVITIES table and connect it with new
     Entity/Person data.
	 
	 Export as csv.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/  
SELECT act.activity_id, act.process_id, act.user_id, act.activity_date, act.activity_type, act.activity_action, act.note_id, to_number(act.error) AS ERROR, 
ent.ENTITY_ID, p.PERSON_ID AS person_id
FROM CCLA_ACTIVITIES act LEFT JOIN CCLA_CLIENT_AURORA_MAP cl_map ON
(act.client_id = cl_map.client_number)
LEFT JOIN CCLA_ENTITY ent ON (cl_map.client_id = ent.ENTITY_ID)

LEFT JOIN CCLA_PERSON_AURORA_MAP p_map ON
(act.PERSON_ID = p_map.corr_id)
LEFT JOIN CCLA_PERSON p ON
(p_map.person_id = p.PERSON_ID);  
  
/* Required modifications to CCLA_NOTE_MAPPING table. */
ALTER TABLE CCLA_NOTE_MAPPING DROP CONSTRAINT "CCLA_NOTE_ACTIVITY_FK";
ALTER TABLE CCLA_NOTE_MAPPING DROP COLUMN "ACTIVITY_ID";

/* Query used to fetch old data from CCLA_FORMS table and connect it with new
     Entity/Person data.
	 
	 NOTE: Ignore validation errors on import.
	 
	 Export as csv.
	 Date format: DD-MON-YY HH24.MI.SS.FF9
*/  
SELECT frm.*, cl_map.client_aurora_map_id, ent.ENTITY_ID, p.PERSON_ID AS new_person_id
FROM CCLA_FORMS frm LEFT JOIN CCLA_CLIENT_AURORA_MAP cl_map ON
(frm.client_id = cl_map.client_number AND frm.company = cl_map.company)
LEFT JOIN CCLA_ENTITY ent ON (cl_map.client_id = ent.ENTITY_ID)

LEFT JOIN CCLA_PERSON_AURORA_MAP p_map ON
(frm.PERSON_ID = p_map.corr_id)
LEFT JOIN CCLA_PERSON p ON
(p_map.person_id = p.PERSON_ID);

/* Replacement table for CCLA_FORMS */
CREATE TABLE "CCLA_FORM"
  (
    "FORM_ID"          NUMBER(20,0),
    "FORM_TYPE"        VARCHAR2(60 CHAR),
    "FORM_SUBTYPE"     VARCHAR2(60 CHAR),
    "PROCESS_ID"       NUMBER(15,0),
	"ENTITY_ID"		   NUMBER(15,0),
    "CLIENT_AURORA_MAP_ID"	NUMBER(15,0),
    "PERSON_ID"        NUMBER(12,0),
    "BASE_DOCNAME"     VARCHAR2(38 CHAR),
    "BASE_ID"          NUMBER(38,0),
    "PRINTED"          VARCHAR2(1 CHAR),
    "GENERATED"        VARCHAR2(1 CHAR),
    "RETURNED"         VARCHAR2(1 CHAR),
    "RETURNED_DOCNAME" VARCHAR2(38 CHAR),
    "FORM_STATUS"      VARCHAR2(80 CHAR),
    "CREATE_DATE" 		TIMESTAMP (6),
    "PRINT_DATE" 		TIMESTAMP (6),
    "GEN_DATE" 			TIMESTAMP (6),
    "RETURN_DATE" 			TIMESTAMP (6),
    "STATIC_DATA_CHANGE" VARCHAR2(1 CHAR),
    "ADDITIONAL_DATA"    VARCHAR2(1 CHAR),
    "NO_CHANGES"         VARCHAR2(1 CHAR),
    "VALID"              VARCHAR2(1 CHAR),
    "INVALID_REASON"     VARCHAR2(48 CHAR),
	"LAST_UPDATED"		TIMESTAMP(6),
	
    CONSTRAINT "CCLA_FORM_PK" PRIMARY KEY ("FORM_ID") ENABLE,
	CONSTRAINT "FORM_ENTITY_FK" FOREIGN KEY("ENTITY_ID") REFERENCES "CCLA_ENTITY"("ENTITY_ID") ENABLE,
	CONSTRAINT "FORM_PERSON_FK" FOREIGN KEY("PERSON_ID") REFERENCES "CCLA_PERSON"("PERSON_ID") ENABLE,
	CONSTRAINT "FORM_CLIENT_AURORA_MAP_FK" FOREIGN KEY ("CLIENT_AURORA_MAP_ID") REFERENCES "CCLA_CLIENT_AURORA_MAP"("CLIENT_AURORA_MAP_ID") ENABLE
  );

/* Move FORM_ACCOUNT_MAP constraint to point to new CCLA_FORM table. */
alter table "CCLA_FORM_ACCOUNT_MAP" drop constraint "CCLA_FORMS_FK";
alter table "CCLA_FORM_ACCOUNT_MAP" add constraint "CCLA_FORM_FK" FOREIGN KEY("FORM_ID") REFERENCES "CCLA_FORM"("FORM_ID") ENABLE;
  
/* View update (CCLA_PROCESSES_LAST_ACTIVITY) */
CREATE OR REPLACE FORCE VIEW "CCLA_PROCESS_LAST_ACTIVITY" 
("PROCESS_ID", "ACTIVITY_ID", "PERSON_ID", "ENTITY_ID", 
"USER_ID", "ACTIVITY_DATE", "ACTIVITY_TYPE", "ACTIVITY_ACTION", "ERROR", 
"PROCESS_STATUS", "PROCESS_DATE", "LAST_ACTION", 
"PROCESS_ENTITY_ID", "CAMPAIGN_ID", "CAMPAIGN_NAME")
AS
  SELECT pr."PROCESS_ID",
    act."ACTIVITY_ID",
    act."PERSON_ID",
    act."ENTITY_ID",
    act."USER_ID",
    act."ACTIVITY_DATE",
    act."ACTIVITY_TYPE",
    act."ACTIVITY_ACTION",
    act."ERROR",
    pr.PROCESS_STATUS,
    pr.PROCESS_DATE,
    pr.LAST_ACTION,
    pr.ENTITY_ID AS PROCESS_ENTITY_ID,
    pr.CAMPAIGN_ID,
    cam.NAME AS CAMPAIGN_NAME
  FROM CCLA_PROCESS pr
  LEFT JOIN CCLA_ACTIVITY act
  ON (act.PROCESS_ID=pr.PROCESS_ID)
  INNER JOIN CCLA_CAMPAIGNS cam
  ON (pr.CAMPAIGN_ID = cam.CAMPAIGN_ID)
  WHERE ACTIVITY_ID  =
    (SELECT MAX(ACTIVITY_ID)
    FROM CCLA_ACTIVITY
    WHERE CCLA_ACTIVITY.PROCESS_ID = pr.PROCESS_ID
    );

/* View update (CCLA_PROCESS_ACTIVITIES) */
CREATE OR REPLACE FORCE VIEW "CCLA_PROCESS_ACTIVITY" 
("PROCESS_ID", "ACTIVITY_ID", "PERSON_ID", "ENTITY_ID", "USER_ID", "ACTIVITY_DATE", 
"ACTIVITY_TYPE", "ACTIVITY_ACTION", "ERROR", "PROCESS_STATUS", "PROCESS_DATE", "LAST_ACTION", 
"PROCESS_ENTITY_ID", "CAMPAIGN_NAME")
AS
  SELECT pr."PROCESS_ID",
    act."ACTIVITY_ID",
    act."PERSON_ID",
    act."ENTITY_ID",
    act."USER_ID",
    act."ACTIVITY_DATE",
    act."ACTIVITY_TYPE",
    act."ACTIVITY_ACTION",
    act."ERROR",
    pr.PROCESS_STATUS,
    pr.PROCESS_DATE,
    pr.LAST_ACTION,
    pr.ENTITY_ID AS PROCESS_ENTITY_ID,
    cam.NAME     AS CAMPAIGN_NAME
  FROM CCLA_ACTIVITY act
  LEFT JOIN CCLA_PROCESS pr
  ON (act.PROCESS_ID=pr.PROCESS_ID)
  LEFT JOIN CCLA_CAMPAIGNS cam
  ON (pr.CAMPAIGN_ID = cam.CAMPAIGN_ID);

/* View update (CCLA_CLIENT_CAMPAIGN).
   Not really used or working properly, as yet. */
CREATE OR REPLACE FORCE VIEW "CCLA_ENTITY_CAMPAIGN" 
("ENTITY_ID", "ENTITY_NAME", "ENTITY_TYPE", "ENTITY_SUBTYPE",
"DATE_ADDED", "LAST_UPDATED", "CLIENT_ENTITY_ID", "CLIENT_ACCOUNT_CODE")
AS
  SELECT 
  ent.ENTITY_ID,
  ent.NAME AS ENTITY_NAME,
  e_type.TYPE_NAME AS ENTITY_TYPE_NAME,
  e_subtype.SUBTYPE_NAME AS ENTITY_SUBTYPE,
  ent.date_added,
  ent.last_updated,
  cl.entity_id AS CLIENT_ENTITY_ID,
  cl.client_account_code AS CLIENT_ACCOUNT_CODE
  FROM CCLA_ENTITY ent
  LEFT JOIN CCLA_ENTITY_TYPE e_type ON (ent.TYPE_ID = e_type.TYPE_ID)
  LEFT JOIN CCLA_ENTITY_SUBTYPE e_subtype ON (ent.SUBTYPE_ID = e_subtype.SUBTYPE_ID)
  LEFT JOIN CCLA_CLIENT cl ON (cl.ENTITY_ID = ent.ENTITY_ID);

/* View update (CCLA_ACTIVITIES_NOTES) */
CREATE OR REPLACE FORCE VIEW "UCMADMIN"."CCLA_ACTIVITY_NOTE" ("ACTIVITY_ID", "PROCESS_ID", "INTERACTION_ID", "PERSON_ID", "ENTITY_ID", "USER_ID", "ACTIVITY_DATE", "ACTIVITY_TYPE", "ACTIVITY_ACTION", "ERROR", "NOTE_ID", "NOTE")
AS
  SELECT act."ACTIVITY_ID",
    act."PROCESS_ID",
    act."INTERACTION_ID",
    act."PERSON_ID",
    act."ENTITY_ID",
    act."USER_ID",
    act."ACTIVITY_DATE",
    act."ACTIVITY_TYPE",
    act."ACTIVITY_ACTION",
    act."ERROR",
    notes.note_id,
    notes.note
  FROM CCLA_ACTIVITY act
  LEFT JOIN CCLA_NOTES notes
  ON (act.NOTE_ID = notes.NOTE_ID);
  
/* New column for CCLA_CAMPAIGNS table */
ALTER TABLE CCLA_CAMPAIGNS ADD "IDOC_INCLUDE_INFIX" VARCHAR2(40 CHAR);

/* Replacement table for CCLA_ACCOUNTS_AML_STATUS. */
CREATE TABLE "CCLA_ACCOUNT_AML_STATUS"
  (
    "ENTITY_ID"	NUMBER(15,0) NOT NULL ENABLE,
    "ACCNUMEXT" VARCHAR2(20 CHAR) NOT NULL ENABLE,
    "CHECKED"   NUMBER(1,0),
    CONSTRAINT "CCLA_ACCOUNT_AML_STATUS_PK" PRIMARY KEY ("ACCNUMEXT") ENABLE
  );

  /* Query for mapping old ACCOUNTS_AML_STATUS data to new Entity IDs. */
SELECT aml.ACCNUMEXT, TO_NUMBER(CHECKED) AS CHECKED, ent.ENTITY_ID
FROM CCLA_ACCOUNTS_AML_STATUS aml LEFT JOIN CCLA_CLIENT_AURORA_MAP cl_map ON
(aml.client_id = cl_map.client_number AND aml.company = cl_map.company)
LEFT JOIN CCLA_ENTITY ent ON (cl_map.client_id = ent.ENTITY_ID);

/* INTERACTIONS VIEW*/
CREATE OR REPLACE FORCE VIEW "UCMADMIN"."CCLA_INTERACTIONS_EXT" ("INTERACTION_ID", "USER_ID", "JOB_ID", "INTERACTION_DATE", "ENTITY_ID", "PERSON_ID", "CONFIRM_TYPES", "CONFIRM_OTHER", "INTERACTION_TYPE", "SUBJECT", "CATEGORY", "IS_QUERY", "IS_COMPLAINT", "IS_BREACH", "IS_ERROR", "CAMPAIGN_ID", "OUTCOME", "INTERACTION_STATUS", "ASSIGNEE", "DEADLINE", "LAST_UPDATED", "NAME", "FULL_NAME" , "TITLE", "FIRST_NAME", "SECOND_NAME")
AS
 SELECT
 inter."INTERACTION_ID",inter."USER_ID",inter."JOB_ID",inter."INTERACTION_DATE",
inter."ENTITY_ID",inter."PERSON_ID",
inter."CONFIRM_TYPES",inter."CONFIRM_OTHER",inter."INTERACTION_TYPE",
subj."SUBJECT",intcat."CATEGORY",inter."IS_QUERY",inter."IS_COMPLAINT",
inter."IS_BREACH",inter."IS_ERROR",inter."CAMPAIGN_ID",inter."OUTCOME",
inter."INTERACTION_STATUS",inter."ASSIGNEE",inter."DEADLINE",
inter."LAST_UPDATED",  cl.NAME, pers.FULL_NAME, pers.title, pers.first_name, PERS.SECOND_NAME
    
FROM CCLA_INTERACTION inter
LEFT JOIN ccla_entity cl ON (inter.ENTITY_ID = cl.ENTITY_ID)
LEFT JOIN CCLA_PERSON pers ON (inter.PERSON_ID =pers.PERSON_ID)
LEFT JOIN ccla_interaction_category intcat on (inter.CATEGORY_ID = intcat.INTERACTION_CATEGORY_ID)
LEFT JOIN ccla_interaction_subject subj on (inter.subject_id = subj.interaction_subject_id);

CREATE TABLE "CCLA_IDENTITY_VALIDATION_CHECK"
  (
    "PERSON_ID"            NUMBER(12,0),
    "DRIVING_LICENCE"      VARCHAR2(64 CHAR),
    "DRIVING_LICENCE_NAME" VARCHAR2(64 CHAR),
    "PASSPORT_NUMBER"      VARCHAR2(64 CHAR),
    "UTILITY_MAILSORT"     VARCHAR2(64 CHAR),
    "UTILITY_MAILSORT_DATE" TIMESTAMP (6),
    "DATE_LAST_UPDATED" TIMESTAMP (6),
    "DRIVING_LICENCE_VALID" NUMBER(*,0),
    "PASSPORT_VALID"        NUMBER(*,0),
    "MAILSORT_VALID"        NUMBER(*,0),
    CONSTRAINT "CCLA_IDENTITY_VALID_CHECK_PK" PRIMARY KEY ("PERSON_ID") ENABLE
  );

CREATE TABLE "CCLA_PERSON_AUDIT"
  (
    "AUDIT_ID"        NUMBER(15,0),
    "USER_ID"       VARCHAR(32 CHAR),
	"ACTION"		VARCHAR(32 CHAR),
    "PERSON_ID"      NUMBER(15,0),
    "ACCOUNT_CODE"   VARCHAR2(16 CHAR),
    "SALUTATION"     VARCHAR2(64 CHAR),
    "TITLE"          VARCHAR2(32 CHAR),
    "FIRST_NAME"     VARCHAR2(48 CHAR),
    "MIDDLE_NAME"    VARCHAR2(48 CHAR),
    "SECOND_NAME"    VARCHAR2(48 CHAR),
    "FULL_NAME"      VARCHAR2(255 CHAR),
    "QUALIFICATIONS" VARCHAR2(48 CHAR),
    "JOB_TITLE"      VARCHAR2(64 CHAR),
    "DATE_OF_BIRTH" TIMESTAMP (6),
    "GENDER"          VARCHAR2(32 CHAR),
    "TYPE"            VARCHAR2(32 CHAR),
    "CONSENT_TO_AUTH" NUMBER(1,0),
	"IS_DECEASED"	  NUMBER(1,0),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "CCLA_PERSON_AUDIT_PK" PRIMARY KEY ("AUDIT_ID") ENABLE
    )
	
	
	CREATE SEQUENCE seq_person_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
	
	
	create trigger trigger_person_audit
before insert on ccla_person_audit
for each row
begin
select seq_person_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "CCLA_ENTITY_AUDIT"
  (
    "AUDIT_ID"             NUMBER(15,0),
    "USER_ID"              VARCHAR2(32 CHAR),
    "ACTION"               VARCHAR2(20 CHAR),
    "ENTITY_ID"            NUMBER(15,0),
    "NAME"                 VARCHAR2(255 CHAR),
    "TYPE_ID"              NUMBER(3,0),
    "SUBTYPE_ID"           NUMBER(5,0),
    "ONS_NUMBER"           VARCHAR2(20 CHAR),
    "COMPANY_REG_NUM"      VARCHAR2(15 CHAR),
    "CHARITY_COMM_REG_NUM" VARCHAR2(20 CHAR),
    "PERSON_ID"            NUMBER(15,0),
    "SOURCE"               VARCHAR2(15 CHAR),
    "DATE_ADDED" TIMESTAMP (6),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "CCLA_ENTITY_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )
	
	CREATE SEQUENCE seq_entity_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

create trigger trigger_entity_audit
before insert on ccla_entity_audit
for each row
begin
select seq_entity_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "CCLA_ELEMENT_RELATIONS_AUDIT"
  (
    "AUDIT_ID"        NUMBER(15,0),
    "USER_ID"         VARCHAR2(32 CHAR),
    "ACTION"          VARCHAR2(20 CHAR),
    "RELATION_ID"      NUMBER(15,0),
    "ELEMENT_ID1"      NUMBER(15,0) NOT NULL ENABLE,
    "ELEMENT_ID2"      NUMBER(15,0) NOT NULL ENABLE,
    "RELATION_TYPE_ID" NUMBER(6,0) NOT NULL ENABLE,
    "RELATIONSHIP"     VARCHAR2(32 CHAR) NOT NULL ENABLE,
    "RELATION_FLAGS"   NUMBER(6,0),
    "RELATION_DATE" TIMESTAMP (6),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "ELEMENT_RELATION_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )
	
	CREATE SEQUENCE seq_relation_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;

create trigger trigger_relation_audit
before insert on ccla_element_relations_audit
for each row
begin
select seq_relation_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "UCMADMIN"."CCLA_ADDRESS_AUDIT"
  (
    "AUDIT_ID"         NUMBER(12,0),
    "USER_ID"          VARCHAR2(32 CHAR),
    "ACTION"           VARCHAR2(20 CHAR),
    "ADDRESS_ID"       NUMBER(12,0),
    "ADDR_FLAT"        VARCHAR2(80 CHAR),
    "ADDR_HOUSENAME"   VARCHAR2(80 CHAR),
    "ADDR_HOUSENUMBER" VARCHAR2(80 CHAR),
    "ADDR_STREET"      VARCHAR2(80 CHAR),
	 "ADDR_DISTRICT"    VARCHAR2(80 CHAR),
    "ADDR_CITY"        VARCHAR2(48 CHAR),
    "ADDR_COUNTY"      VARCHAR2(48 CHAR),
    "ADDR_COUNTRY"     VARCHAR2(48 CHAR),
    "ADDR_POSTCODE"    VARCHAR2(25 CHAR),
    "LAST_UPDATED" TIMESTAMP (6),
    "QAS_VALID" NUMBER(*,0),
    CONSTRAINT "ADDRESS_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )
	
		CREATE SEQUENCE seq_address_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
	
	
	create or replace trigger trigger_address_audit
before insert on ccla_address_audit
for each row
begin
select seq_address_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "UCMADMIN"."CCLA_CONTACT_MAP_AUDIT"
  (
    "AUDIT_ID"    NUMBER(15,0),
    "USER_ID"     VARCHAR2(32 CHAR),
    "ACTION"      VARCHAR2(20 CHAR),
    "CONTACT_ID"  NUMBER(15,0),
    "ELEMENT_ID"  NUMBER(15,0),
    "TYPE"        NUMBER(15,0),
    "NAME"        VARCHAR2(48 CHAR),
    "VALUE"       VARCHAR2(128 CHAR),
    "ADDRESS_ID"  NUMBER(15,0),
    "PREFERENCE"  NUMBER(2,0),
    "IS_DEFAULT"  NUMBER(1,0),
    "IS_DUBIOUS"  NUMBER(1,0),
    "IS_EXPERIAN" NUMBER(1,0),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "CONTACT_MAP_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )
	
			CREATE SEQUENCE seq_contact_map_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
	
	create or replace trigger trigger_contact_map_audit
before insert on ccla_contact_map_audit
for each row
begin
select seq_contact_map_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "UCMADMIN"."CCLA_ACCOUNT_AUDIT"
  (
    "AUDIT_ID"           NUMBER(15,0),
    "USER_ID"            VARCHAR2(32 CHAR),
    "ACTION"             VARCHAR2(20 CHAR),
    "ACCOUNT_ID"         NUMBER(15,0) NOT NULL ENABLE,
    "ACC_CLIENT_ID"      NUMBER(15,0),
    "ACC_SYNC_TO_AURORA" NUMBER(1,0),
    "DATE_LAST_REFRESH" TIMESTAMP (6),
    "ACC_ACCOUNTNUMBER" NUMBER(15,0),
    "ACC_FUNDCODE"      VARCHAR2(3 CHAR),
    "ACC_ACCNUMEXT"     VARCHAR2(15 BYTE),
    "ACC_SUBTITLE"      VARCHAR2(64 BYTE),
    "ACC_STATUS"        VARCHAR2(4 BYTE),
    "ACC_DATEOPENED" TIMESTAMP (6),
    "ACC_LSTAMDDTE" TIMESTAMP (6),
    "ACC_CASH"                   NUMBER(38,6),
    "ACC_UNITS"                  NUMBER(38,6),
    "ACC_SHARE_CLASS"            VARCHAR2(5 CHAR),
    "ACC_REQ_SIGNATURES"         NUMBER(5,0),
    "ACC_INCOME_DIST_METHOD"     VARCHAR2(6 BYTE),
    "ACC_MANDATED_ACCNUMEXT"     VARCHAR2(15 BYTE),
    "ACC_EXCLUSIVE_BANK_ACCOUNT" NUMBER(1,0),
    /*
	"ACC_AML_CHECKED"            NUMBER(1,0),
	*/
	"ACC_AML_CHECK_OVERRIDE_USER" VARCHAR2(48 CHAR),
    "ACC_ISEXTERNALACCOUNT"      NUMBER(1,0),
    "ACC_NOTES"                  VARCHAR2(200 CHAR),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "CCLA_ACCOUNT_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )	
	
	CREATE SEQUENCE seq_account_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
	
create or replace trigger trigger_account_audit
before insert on ccla_account_audit
for each row
begin
select seq_account_audit.nextval into :new.audit_id from dual;
end;


CREATE TABLE "UCMADMIN"."CCLA_BANK_ACCOUNT_AUDIT"
  (
    "AUDIT_ID"      NUMBER(15,0),
    "USER_ID"       VARCHAR2(32 CHAR),
    "ACTION"        VARCHAR2(20 CHAR),
    "BANK_ACCOUNT_ID" NUMBER(15,0),
    "ENTITY_ID"       NUMBER(15,0),
    "ACCOUNT_NO"      VARCHAR2(10 CHAR),
    "SORT_CODE"       VARCHAR2(6 CHAR),
    "ACCOUNT_NAME"    VARCHAR2(64 CHAR),
    CONSTRAINT "BANK_ACCOUNT_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )	
	
	CREATE SEQUENCE seq_bank_account_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;
	
create or replace trigger trigger_bank_account_audit
before insert on ccla_bank_account_audit
for each row
begin
select seq_bank_account_audit.nextval into :new.audit_id from dual;
end;


CREATE TABLE "UCMADMIN"."CCLA_BANK_ACC_RELATIONS_AUDIT"
  (
    "AUDIT_ID"                NUMBER(15,0),
    "USER_ID"                 VARCHAR2(32 CHAR),
    "ACTION"                  VARCHAR2(20 CHAR),
    "BANK_ACCOUNT_RELATION_ID" NUMBER(15,0),
    "ACCOUNT_ID"               NUMBER(15,0),
    "BANK_ACCOUNT_ID"          NUMBER(15,0),
    "WITHDRAWAL"               NUMBER(1,0),
    "INCOME"                   NUMBER(1,0),
    "IS_DEFAULT"               NUMBER(1,0),
    "LAST_UPDATED" TIMESTAMP (6),
    CONSTRAINT "BANK_ACC_RELATION_AUDIT_PK" PRIMARY KEY ("AUDIT_ID")
    )	
	
	CREATE SEQUENCE seq_bank_acc_relation_audit
    MINVALUE 1
    MAXVALUE 999999999999999
    START WITH 1
    INCREMENT BY 1
    NOCACHE;	
	
create or replace trigger trigger_bank_account_rel_audit
before insert on CCLA_BANK_ACC_RELATIONS_AUDIT
for each row
begin
select seq_bank_acc_relation_audit.nextval into :new.audit_id from dual;
end;	

CREATE TABLE "CCLA_ACCOUNT_ACTIONS"
  (
    "ACCOUNT_ACTION_ID"             NUMBER(12,0) NOT NULL ENABLE,
    "SOURCE_ACC_NUM_EXT"            VARCHAR2(15 CHAR),
    "SOURCE_ACC_COMPANY"            VARCHAR2(5 CHAR),
    "SOURCE_ACC_CLIENT_ID"          NUMBER(12,0),
    "SOURCE_ACC_NUM"                NUMBER(12,0),
    "SOURCE_ACC_FUND"               VARCHAR2(2 CHAR),
    "SOURCE_ACC_SUBTITLE"           VARCHAR2(64 CHAR),
    "SOURCE_ACC_CASH"               NUMBER(38,6),
    "SOURCE_ACC_UNITS"              NUMBER(38,6),
    "SOURCE_ACC_CORR_ID"            NUMBER(12,0),
    "SOURCE_ACC_INCOME_DIST_METHOD" VARCHAR2(6 CHAR),
    "SOURCE_ACC_IS_EXTERNAL"        VARCHAR2(1 CHAR),
    "SOURCE_ACC_SHARE_CLASS"        VARCHAR2(5 CHAR),
    "DEST_ACC_NUM_EXT"              VARCHAR2(15 CHAR),
    "DEST_ACC_COMPANY"              VARCHAR2(5 CHAR),
    "DEST_ACC_CLIENT_ID"            NUMBER(12,0),
    "DEST_ACC_NUM"                  NUMBER(12,0),
    "DEST_ACC_FUND"                 VARCHAR2(2 CHAR),
    "DEST_ACC_SUBTITLE"             VARCHAR2(64 CHAR),
    "DEST_ACC_CASH"                 NUMBER(38,6),
    "DEST_ACC_UNITS"                NUMBER(38,6),
    "DEST_ACC_CORR_ID"              NUMBER(12,0),
    "DEST_ACC_INCOME_DIST_METHOD"   VARCHAR2(6 CHAR),
    "DEST_ACC_IS_EXTERNAL"          VARCHAR2(1 CHAR),
    "DEST_ACC_SHARE_CLASS"        VARCHAR2(5 CHAR),
    "BANKING_DETAILS_ID"            NUMBER(12,0),
    "DOCNAME"                       VARCHAR2(48 CHAR),
    "USER_ID"                       VARCHAR2(64 CHAR),
    "ACTION"                        VARCHAR2(30 CHAR) NOT NULL ENABLE,
    "STATUS"                        VARCHAR2(30 CHAR),
    "SUSPENDED"                     VARCHAR2(1 CHAR),
    "COMPLETED"                     VARCHAR2(1 CHAR),
    "JOB_ID"                        VARCHAR2(64 CHAR),
    "SUBMITTED_FOR_AUTH"            VARCHAR2(1 CHAR),
    "BATCH_ERRORS"                  VARCHAR2(1 CHAR),
    "AURORA_BATCH_ID"               NUMBER(38,0),
	"AUTH_STATUS"					VARCHAR2(50 CHAR),
    "DATE_ADDED" 					TIMESTAMP (6),
    "LAST_UPDATED" 					TIMESTAMP (6),
	
    CONSTRAINT "ACCOUNT_ACTION_PK" 				PRIMARY KEY ("ACCOUNT_ACTION_ID"),
	CONSTRAINT "ACCOUNT_ACTION_BNK_DETAILS_FK" 	FOREIGN KEY ("BANKING_DETAILS_ID") REFERENCES "CCLA_ACCOUNT_BANKING_DETAILS" ("BANKING_DETAILS_ID")
);

CREATE OR REPLACE FORCE VIEW "CCLA_ACCOUNT_ACTIONS_FULL" ("ACCOUNT_ACTION_ID", "SOURCE_ACC_NUM_EXT", "SOURCE_ACC_COMPANY", "SOURCE_ACC_CLIENT_ID", "SOURCE_ACC_NUM", "SOURCE_ACC_FUND", "SOURCE_ACC_SUBTITLE", "SOURCE_ACC_CASH", "SOURCE_ACC_UNITS", "SOURCE_ACC_CORR_ID", "SOURCE_ACC_INCOME_DIST_METHOD", "SOURCE_ACC_IS_EXTERNAL", "SOURCE_ACC_SHARE_CLASS", "DEST_ACC_NUM_EXT", "DEST_ACC_COMPANY", "DEST_ACC_CLIENT_ID", "DEST_ACC_NUM", "DEST_ACC_FUND", "DEST_ACC_SUBTITLE", "DEST_ACC_CASH", "DEST_ACC_UNITS", "DEST_ACC_CORR_ID", "DEST_ACC_INCOME_DIST_METHOD", "DEST_ACC_IS_EXTERNAL", "DEST_ACC_SHARE_CLASS", "BANKING_DETAILS_ID", "DOCNAME", "USER_ID", "ACTION", "STATUS", "SUSPENDED", "COMPLETED", "JOB_ID", "SUBMITTED_FOR_AUTH", "BATCH_ERRORS", "AURORA_BATCH_ID", "AUTH_STATUS", "DATE_ADDED", "LAST_UPDATED", "WITH_ACC_NUMBER", "WITH_SORT_CODE", "WITH_ACC_NAME", "INC_ACC_NUMBER", "INC_SORT_CODE", "INC_ACC_NAME", "MANDATED_ACC_COMPANY", "MANDATED_ACC_NUM_EXT")
AS
  SELECT act."ACCOUNT_ACTION_ID",
    act."SOURCE_ACC_NUM_EXT",
    act."SOURCE_ACC_COMPANY",
    act."SOURCE_ACC_CLIENT_ID",
    act."SOURCE_ACC_NUM",
    act."SOURCE_ACC_FUND",
    act."SOURCE_ACC_SUBTITLE",
    act."SOURCE_ACC_CASH",
    act."SOURCE_ACC_UNITS",
    act."SOURCE_ACC_CORR_ID",
    act."SOURCE_ACC_INCOME_DIST_METHOD",
    act."SOURCE_ACC_IS_EXTERNAL",
    act."SOURCE_ACC_SHARE_CLASS",
    act."DEST_ACC_NUM_EXT",
    act."DEST_ACC_COMPANY",
    act."DEST_ACC_CLIENT_ID",
    act."DEST_ACC_NUM",
    act."DEST_ACC_FUND",
    act."DEST_ACC_SUBTITLE",
    act."DEST_ACC_CASH",
    act."DEST_ACC_UNITS",
    act."DEST_ACC_CORR_ID",
    act."DEST_ACC_INCOME_DIST_METHOD",
    act."DEST_ACC_IS_EXTERNAL",
    act."DEST_ACC_SHARE_CLASS",
    act."BANKING_DETAILS_ID",
    act."DOCNAME",
    act."USER_ID",
    act."ACTION",
    act."STATUS",
    act."SUSPENDED",
    act."COMPLETED",
    act."JOB_ID",
    act."SUBMITTED_FOR_AUTH",
    act."BATCH_ERRORS",
    act."AURORA_BATCH_ID",
    act."AUTH_STATUS",
    act."DATE_ADDED",
    act."LAST_UPDATED",
    bnk.WITH_ACC_NUMBER,
    bnk.WITH_SORT_CODE,
    bnk.WITH_ACC_NAME,
    bnk.INC_ACC_NUMBER,
    bnk.INC_SORT_CODE,
    bnk.INC_ACC_NAME,
    bnk.MANDATED_ACC_COMPANY,
    bnk.MANDATED_ACC_NUM_EXT
  FROM CCLA_ACCOUNT_ACTIONS act
  LEFT JOIN CCLA_ACCOUNT_BANKING_DETAILS bnk
  ON (act.BANKING_DETAILS_ID = bnk.BANKING_DETAILS_ID);
	
CREATE TABLE "CCLA_ACCOUNT_ACTIONS_AUDIT" (
	
	"AUDIT_ID"					NUMBER(15,0) NOT NULL ENABLE,
	"ACCOUNT_ACTION_ID"         NUMBER(12,0) NOT NULL ENABLE,
	
	"ACTION"					VARCHAR2(25 CHAR),
	"DESCRIPTION"				VARCHAR2(60 CHAR),
	"USER_ID"					VARCHAR2(48 CHAR),
	"ACTION_DATE"				TIMESTAMP(6),
	
	CONSTRAINT "ACCOUNT_ACTION_AUDIT_PK" 		PRIMARY KEY ("AUDIT_ID")
);

CREATE SEQUENCE SEQ_ACCOUNT_ACTIONS_AUDIT
MINVALUE 1
MAXVALUE 999999999999999
START WITH 1
INCREMENT BY 1
NOCACHE;	
	
create or replace trigger TRIGGER_ACCOUNT_ACTIONS_AUDIT
before insert on CCLA_ACCOUNT_ACTIONS_AUDIT
for each row
begin
select SEQ_ACCOUNT_ACTIONS_AUDIT.nextval into :new.audit_id from dual;
end;
	
	CREATE TABLE "UCMADMIN"."CCLA_CLIENT_AURORA_MAP_AUDIT"
  (
    "AUDIT_ID"            NUMBER(15,0),
    "USER_ID"             VARCHAR2(40 CHAR),
    "ACTION"              VARCHAR2(20 CHAR),
    "LAST_UPDATED"         TIMESTAMP,
    "CLIENT_AURORA_MAP_ID" NUMBER(15,0),
    "CLIENT_ID"            NUMBER(15,0),
    "COMPANY"              VARCHAR2(10 CHAR),
    "CLIENT_NUMBER"        NUMBER(15,0),
    CONSTRAINT "CLIENT_AURORA_MAP_AUDIT_PK" PRIMARY KEY ("AUDIT_ID"))
	
	
CREATE SEQUENCE seq_client_aurora_map_audit
MINVALUE 1
MAXVALUE 999999999999999
START WITH 1
INCREMENT BY 1
NOCACHE;	
	
create or replace trigger trigger_client_aurora_map_aud
before insert on CCLA_CLIENT_AURORA_MAP_AUDIT
for each row
begin
select seq_client_aurora_map_audit.nextval into :new.audit_id from dual;
end;

CREATE TABLE "UCMADMIN"."CCLA_PERSON_AURORA_MAP_AUDIT"
  (
    "AUDIT_ID"            NUMBER(15,0),
    "USER_ID"             VARCHAR2(40 CHAR),
    "ACTION"              VARCHAR2(20 CHAR),
    "LAST_UPDATED"        TIMESTAMP,
    "PERSON_AURORA_MAP_ID" NUMBER(15,0),
    "PERSON_ID"            NUMBER(15,0),
    "COMPANY"              VARCHAR2(10 CHAR),
    "CORR_ID"              NUMBER(15,0),
    CONSTRAINT "PERSON_AURORA_MAP_AUDIT_PK" PRIMARY KEY ("AUDIT_ID") )
	
	CREATE SEQUENCE seq_person_aurora_map_audit
MINVALUE 1
MAXVALUE 999999999999999
START WITH 1
INCREMENT BY 1
NOCACHE;	

create or replace trigger trigger_person_aurora_map_aud
before insert on CCLA_PERSON_AURORA_MAP_AUDIT
for each row
begin
select seq_person_aurora_map_audit.nextval into :new.audit_id from dual;
end;

/*
	Fetch code to extract all bundle documents in workflow.
	
	Should be used before disabling the CCLA_MailHandling workflow.
*/

SELECT r.dDocName AS DOCNAME, r.dInDate, r.dDocType, xBundleRef, xStatus FROM WORKFLOWDOCUMENTS wfd 
INNER JOIN Revisions r ON (r.dDocName = wfd.dDocName)
INNER JOIN DocMeta dm ON (r.dID = dm.dID)

WHERE DWFID IN (SELECT DWFID FROM WORKFLOWS WHERE DWFNAME = 'CCLA_MailHandling')
AND r.dRevRank = 0;

