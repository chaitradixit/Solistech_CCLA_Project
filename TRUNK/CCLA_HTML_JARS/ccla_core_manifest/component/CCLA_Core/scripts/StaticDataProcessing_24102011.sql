
-- STATIC_DATA_UPDATE (DATA LOAD)
INSERT INTO REF_STATIC_DATA_UPDATE (SDU_ID, SDU_NAME, CREATE_INSTR_TYPE_ID, UPDATE_INSTR_TYPE_ID) 
VALUES (1, 'AURORA CORRESPONDENT', 128, 129);
INSERT INTO REF_STATIC_DATA_UPDATE (SDU_ID, SDU_NAME, CREATE_INSTR_TYPE_ID, UPDATE_INSTR_TYPE_ID) 
VALUES (2, 'AURORA CLIENT', 126, 127);
INSERT INTO REF_STATIC_DATA_UPDATE (SDU_ID, SDU_NAME, CREATE_INSTR_TYPE_ID, UPDATE_INSTR_TYPE_ID) 
VALUES (3, 'AURORA ACCOUNT', 130, 131);

-- STATIC_DATA_UPDATE_APPLIED DATA LOAD
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (71, 1, 1, 1, 1); -- MAND to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (71, 2, 1, 1, 2); -- MAND to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (71, 3, 1, 1, 3); -- MAND to CREATE/UPDATE ACCOUNT

INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (3, 1, 1, 1, 1); -- APP to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (3, 2, 1, 1, 2); -- APP to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (3, 3, 1, 1, 3); -- APP to CREATE/UPDATE ACCOUNT

INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (4, 1, 1, 1, 1); -- APPSHORT to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (4, 2, 1, 1, 2); -- APPSHORT to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (4, 3, 1, 1, 3); -- APPSHORT to CREATE/UPDATE ACCOUNT

INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (7, 1, 1, 1, 1); -- AUTOAPP to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (7, 2, 1, 1, 2); -- AUTOAPP to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (7, 3, 1, 1, 3); -- AUTOAPP to CREATE/UPDATE ACCOUNT

INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (8, 1, 1, 1, 1); -- AUTOMAND to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (8, 2, 1, 1, 2); -- AUTOMAND to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (8, 3, 1, 1, 3); -- AUTOMAND to CREATE/UPDATE ACCOUNT

INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (72, 1, 1, 1, 1); -- MANDSHORT to CREATE/UPDATE CORRESPONDENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (72, 2, 1, 1, 2); -- MANDSHORT to CREATE/UPDATE CLIENT
INSERT INTO STATIC_DATA_UPDATE_APPLIED (INSTRUCTION_TYPE_ID, EXECUTION_ORDER, ALLOW_UPDATE, ALLOW_CREATE, SDU_ID) 
VALUES (72, 3, 1, 1, 3); -- MANDSHORT to CREATE/UPDATE ACCOUNT


-- UPDATE TO VIEW 
CREATE OR REPLACE FORCE VIEW "CCLA"."V_SDU_INSTRUCTION_DATA" 
("INSTRUCTION_ID", "INSTRUCTION_STATUS_ID", 
"INSTRUCTION_TYPE_ID", "COMPANY_ID", 
"SOURCE_ACCOUNT_ID", "PERSON_ID", 
"ORGANISATION_ID", "IS_AUTHORISED", IS_EXECUTION_SUCCESS)
AS
SELECT I.INSTRUCTION_ID, RIS.INSTRUCTION_STATUS_ID,
    MAX(RIT.INSTRUCTION_TYPE_ID) AS INSTRUCTION_TYPE_ID,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=50
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS COMPANY_ID,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=1
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS SOURCE_ACCOUNT_ID,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=10
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS PERSON_ID,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=9
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS ORGANISATION_ID,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=45
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS IS_AUTHORISED,
    MAX(
    CASE
      WHEN RID.INSTRUCTION_DATA_ID=51
      THEN IDA.INSTRUCTION_NUM_VALUE
      ELSE NULL
    END) AS IS_EXECUTION_SUCCESS    
  FROM INSTRUCTION I
  INNER JOIN REF_INSTRUCTION_STATUS RIS 
  ON (I.INSTRUCTION_STATUS_ID = RIS.INSTRUCTION_STATUS_ID)
  INNER JOIN REF_INSTRUCTION_TYPE RIT
  ON (I.INSTRUCTION_TYPE_ID = RIT.INSTRUCTION_TYPE_ID)
  INNER JOIN APPLICABLE_INSTRUCTION_DATA AID
  ON (RIT.INSTRUCTION_TYPE_ID = AID.INSTRUCTION_TYPE_ID)
  INNER JOIN INSTRUCTION_DATA_APPLIED IDA
  ON (AID.APPLICABLE_INSTRUCTION_DATA_ID = IDA.APPLICABLE_INSTRUCTION_DATA_ID
  AND I.INSTRUCTION_ID                   = IDA.INSTRUCTION_ID)
  INNER JOIN REF_INSTRUCTION_DATA RID
  ON (AID.INSTRUCTION_DATA_ID     = RID.INSTRUCTION_DATA_ID)
  WHERE (RIT.IS_STATIC_DATA_UPDATE=1) AND RIS.INSTRUCTION_STATUS_ID NOT IN (7,11,29,32)
  GROUP BY I.INSTRUCTION_ID, RIS.INSTRUCTION_STATUS_ID;
