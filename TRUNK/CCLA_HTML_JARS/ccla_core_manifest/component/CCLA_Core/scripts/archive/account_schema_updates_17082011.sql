-- Table REF_ACCOUNT_TYPE

CREATE TABLE REF_ACCOUNT_TYPE(
  ACCOUNT_TYPE_ID Number(15,0) CONSTRAINT ACCTYPE_ID_NN NOT NULL,
  ACCOUNT_TYPE_NAME Varchar2(30 ) CONSTRAINT ACCTYPE_NAME_NN NOT NULL,
  ACCOUNT_TYPE_DESCRIPTION Varchar2(200 )
)
/

-- Add keys for table REF_ACCOUNT_TYPE

ALTER TABLE REF_ACCOUNT_TYPE ADD CONSTRAINT ACCTYPE_PK PRIMARY KEY (ACCOUNT_TYPE_ID)
/

-- Table and Columns comments section
  
COMMENT ON TABLE REF_ACCOUNT_TYPE IS 'Reference table for different account types, e.g. Unitized, Deposit, Loan'
/

-- Table REF_LOAN_TYPE

CREATE TABLE REF_LOAN_TYPE(
  LOAN_TYPE_ID Number(15,0) CONSTRAINT LOANTYPE_ID_NN NOT NULL,
  LOAN_TYPE_NAME Varchar2(30 ) CONSTRAINT LOANTYPE_NAME_NN NOT NULL
)
/

-- Add keys for table REF_LOAN_TYPE

ALTER TABLE REF_LOAN_TYPE ADD CONSTRAINT LOANTYPE_PK PRIMARY KEY (LOAN_TYPE_ID)
/

-- New ACCOUNT columns
ALTER TABLE ACCOUNT ADD (
  ACCOUNT_TYPE_ID Number(15,0),
  LOAN_TYPE_ID Number(15,0),
  LOAN_TERM Number(10,0)
);

COMMENT ON COLUMN ACCOUNT.LOAN_TYPE_ID IS 'Type of loan (Interest/Repayment) only relevant for Loan type accounts'
/
COMMENT ON COLUMN ACCOUNT.LOAN_TERM IS 'Term of the loan, in months. Only relevant to accounts of the ''Loan'' type.'
/

-- FK constraints
CREATE INDEX ACCTYPE_ACCOUNT_IX ON ACCOUNT (ACCOUNT_TYPE_ID) 
/
ALTER TABLE ACCOUNT ADD CONSTRAINT ACCTYPE_ACCOUNT_FK FOREIGN KEY (ACCOUNT_TYPE_ID) REFERENCES REF_ACCOUNT_TYPE (ACCOUNT_TYPE_ID)
/

CREATE INDEX LOANTYPE_ACCOUNT_IX ON ACCOUNT (LOAN_TYPE_ID) 
/
ALTER TABLE ACCOUNT ADD CONSTRAINT LOANTYPE_ACCOUNT_FK FOREIGN KEY (LOAN_TYPE_ID) REFERENCES REF_LOAN_TYPE (LOAN_TYPE_ID)
/


-- Data Loads
REM INSERTING into REF_ACCOUNT_TYPE
Insert into REF_ACCOUNT_TYPE (ACCOUNT_TYPE_ID,ACCOUNT_TYPE_NAME,ACCOUNT_TYPE_DESCRIPTION) values (1,'Unitized',null);
Insert into REF_ACCOUNT_TYPE (ACCOUNT_TYPE_ID,ACCOUNT_TYPE_NAME,ACCOUNT_TYPE_DESCRIPTION) values (2,'Deposit',null);
Insert into REF_ACCOUNT_TYPE (ACCOUNT_TYPE_ID,ACCOUNT_TYPE_NAME,ACCOUNT_TYPE_DESCRIPTION) values (3,'Loan',null);

REM INSERTING into REF_LOAN_TYPE
Insert into REF_LOAN_TYPE (LOAN_TYPE_ID,LOAN_TYPE_NAME) values (1,'Interest-only');
Insert into REF_LOAN_TYPE (LOAN_TYPE_ID,LOAN_TYPE_NAME) values (2,'Repayment');

-- Update existing accounts
UPDATE ACCOUNT SET ACCOUNT_TYPE_ID = 2 WHERE FUND_CODE IN ('C','D');
UPDATE ACCOUNT SET ACCOUNT_TYPE_ID = 1 WHERE FUND_CODE NOT IN ('C','D');

-- Add NN constraint to Account table
ALTER TABLE ACCOUNT MODIFY (
	ACCOUNT_TYPE_ID Number(15,0) CONSTRAINT ACCOUNT_ACCTYPE_NN NOT NULL
);

-- New sequence used for issuing Loan Account numbers
CREATE SEQUENCE SEQ_LOAN_ACCOUNTNUMBER MINVALUE 9000001 START WITH 9000001 CACHE 20 NOORDER NOCYCLE;

-- Run on live to apply next number
SELECT SEQ_LOAN_ACCOUNTNUMBER.NEXTVAL FROM DUAL;

-- New element attribute
REM INSERTING into REF_ELEMENT_ATTRIBUTES
Insert into REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID,ELEMENT_ATTRIBUTE_NAME,ELEMENT_TYPE_ID,ELEMENT_ATTRIBUTE_DESCRIPTION,SET_BY_USER,VERIFICATION_SOURCE_ID,ELEMENT_IDENTIFIER_ID,USER_GROUPS,ELEMENT_ATTRIBUTE_DATA_TYPE,ELEMENT_ATTRIBUTE_TYPE_ID) values (44,'Approved for Diocesan Loans',1,'Whether or not the organisation has passed approval checks for borrowing under the Diocesan Loan scheme',1,null,null,null,'BOOL',6);
-- Add new Element Attribute 'Email Indemnity requested'
Insert into REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID,ELEMENT_ATTRIBUTE_NAME,ELEMENT_TYPE_ID,ELEMENT_ATTRIBUTE_DESCRIPTION,SET_BY_USER,VERIFICATION_SOURCE_ID,ELEMENT_IDENTIFIER_ID,USER_GROUPS,ELEMENT_ATTRIBUTE_DATA_TYPE,ELEMENT_ATTRIBUTE_TYPE_ID) values (45,'Email Indemnity requested',1,'Client has requested email indemnity form',1,null,null,null,'BOOL',6);
-- Add new Element Attribute 'Email Indemnity received'
Insert into REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID,ELEMENT_ATTRIBUTE_NAME,ELEMENT_TYPE_ID,ELEMENT_ATTRIBUTE_DESCRIPTION,SET_BY_USER,VERIFICATION_SOURCE_ID,ELEMENT_IDENTIFIER_ID,USER_GROUPS,ELEMENT_ATTRIBUTE_DATA_TYPE,ELEMENT_ATTRIBUTE_TYPE_ID) values (46,'Email Indemnity received',1,'Client has approved email indemnity',1,null,null,null,'BOOL',6);

-- Add new (account) Element Attribute 'Use current signatory list'
Insert into REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID,ELEMENT_ATTRIBUTE_NAME,ELEMENT_TYPE_ID,ELEMENT_ATTRIBUTE_DESCRIPTION,SET_BY_USER,VERIFICATION_SOURCE_ID,ELEMENT_IDENTIFIER_ID,USER_GROUPS,ELEMENT_ATTRIBUTE_DATA_TYPE,ELEMENT_ATTRIBUTE_TYPE_ID) 
values (47,'Use current sig. list',3,'Client has instructed main signatory list to be used against this account',1,null,null,null,'BOOL',5);
  

CREATE OR REPLACE PUBLIC SYNONYM REF_ACCOUNT_TYPE FOR CCLA.REF_ACCOUNT_TYPE;
GRANT SELECT ON REF_ACCOUNT_TYPE TO UCMADMIN;

CREATE OR REPLACE PUBLIC SYNONYM REF_LOAN_TYPE FOR CCLA.REF_LOAN_TYPE;
GRANT SELECT ON REF_LOAN_TYPE TO UCMADMIN;

CREATE OR REPLACE PUBLIC SYNONYM SEQ_LOAN_ACCOUNTNUMBER FOR CCLA.SEQ_LOAN_ACCOUNTNUMBER;
GRANT SELECT ON SEQ_LOAN_ACCOUNTNUMBER TO UCMADMIN;

-- Adds 'Email Indemnity Received' attribute for all orgs with an EMAILINDEMNITY doc in UCM.
INSERT INTO ELEMENT_ATTRIBUTE_APPLIED 
(ELEMENT_ID, ELEMENT_ATTRIBUTE_ID, DATE_ADDED, ATTRIBUTE_STATUS, LAST_UPDATED, LAST_UPDATED_BY, SUPPORTING_DOC_ID, ATTRIBUTE_VALUE)
SELECT ORGANISATION_ID, 46, SYSDATE, 1, SYSDATE, 'sysadmin', null, null 
FROM CLIENT_AURORA_MAP clMap INNER JOIN REF_COMPANY comp ON (clMap.COMPANY_ID = comp.COMPANY_ID) 
WHERE (CLIENT_NUMBER, COMPANY_CODE) IN
(SELECT xClientNumber, xCompany FROM DocMeta
WHERE REGEXP_LIKE(xClientNumber, '^\d+$')
AND xDocumentClass = 'EMAILINDEMNITY');

--Updated views
CREATE OR REPLACE FORCE VIEW "UCMADMIN"."ACCOUNT_EXTENDED" ("ACCOUNT_ID", "MANDATED_ACCOUNT_ID", "INCOME_DISTRIBUTION_METHOD", "FUND_CODE", "ACCOUNT_STATUS_ID", "AURORA_ACCOUNT", "ACCOUNTNUMBER", "ACCNUMEXT", "SUBTITLE", "DATE_OPENED", "SHARE_CLASS_ID", "REQ_SIGNATURES", "IS_EXCLUSIVE", "AML_CHECK_OVERRIDE_USER", "LAST_UPDATED", 
    "ACCOUNT_TYPE_ID",
    "LOAN_TYPE_ID",
    "LOAN_TERM",
    "ACCOUNT_TYPE_NAME", 
    "ACCOUNT_STATUS_NAME", "SHORT_NAME", "IDM_NAME", 
    "ACC_CASH", "ACC_UNITS", "DATE_LAST_REFRESH")
AS
  SELECT acc."ACCOUNT_ID",
    acc."MANDATED_ACCOUNT_ID",
    acc."INCOME_DISTRIBUTION_METHOD",
    acc."FUND_CODE",
    acc."ACCOUNT_STATUS_ID",
    acc."AURORA_ACCOUNT",
    acc."ACCOUNTNUMBER",
    acc."ACCNUMEXT",
    acc."SUBTITLE",
    ACC."DATE_OPENED",
    acc."SHARE_CLASS_ID",
    acc."REQ_SIGNATURES",
    acc."IS_EXCLUSIVE",
    acc."AML_CHECK_OVERRIDE_USER",
    acc."LAST_UPDATED",
    acc.ACCOUNT_TYPE_ID,
    acc.LOAN_TYPE_ID,
    acc.LOAN_TERM,
    accType.ACCOUNT_TYPE_NAME,
    accStatus.ACCOUNT_STATUS_NAME,
    accStatus.SHORT_NAME,
    incDistMethod.IDM_NAME,
    accValue.ACC_CASH,
    accValue.ACC_UNITS,
    accValue.DATE_LAST_REFRESH
  FROM ACCOUNT acc
  INNER JOIN REF_ACCOUNT_STATUS accStatus
  ON (acc.ACCOUNT_STATUS_ID = accStatus.ACCOUNT_STATUS_ID)
  INNER JOIN REF_INCOME_DIST_METHOD incDistMethod
  ON (acc.INCOME_DISTRIBUTION_METHOD = incDistMethod.IDM_CODE)
  INNER JOIN REF_ACCOUNT_TYPE accType
  ON (acc.ACCOUNT_TYPE_ID = accType.ACCOUNT_TYPE_ID)
  LEFT JOIN ACCOUNT_VALUE accValue
  ON (acc.ACCOUNT_ID = accValue.ACCOUNT_ID);
  
 
CREATE OR REPLACE FORCE VIEW "UCMADMIN"."ACCOUNT_EXTENDED_CLIENT" ("ACCOUNT_ID", "MANDATED_ACCOUNT_ID", "INCOME_DISTRIBUTION_METHOD", "FUND_CODE", "ACCOUNT_STATUS_ID", "AURORA_ACCOUNT", "ACCOUNTNUMBER", "ACCNUMEXT", "SUBTITLE", "DATE_OPENED", "SHARE_CLASS_ID", "REQ_SIGNATURES", "IS_EXCLUSIVE", "AML_CHECK_OVERRIDE_USER", "LAST_UPDATED", 
"ACCOUNT_TYPE_ID",
"LOAN_TYPE_ID",
"LOAN_TERM",
"ACCOUNT_TYPE_NAME", 
"ACCOUNT_STATUS_NAME", "SHORT_NAME", "IDM_NAME", "ACC_CASH", "ACC_UNITS", "DATE_LAST_REFRESH", "ORGANISATION_ID", "ORG_ACCOUNT_CODE", "ORGANISATION_NAME", "CLIENT_NUMBER")
AS
  SELECT acc."ACCOUNT_ID",
    acc."MANDATED_ACCOUNT_ID",
    acc."INCOME_DISTRIBUTION_METHOD",
    acc."FUND_CODE",
    acc."ACCOUNT_STATUS_ID",
    acc."AURORA_ACCOUNT",
    acc."ACCOUNTNUMBER",
    acc."ACCNUMEXT",
    acc."SUBTITLE",
    acc."DATE_OPENED",
    acc."SHARE_CLASS_ID",
    acc."REQ_SIGNATURES",
    acc."IS_EXCLUSIVE",
    acc."AML_CHECK_OVERRIDE_USER",
    acc."LAST_UPDATED",
    acc."ACCOUNT_TYPE_ID",
    acc."LOAN_TYPE_ID",
    acc."LOAN_TERM",
    accType."ACCOUNT_TYPE_NAME", 
    accStatus.ACCOUNT_STATUS_NAME,
    accStatus.SHORT_NAME,
    incDistMethod.IDM_NAME,
    accValue.ACC_CASH,
    accValue.ACC_UNITS,
    accValue.DATE_LAST_REFRESH,
    org.ORGANISATION_ID,
    org.ORG_ACCOUNT_CODE,
    org.ORGANISATION_NAME,
    cli.CLIENT_NUMBER
  FROM ACCOUNT acc
  INNER JOIN REF_ACCOUNT_STATUS accStatus
  ON (acc.ACCOUNT_STATUS_ID = accStatus.ACCOUNT_STATUS_ID)
  INNER JOIN REF_INCOME_DIST_METHOD incDistMethod
  ON (acc.INCOME_DISTRIBUTION_METHOD = incDistMethod.IDM_CODE)
  INNER JOIN REF_ACCOUNT_TYPE accType
  ON (acc.ACCOUNT_TYPE_ID = accType.ACCOUNT_TYPE_ID)
  LEFT JOIN ACCOUNT_VALUE accValue
  ON (acc.ACCOUNT_ID = accValue.ACCOUNT_ID)
  INNER JOIN RELATIONS rel
  ON (acc.ACCOUNT_ID       = rel.ELEMENT_ID2
  AND rel.RELATION_NAME_ID = 20)
  INNER JOIN ORGANISATION org
  ON (org.ORGANISATION_ID = rel.ELEMENT_ID1)
  LEFT JOIN CLIENT_AURORA_MAP cli
  ON (org.ORGANISATION_ID = cli.ORGANISATION_ID)
  ORDER BY org.ORGANISATION_ID,
    ACC.FUND_CODE,
    acc.accountnumber;  

-- New doc classes
REM INSERTING into DOCUMENT_CLASSES
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) values ('126',to_timestamp('23-AUG-11 13.01.56.997000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.02.00.333000000','DD-MON-RR HH24.MI.SS.FF'),'cclaucmdev','DIOPREADVICE','Y','Dio Loan Interest Repayment','N',null,'Y','Y','N',null,'N');
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) values ('125',to_timestamp('23-AUG-11 13.00.41.165000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.00.46.925000000','DD-MON-RR HH24.MI.SS.FF'),'cclaucmdev','DIOADDCAP','Y','Dio Loan Redemption','N',null,'Y','Y','N',null,'N');
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) values ('124',to_timestamp('23-AUG-11 12.59.22.548000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 12.59.25.541000000','DD-MON-RR HH24.MI.SS.FF'),'cclaucmdev','DIOWTHBACS','Y','Dio Loan Withdrawal by CHAPS','N',null,'Y','Y','N','Y','N');
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) values ('123',to_timestamp('23-AUG-11 12.58.14.348000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 12.58.17.693000000','DD-MON-RR HH24.MI.SS.FF'),'cclaucmdev','DIOWTHCHPS','Y','Dio Loan Draw-Down by CHAPS','N',null,'Y','Y','N','Y','N');
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) values ('122',to_timestamp('23-AUG-11 12.27.00.399000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 12.27.00.399000000','DD-MON-RR HH24.MI.SS.FF'),'cclaucmdev','DIOAPP','Y','Dio Loan Application Form','N','N','Y','N','N','N','Y');

-- New Instruction Types
REM INSERTING into REF_INSTRUCTION_TYPE
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (121,'DIOPREADVICE',1,'Dio Loan Interest Repayment',1,1,0,0,to_timestamp('23-AUG-11 13.17.04.517000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.17.08.253000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (120,'DIOADDCAP',1,'Dio Loan Redemption',1,1,0,0,to_timestamp('23-AUG-11 13.16.05.029000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.16.08.806000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (119,'DIOWTHBACS',2,'Dio Loan Draw-Down by BACS',1,1,1,0,to_timestamp('23-AUG-11 13.15.10.140000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.15.13.781000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (118,'DIOWTHCHPS',2,'Dio Loan Draw-Down by CHAPS',1,1,1,0,to_timestamp('23-AUG-11 13.13.28.973000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 13.13.32.541000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (117,'DIOAPP',null,'Diocesan Loan Application',0,1,0,0,to_timestamp('23-AUG-11 12.38.43.732000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('23-AUG-11 12.38.46.692000000','DD-MON-RR HH24.MI.SS.FF'),0);

-- New Applicable Instruction Data

-- Add data fields for DIOAPP
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, INSTRUCTION_DATA_ID, 117, IS_OPTIONAL  FROM APPLICABLE_INSTRUCTION_DATA aid
WHERE aid.INSTRUCTION_TYPE_ID = 71;

-- Add data fields for DIOWTHBACS
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, INSTRUCTION_DATA_ID, 118, IS_OPTIONAL  FROM APPLICABLE_INSTRUCTION_DATA aid
WHERE aid.INSTRUCTION_TYPE_ID = 107;

-- Add data fields for DIOWTHCHPS
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, INSTRUCTION_DATA_ID, 119, IS_OPTIONAL  FROM APPLICABLE_INSTRUCTION_DATA aid
WHERE aid.INSTRUCTION_TYPE_ID = 106;

-- Add data fields for DIOADDCAP
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, INSTRUCTION_DATA_ID, 120, IS_OPTIONAL  FROM APPLICABLE_INSTRUCTION_DATA aid
WHERE aid.INSTRUCTION_TYPE_ID = 14;

-- Add data fields for DIOPREADVICE
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, INSTRUCTION_DATA_ID, 121, IS_OPTIONAL  FROM APPLICABLE_INSTRUCTION_DATA aid
WHERE aid.INSTRUCTION_TYPE_ID = 14;

-- Update Form Doc Classes
UPDATE REF_FORM_TYPE SET GEN_INSTRUCTION_TYPE_ID = 117, RET_INSTRUCTION_TYPE_ID = 117 WHERE FORM_TYPE_ID = 12;
UPDATE REF_FORM_TYPE SET GEN_INSTRUCTION_TYPE_ID = 118, RET_INSTRUCTION_TYPE_ID = 118, IS_SINGLETON = 1 WHERE FORM_TYPE_ID = 13;
UPDATE REF_FORM_TYPE SET GEN_INSTRUCTION_TYPE_ID = 120, RET_INSTRUCTION_TYPE_ID = 120 WHERE FORM_TYPE_ID = 14;

-- New Dual Index rules
INSERT INTO DUAL_INDEX_RULES
SELECT SEQ_DUAL_INDEX_RULE.NEXTVAL, DOC_CLASS, 1 FROM DOCUMENT_CLASSES
WHERE DOC_CLASS IN ('DIOAPP','DIOWTHCHPS','DIOWTHBACS','DIOADDCAP','DIOPREADVICE');

-- New Dual Index fields

INSERT INTO DUAL_INDEX_RULE_FIELDS
SELECT DUAL_INDEX_RULE_ID, 9, SYSDATE FROM DUAL_INDEX_RULES
WHERE DOCUMENT_CLASS IN ('DIOAPP','DIOWTHCHPS','DIOWTHBACS','DIOADDCAP','DIOPREADVICE');

INSERT INTO DUAL_INDEX_RULE_FIELDS
SELECT DUAL_INDEX_RULE_ID, 2, SYSDATE FROM DUAL_INDEX_RULES
WHERE DOCUMENT_CLASS IN ('DIOAPP','DIOWTHCHPS','DIOWTHBACS','DIOADDCAP','DIOPREADVICE');

INSERT INTO DUAL_INDEX_RULE_FIELDS
SELECT DUAL_INDEX_RULE_ID, 18, SYSDATE FROM DUAL_INDEX_RULES
WHERE DOCUMENT_CLASS IN ('DIOAPP','DIOWTHCHPS','DIOWTHBACS','DIOADDCAP','DIOPREADVICE');

INSERT INTO DUAL_INDEX_RULE_FIELDS
SELECT DUAL_INDEX_RULE_ID, 3, SYSDATE FROM DUAL_INDEX_RULES
WHERE DOCUMENT_CLASS IN ('DIOWTHCHPS','DIOWTHBACS','DIOADDCAP','DIOPREADVICE');

