
-- Delete all instruction reference data table content.
DELETE FROM REF_INSTRUCTION_TYPE;
DELETE FROM APPLICABLE_INSTRUCTION_DATA;
DELETE FROM INSTRUCTION_DATA_APPLIED;

-- Add missing keys/indicies
CREATE INDEX IX_INSTRUCTION_INSTRUCTION_FK ON INSTRUCTION (DEPENDENT_INSTRUCTION_ID) 
/
ALTER TABLE INSTRUCTION ADD CONSTRAINT INSTR_DEPINSTR_FK FOREIGN KEY (DEPENDENT_INSTRUCTION_ID) REFERENCES INSTRUCTION (INSTRUCTION_ID)
/

CREATE INDEX INSTRTYPE_INSTRUCTION_IX ON INSTRUCTION (INSTRUCTION_TYPE_ID) 
/
ALTER TABLE INSTRUCTION ADD CONSTRAINT INSTRTYPE_INSTRUCTION_FK FOREIGN KEY (INSTRUCTION_TYPE_ID) REFERENCES REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID)
/

CREATE INDEX INSTRSTATUS_INSTRUCTION_IX ON INSTRUCTION (INSTRUCTION_STATUS_ID) 
/
ALTER TABLE INSTRUCTION ADD CONSTRAINT INSTRSTATUS_INSTRUCTION_FK FOREIGN KEY (INSTRUCTION_STATUS_ID) REFERENCES REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID)
/

CREATE INDEX APPINSTRDATA_INSTRDATAAPPL_IX ON INSTRUCTION_DATA_APPLIED (APPLICABLE_INSTRUCTION_DATA_ID) 
/
ALTER TABLE INSTRUCTION_DATA_APPLIED ADD CONSTRAINT APPINSTRDATA_INSTRDATAAPPL_FK FOREIGN KEY (APPLICABLE_INSTRUCTION_DATA_ID) REFERENCES APPLICABLE_INSTRUCTION_DATA (APPLICABLE_INSTRUCTION_DATA_ID)
/

CREATE INDEX INSTRTYPE_APPINSTRDATA_IX ON APPLICABLE_INSTRUCTION_DATA (INSTRUCTION_TYPE_ID) 
/
ALTER TABLE APPLICABLE_INSTRUCTION_DATA ADD CONSTRAINT INSTRTYPE_APPINSTRDATA_FK FOREIGN KEY (INSTRUCTION_TYPE_ID) REFERENCES REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID)
/

CREATE INDEX COMM_INSTRUCTION_IX ON INSTRUCTION (COMM_ID) 
/
ALTER TABLE INSTRUCTION ADD CONSTRAINT COMM_INSTRUCTION_FK FOREIGN KEY (COMM_ID) REFERENCES COMM (COMM_ID)
/

CREATE INDEX INSTRDATA_APPINSTRDATA_IX ON APPLICABLE_INSTRUCTION_DATA (INSTRUCTION_DATA_ID) 
/
ALTER TABLE APPLICABLE_INSTRUCTION_DATA ADD CONSTRAINT INSTRDATA_APPINSTRDATA_FK FOREIGN KEY (INSTRUCTION_DATA_ID) REFERENCES REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID)
/

-- Load up REF_INSTRUCTION_TYPE using DATA_LOADER content
INSERT INTO REF_INSTRUCTION_TYPE
SELECT INSTRUCTION_TYPE_ID, INSTRUCTION_TYPE_NAME, TRANSACTION_TYPE_ID,
INSTRUCTION_DESCRIPTION, IS_FINANCIAL_TRANSACTION,  
SUBMIT_TO_SPP, REQUIRE_SIGNATURES, IS_SUPPORTING, SYSDATE, SYSDATE
 FROM INSTRUCTION_TYPE_DATA_LOADER;
 
-- Load up APPLICABLE_INSTRUCTION_DATA using DATA_LOADER content

-- SOURCE_ACCOUNT_ID as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 1, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.source_account_id = 'Y';
-- SOURCE_ACCOUNT_ID as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 1, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.source_account_id = 'O';

-- SOURCE_BANK_ACCOUNT_ID as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 2, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.source_bank_account_id = 'Y';
-- SOURCE_BANK_ACCOUNT_ID as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 2, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.source_bank_account_id = 'O';

-- CASH as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 3, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.cash_amount = 'Y';
-- CASH as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 3, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.cash_amount= 'O';

-- UNITS as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 4, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.unit_amount = 'Y';
-- UNITS as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 4, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.unit_amount= 'O';

-- DESTINATION_ACCOUNT as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 6, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.dest_account_id = 'Y';
-- DESTINATION_ACCOUNT as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 6, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.dest_account_id = 'O';

-- DESTINATION_BANK_ACCOUNT as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 7, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.dest_bank_account_id = 'Y';
-- DESTINATION_BANK_ACCOUNT as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 7, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.dest_bank_account_id = 'O';

-- ORGANISATION_ID as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 9, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.organisation_id = 'Y';
-- ORGANISATION_ID as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 9, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.organisation_id = 'O';

-- PERSON_ID as required field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 10, ldr.INSTRUCTION_TYPE_ID, 0
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.person_id = 'Y';
-- ORGANISATION_ID as optional field
INSERT INTO APPLICABLE_INSTRUCTION_DATA
SELECT SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, 10, ldr.INSTRUCTION_TYPE_ID, 1
FROM INSTRUCTION_TYPE_DATA_LOADER ldr WHERE ldr.person_id = 'O';

