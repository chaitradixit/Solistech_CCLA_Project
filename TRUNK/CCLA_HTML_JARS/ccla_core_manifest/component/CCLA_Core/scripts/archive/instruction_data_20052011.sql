
-- New entries in REF_INSTRUCTION_TYPE
REM INSERTING into REF_INSTRUCTION_TYPE
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (108,'WTHCHQ',2,'Withdrawal by CHQS',1,1,1,0,to_timestamp('14-MAR-11 11.18.39.000000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('14-MAR-11 11.18.39.000000000','DD-MON-RR HH24.MI.SS.FF'),2);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (109,'CLIMONCONF',null,'Document from bank indicating whether or not it holds client money',0,0,0,1,to_timestamp('18-MAR-11 14.50.47.000000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('18-MAR-11 14.50.47.000000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (110,'ORSALEIAT',2,'Charge associated with certain transactions',1,0,0,0,to_timestamp('30-MAR-11 10.13.10.793000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('30-MAR-11 10.13.16.537000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (111,'SEEDFUND',null,'Seed Funder Investment Confirmation',0,0,0,1,to_timestamp('20-MAY-11 18.10.33.821000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('20-MAY-11 18.10.37.038000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (112,'TMS',null,'Treasury Management Strategy Paper',0,0,0,1,to_timestamp('20-MAY-11 18.11.55.498000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('20-MAY-11 18.11.58.482000000','DD-MON-RR HH24.MI.SS.FF'),0);
Insert into REF_INSTRUCTION_TYPE (INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET) values (113,'DICONDIN',null,null,0,1,0,0,to_timestamp('20-MAY-11 18.12.31.803000000','DD-MON-RR HH24.MI.SS.FF'),to_timestamp('20-MAY-11 18.12.35.564000000','DD-MON-RR HH24.MI.SS.FF'),0);

-- TODO: APPLICABLE_INSTRUCTION_DATA entries for the above.

-- New entries in REF_INSTRUCTION_DATA
REM INSERTING into REF_INSTRUCTION_DATA
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (19,'UCM_JOB_ID','INT','UCM Job ID','Unique to every triggered SPP job. Used to match UCM Documents/Instructions to SPP jobs');

-- Other ones.
REM INSERTING into REF_INSTRUCTION_DATA
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (15,'IS_SUPPORTING','BOOL','Supporting Document','Whether or not the instruction''s type is a supporting doc type');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (16,'DOC_DATE','DATE','Document Date','Date the document arrived at CCLA');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (17,'FORM_ID','INT','Form Barcode','Numeric representation of the form barcode');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (18,'INSTRUCTION_COMMENTS','STRING','Comment',null);
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (19,'UCM_JOB_ID','INT','UCM Job ID','Unique to every triggered SPP job. Used to match UCM Documents/Instructions to SPP jobs');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (20,'DEST_ACCNUMEXT','STRING','Destination AccNumExt','Destination AccNumExt, stored as string');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (21,'WITH_INSTRUCTION','BOOL','With Instruction','Whether or not this instruction has other instructions dependant on it');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (22,'WORKFLOW_DATE','DATE','Workflow Date','Date the instruction was last sent to SPP');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (23,'SIGNATURES_VALID','BOOL','Signatures Valid','Whether or not the instruction signatures have been verified');

-- All entries in REF_UCM_METADATA_TRANSLATION
REM INSERTING into REF_UCM_METADATA_TRANSLATION
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (1,null,'com.ecs.ucm.ccla.commproc.translation.AccountIdFieldHandler');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (2,null,'com.ecs.ucm.ccla.commproc.translation.BankAccountIdFieldHandler');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (3,'xAmount',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (4,'xUnits',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (9,null,'com.ecs.ucm.ccla.commproc.translation.OrganisationIdFieldHandler');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (14,'xClientServicesRef',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (15,'xSupportingDoc','com.ecs.ucm.ccla.commproc.translation.YesNoValueToBoolHandler');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (16,'xDocumentDate',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (17,'xFormId',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (18,'xComments',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (19,'xJobId',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (20,'xDestinationAccount',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (21,'xWithInstruction','com.ecs.ucm.ccla.commproc.translation.YesNoValueToBoolHandler');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (22,'xWorkflowDate',null);
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (23,'xSignaturesValid',null);

REM INSERTING into REF_INSTRUCTION_STATUS
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (1,'Ready for EOD processing',null);
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (2,'In EOD proccessing',null);
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (3,'Finished EOD processing',null);
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (5,'Indexed','Default status for new Instructions');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (4,'Finished EOD calculation',null);
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (6,'Suspected Duplicate','Item flagged by the Duplicate Checker as a possible duplicate');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (7,'Duplicate','Item confirmed by users to be a duplicate');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (8,'Passed Duplicate Checks','Item has passed duplicate checking');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (9,'Passed Validation Checks','Item has passed general validation checks');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (10,'Released to SPP','Item is released to SPP');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (11,'Archived','Item has been archived');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (14,'Ready for SPP release','Item is ready for SPP release');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (15,'Failed SPP release','Item has failed SPP release');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (12,'Ready for Validation','Item is ready for general validation checks');
Insert into REF_INSTRUCTION_STATUS (INSTRUCTION_STATUS_ID,INSTRUCTION_STATUS_NAME,INSTRUCTION_STATUS_DESCRIPTION) values (13,'Failed Validation Checks','Item failed validation checks');

REM INSERTING into INSTRUCTION_ROUTING_MODULE
Insert into INSTRUCTION_ROUTING_MODULE (MODULE_ID,MODULE_NAME,LISTEN_STATUS_ID,SKIP_STATUS_ID,ENTRY_STATUS_ID,PASS_STATUS_ID,FAIL_STATUS_ID,IS_ENABLED,HANDLER_CLASS,LAST_UPDATED,EXECUTION_ORDER) values (2,'Duplicate Checking',13,null,null,9,9,0,'com.ecs.ucm.ccla.commproc.modulehandler.DuplicateCheckModuleHandler',to_timestamp('23-MAY-11 16.35.40.000000000','DD-MON-RR HH24.MI.SS.FF'),1);
Insert into INSTRUCTION_ROUTING_MODULE (MODULE_ID,MODULE_NAME,LISTEN_STATUS_ID,SKIP_STATUS_ID,ENTRY_STATUS_ID,PASS_STATUS_ID,FAIL_STATUS_ID,IS_ENABLED,HANDLER_CLASS,LAST_UPDATED,EXECUTION_ORDER) values (3,'Archive Check',5,null,2,11,14,1,'com.ecs.ucm.ccla.commproc.modulehandler.ArchiveCheckModuleHandler',to_timestamp('23-MAY-11 15.54.36.000000000','DD-MON-RR HH24.MI.SS.FF'),2);
Insert into INSTRUCTION_ROUTING_MODULE (MODULE_ID,MODULE_NAME,LISTEN_STATUS_ID,SKIP_STATUS_ID,ENTRY_STATUS_ID,PASS_STATUS_ID,FAIL_STATUS_ID,IS_ENABLED,HANDLER_CLASS,LAST_UPDATED,EXECUTION_ORDER) values (1,'Instruction Verification',3,null,null,12,14,0,'com.ecs.ucm.ccla.commproc.modulehandler.VerificationModuleHandler',to_timestamp('23-MAY-11 13.30.34.000000000','DD-MON-RR HH24.MI.SS.FF'),3);
Insert into INSTRUCTION_ROUTING_MODULE (MODULE_ID,MODULE_NAME,LISTEN_STATUS_ID,SKIP_STATUS_ID,ENTRY_STATUS_ID,PASS_STATUS_ID,FAIL_STATUS_ID,IS_ENABLED,HANDLER_CLASS,LAST_UPDATED,EXECUTION_ORDER) values (4,'SPP Release',14,null,null,10,15,1,'com.ecs.ucm.ccla.commproc.modulehandler.SPPJobModuleHandler',to_timestamp('23-MAY-11 15.55.48.000000000','DD-MON-RR HH24.MI.SS.FF'),4);


