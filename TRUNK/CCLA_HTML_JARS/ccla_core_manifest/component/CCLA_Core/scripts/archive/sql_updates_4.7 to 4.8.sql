
-- New FK column to new REF_INSTRUCTION_PROCESS table
ALTER TABLE IRMODULE_INSTR_RULE_APPLIED ADD
(
   INSTRUCTION_PROCESS_ID Number(15,0)
)
/

-- New descriptor/audit columns for condition table
ALTER TABLE INSTRUCTION_CONDITION ADD
(
   DESCRIPTION Varchar2(200 ),
   LAST_UPDATED Timestamp(6) CONSTRAINT INSTRCOND_LASTUPDATED_NN NOT NULL,
   LAST_UPDATED_BY Varchar2(90 ) CONSTRAINT INSTRCOND_LASTUPDATEDBY_NN NOT NULL
)
/

-- New instruction process table
CREATE TABLE REF_INSTRUCTION_PROCESS(
  INSTRUCTION_PROCESS_ID Number(15,0) NOT NULL,
  PROCESS_NAME Varchar2(80 ) CONSTRAINT INSTRPROC_NAME_NN NOT NULL,
  PROCESS_DESCRIPTION Varchar2(500 ),
  USER_GROUPS Varchar2(200 ),
  IDOC_INCLUDE Varchar2(100 )
)
/

ALTER TABLE REF_INSTRUCTION_PROCESS ADD CONSTRAINT INSTRPROC_PK PRIMARY KEY (INSTRUCTION_PROCESS_ID)
/

ALTER TABLE REF_INSTRUCTION_PROCESS ADD CONSTRAINT INSTRPROC_NAME_UQ UNIQUE (PROCESS_NAME)
/

COMMENT ON TABLE REF_INSTRUCTION_PROCESS IS 'Instruction Processes are triggered during evaluation of instructions within Routing Modules. They are used to indicate a task/decision that must be performed manually against an Instruction.

Each one should have a mapped set of Instruction Actions, stored in the table INSTR_PROCESS_ACTION_APPLIED.

When one of these Processes is instantiated for an Instruction, a new entry is added to INSTRUCTION_PROCESS_APPLIED.'
/

COMMENT ON COLUMN REF_INSTRUCTION_PROCESS.USER_GROUPS IS 'Comma-separated list of Active Directory User Groups who have permissions to apply actions to any applied processes of this type.'
/

COMMENT ON COLUMN REF_INSTRUCTION_PROCESS.IDOC_INCLUDE IS 'UCM IdocScript include used when displaying active process details for a particular instruction (optional)'
/



CREATE TABLE INSTRUCTION_PROCESS_APPLIED(
  INSTR_PROCESS_APPLIED_ID Number(15,0) NOT NULL,
  INSTRUCTION_ID Number(15,0) CONSTRAINT INSTRPROCAPPL_INSTRID_NN NOT NULL,
  INSTRUCTION_PROCESS_ID Number(15,0),
  DESCRIPTION Varchar2(255 ),
  PROCESS_START_DATE Timestamp(6) CONSTRAINT INSTRPROCAPPL_STARTDATE_NN NOT NULL,
  PROCESS_END_DATE Timestamp(6),
  PROCESS_USER Varchar2(90 ),
  INSTRUCTION_ACTION_ID Number(15,0)
)
/

ALTER TABLE INSTRUCTION_PROCESS_APPLIED ADD CONSTRAINT INSTRPROCAPPL_PK PRIMARY KEY (INSTR_PROCESS_APPLIED_ID,INSTRUCTION_ID)
/

ALTER TABLE INSTRUCTION_PROCESS_APPLIED ADD CONSTRAINT INSTRPROCAPPL_INSTRID_UQ UNIQUE (INSTRUCTION_ID)
/



CREATE TABLE REF_INSTRUCTION_ACTION(
  INSTRUCTION_ACTION_ID Number(15,0) NOT NULL,
  INSTRUCTION_ACTION_LABEL Varchar2(30 ) CONSTRAINT INSTRACTION_NAME_NN NOT NULL
)
/

ALTER TABLE REF_INSTRUCTION_ACTION ADD CONSTRAINT INSTRACTION_PK PRIMARY KEY (INSTRUCTION_ACTION_ID)
/



CREATE TABLE INSTR_PROCESS_ACTION_APPLIED(
  INSTRUCTION_PROCESS_ID Number(15,0) NOT NULL,
  INSTRUCTION_ACTION_ID Number(15,0) NOT NULL,
  APPLIED_ACTION_LABEL Varchar2(50 ),
  APPLIED_ACTION_DESCRIPTION Varchar2(500 )
)
/

ALTER TABLE INSTR_PROCESS_ACTION_APPLIED ADD CONSTRAINT INSTRPROCACTION_PK PRIMARY KEY (INSTRUCTION_PROCESS_ID,INSTRUCTION_ACTION_ID)
/

CREATE INDEX INSTRPROC_INSTRRULE_IX ON IRMODULE_INSTR_RULE_APPLIED (INSTRUCTION_PROCESS_ID) 
/
ALTER TABLE IRMODULE_INSTR_RULE_APPLIED ADD CONSTRAINT INSTRPROC_INSTRRULE_FK FOREIGN KEY (INSTRUCTION_PROCESS_ID) REFERENCES REF_INSTRUCTION_PROCESS (INSTRUCTION_PROCESS_ID)
/
ALTER TABLE INSTRUCTION_PROCESS_APPLIED ADD CONSTRAINT INSTR_INSTRPROCAPPL_FK FOREIGN KEY (INSTRUCTION_ID) REFERENCES INSTRUCTION (INSTRUCTION_ID)
/
CREATE INDEX INSTRPROC_INSTRPROCAPPL_IX ON INSTRUCTION_PROCESS_APPLIED (INSTRUCTION_PROCESS_ID) 
/
ALTER TABLE INSTRUCTION_PROCESS_APPLIED ADD CONSTRAINT INSTRPROC_INSTRPROCAPPL_FK FOREIGN KEY (INSTRUCTION_PROCESS_ID) REFERENCES REF_INSTRUCTION_PROCESS (INSTRUCTION_PROCESS_ID)
/
CREATE INDEX INSTRACTION_INSTRPROCAPPL_IX ON INSTRUCTION_PROCESS_APPLIED (INSTRUCTION_ACTION_ID) 
/
ALTER TABLE INSTRUCTION_PROCESS_APPLIED ADD CONSTRAINT INSTRACTION_INSTRPROCAPPL_FK FOREIGN KEY (INSTRUCTION_ACTION_ID) REFERENCES REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID)
/
CREATE INDEX INSTRPROC_INSTRPROCACTION_IX ON INSTR_PROCESS_ACTION_APPLIED (INSTRUCTION_PROCESS_ID) 
/
ALTER TABLE INSTR_PROCESS_ACTION_APPLIED ADD CONSTRAINT INSTRPROC_INSTRPROCACTION_FK FOREIGN KEY (INSTRUCTION_PROCESS_ID) REFERENCES REF_INSTRUCTION_PROCESS (INSTRUCTION_PROCESS_ID)
/
CREATE INDEX INSTRACTION_INSTRPROCACTION_IX ON INSTR_PROCESS_ACTION_APPLIED (INSTRUCTION_ACTION_ID) 
/
ALTER TABLE INSTR_PROCESS_ACTION_APPLIED ADD CONSTRAINT INSTRACTION_INSTRPROCACTION_FK FOREIGN KEY (INSTRUCTION_ACTION_ID) REFERENCES REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID)
/


REM INSERTING into REF_INSTRUCTION_ACTION
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (1,'Retry');
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (2,'Pass');
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (3,'Fail');
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (4,'Approve');
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (5,'Reject');
Insert into REF_INSTRUCTION_ACTION (INSTRUCTION_ACTION_ID,INSTRUCTION_ACTION_LABEL) values (6,'Cancel');

-- New Sleeping Ref field.
REM INSERTING into REF_INSTRUCTION_DATA
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (14,'SLEEPING_REF','STRING','Sleeping Ref','Sleeping reference used by Client Services');

REM INSERTING into REF_UCM_METADATA_TRANSLATION
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (14,'xClientServicesRef',null);


CREATE OR REPLACE PUBLIC SYNONYM REF_INSTRUCTION_PROCESS FOR CCLA.REF_INSTRUCTION_PROCESS;
CREATE OR REPLACE PUBLIC SYNONYM INSTRUCTION_PROCESS_APPLIED FOR CCLA.INSTRUCTION_PROCESS_APPLIED;
CREATE OR REPLACE PUBLIC SYNONYM REF_INSTRUCTION_ACTION FOR CCLA.REF_INSTRUCTION_ACTION;
CREATE OR REPLACE PUBLIC SYNONYM INSTR_PROCESS_ACTION_APPLIED FOR CCLA.INSTR_PROCESS_ACTION_APPLIED;

GRANT ALL ON REF_INSTRUCTION_PROCESS TO UCMADMIN;
GRANT ALL ON INSTRUCTION_PROCESS_APPLIED TO UCMADMIN;
GRANT ALL ON REF_INSTRUCTION_ACTION TO UCMADMIN;
GRANT ALL ON INSTR_PROCESS_ACTION_APPLIED TO UCMADMIN;
