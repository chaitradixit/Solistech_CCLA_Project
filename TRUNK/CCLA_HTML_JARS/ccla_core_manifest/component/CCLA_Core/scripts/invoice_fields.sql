-- New Doc Class: MULTIINV
Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) 
values ('128',SYSDATE,SYSDATE,'cclaucmdev','MULTIINV','N','Invoice Line Item','N','N','N','N','N','N','N');

-- New Doc Class: INVLINE (redacted)
--Insert into DOCUMENT_CLASSES (SCHPRIMARYKEY,SCHCREATETIMESTAMP,SCHMODIFYTIMESTAMP,SCHSOURCEID,DOC_CLASS,SUBMIT_TO_SPP,DESCRIPTION,IS_SUPPORTING,IS_MULTIDOC,REQUIRE_ACCOUNT_DATA,IS_TRANSACTION,IS_STANDING_ORDER,SIGNATURES_REQUIRED,IS_MANDATE) 
--values ('128',SYSDATE,SYSDATE,'cclaucmdev','INVLINE','N','Invoice Line Item','Y','N','N','N','N','N','N');

-- New Instruction Type: INVLINE (redacted)
--Insert into REF_INSTRUCTION_TYPE 
--(INSTRUCTION_TYPE_ID,INSTRUCTION_TYPE_NAME,TRANSACTION_TYPE_ID,INSTRUCTION_DESCRIPTION,IS_FINANCIAL_TRANSACTION,SUBMIT_TO_SPP,REQUIRE_SIGNATURES,IS_SUPPORTING,DATE_ADDED,LAST_UPDATED,SETTLEMENT_OFFSET,IS_STATIC_DATA_UPDATE) 
--values (132,'INVLINE',null,'Invoice Line Item',0,0,0,0,SYSDATE,SYSDATE,0,0);

-- New Instruction Register Invoice data fields
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('54', 'INVOICE_NUMBER', 'STRING', 'Invoice Number', 'Invoice Fields - The invoice number');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('55', 'COST_CENTRE', 'STRING', 'Cost Centre', 'Invoice Fields - Cost Centre');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('56', 'DEPT_PRO_CODE', 'STRING', 'Dept/Pro Code', 'Invoice Fields - Department / Process Code');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('57', 'NOMINAL_CODE', 'STRING', 'Nominal Code', 'Invoice Fields - Nominal Code');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('58', 'VAT_CALCULATED', 'FLOAT', 'VAT Calculated', 'Invoice Fields - VAT Calculated');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('59', 'NETT_CALCULATED', 'FLOAT', 'NETT Calculated', 'Invoice Fields - NETT Calculated');
INSERT INTO "CCLA"."REF_INSTRUCTION_DATA" (INSTRUCTION_DATA_ID, INSTRUCTION_DATA_NAME, INSTRUCTION_DATA_TYPE, INSTRUCTION_DATA_LABEL, INSTRUCTION_DATA_DESCRIPTION) VALUES ('60', 'PAYMENT_DATE', 'DATE', 'Payment Date', 'Invoice Fields - Payment Date');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (62,'LIABILITY','INT','Liable for Payment','Organisation reference that is liable for paying the invoice');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (63,'DESCRIPTION','STRING','Description','Description for invoice line item');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (64,'CAPITAL_OR_INCOME','STRING','Capital or Income','Capital or Income');
Insert into REF_INSTRUCTION_DATA (INSTRUCTION_DATA_ID,INSTRUCTION_DATA_NAME,INSTRUCTION_DATA_TYPE,INSTRUCTION_DATA_LABEL,INSTRUCTION_DATA_DESCRIPTION) values (65,'CURRENCY','STRING','Currency','Currency');

-- Below lines already exec'd in all environments (Org ID)
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '9', '64', '0');
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '9', '115', '0');

-- INVHIST fields
/*

Not using INVHIST going forward, so don't bother mapping fields.

INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '54', '115', '0'); -- Inv No.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '55', '115', '0'); -- Cost Centre
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '56', '115', '1'); -- Dept/Pro Code
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '57', '115', '1'); -- Nominal Code
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '58', '115', '1'); -- VAT calc.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '59', '115', '1'); -- NETT calc.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '60', '115', '0'); -- Payment Date
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '3', '115', '0');  	-- Cash Amount
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '16', '115', '0');	-- Doc Date
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '18', '115', '0');	-- Comments
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '62', '115', '0');	-- Liability
*/

-- INV fields
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '54', '64', '0');    -- Inv No.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '55', '64', '0');    -- Cost Centre
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '56', '64', '1');    -- Dept/Pro Code
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '57', '64', '1');    -- Nominal Code
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '58', '64', '1');    -- VAT calc.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '59', '64', '1');    -- NETT calc.
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '60', '64', '0');    -- Payment Date
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '16', '64', '0');	-- Doc Date
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '3', '64', '0');	-- Cash Amount
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '18', '64', '0');	-- Comments
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '62', '64', '0');	-- Liability
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '63', '64', '0');	-- Description
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '64', '64', '0');	-- Capital or Income
INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '65', '64', '0');	-- Currency

-- INVLINE fields (redacted)
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '9', '132', '0');	  -- Org
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '54', '132', '0');    -- Inv No.
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '55', '132', '0');    -- Cost Centre
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '56', '132', '1');    -- Dept/Pro Code
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '57', '132', '1');    -- Nominal Code
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '58', '132', '1');    -- VAT calc.
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '59', '132', '1');    -- NETT calc.
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '60', '132', '0');    -- Payment Date
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '3', '132', '0');	-- Cash Amount
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '18', '64', '0');	-- Comments
--INSERT INTO "CCLA"."APPLICABLE_INSTRUCTION_DATA" (APPLICABLE_INSTRUCTION_DATA_ID, INSTRUCTION_DATA_ID, INSTRUCTION_TYPE_ID, IS_OPTIONAL) VALUES (SEQ_APPLICABLE_INSTR_DATA.NEXTVAL, '62', '132', '0');	-- Liability


-- Set most of the above fields to Optional
UPDATE APPLICABLE_INSTRUCTION_DATA SET IS_OPTIONAL = 1 WHERE INSTRUCTION_TYPE_ID IN (64,115)
AND INSTRUCTION_DATA_ID IN (54,55,56,57,58,59,60,18,62,64,65);

-- Set fields to Required (Cash, Doc Date, Org, Description)
UPDATE APPLICABLE_INSTRUCTION_DATA SET IS_OPTIONAL = 0 WHERE INSTRUCTION_TYPE_ID IN (64,115)
AND INSTRUCTION_DATA_ID IN (3,16,9,63);


-- New metadata translation entries
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('54', 'xUnits');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('55', 'xClientName');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('56', 'xFund');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('57', 'xClientServicesRef');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('58', 'xDestinationAccount');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('59', 'xDestinationFund');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('60', 'xPaymentDate');
Insert into REF_UCM_METADATA_TRANSLATION (INSTRUCTION_DATA_ID,UCM_FIELD_NAME,TRANSLATION_HANDLER_CLASS) values (62,null,'com.ecs.ucm.ccla.commproc.translation.LiabilityOrganisationIdFieldHandler');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('63', 'xDescription');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('64', 'xCapitalOrIncome');
INSERT INTO "CCLA"."REF_UCM_METADATA_TRANSLATION" (INSTRUCTION_DATA_ID, UCM_FIELD_NAME) VALUES ('65', 'xCurrency');


-- New org attribute: 'Liable for Invoice Payments'. Orgs with this attribute will be available
-- for selection in the xDestinationOrgAccountCode field in Iris. Currently disaplyed for INV
-- doc class only.
REM INSERTING into REF_ELEMENT_ATTRIBUTES
Insert into REF_ELEMENT_ATTRIBUTES (ELEMENT_ATTRIBUTE_ID,ELEMENT_ATTRIBUTE_NAME,ELEMENT_TYPE_ID,ELEMENT_ATTRIBUTE_DESCRIPTION,SET_BY_USER,VERIFICATION_SOURCE_ID,ELEMENT_IDENTIFIER_ID,USER_GROUPS,ELEMENT_ATTRIBUTE_DATA_TYPE,ELEMENT_ATTRIBUTE_TYPE_ID) values (64,'Liable for Invoice Payments',1,'Liable for invoice payments',1,null,null,null,'BOOL',6);

-- Test invoice data tables.
-- =========================
-- Used to assist document-based indexing for now. Will be dropped and re-created at later date.

-- Table CCLA.REF_DEP_PROJECT_CODES

CREATE TABLE CCLA.REF_DEP_PROJECT_CODES(
  DEP_PROJECT_CODE_ID Number(15,0) NOT NULL,
  DEP_PROJECT_CODE Varchar2(50 ) NOT NULL,
  DEP_PROJECT_CODE_DESC Varchar2(50 ) NOT NULL,
  INACTIVE_AC Char(1 )
)
/

-- Add keys for table CCLA.REF_DEP_PROJECT_CODES

ALTER TABLE CCLA.REF_DEP_PROJECT_CODES ADD CONSTRAINT DEP_PROJECT_CODE_PK PRIMARY KEY (DEP_PROJECT_CODE_ID)
/

-- Table and Columns comments section
  
COMMENT ON COLUMN CCLA.REF_DEP_PROJECT_CODES.INACTIVE_AC IS 'Flag to let us know if the Department code is Active / Inactive.  '
/

-- Table CCLA.REF_COST_CENTRES

CREATE TABLE CCLA.REF_COST_CENTRES(
  COST_CENTRE_ID Char(20 ) NOT NULL,
  COST_CENTRE_CODE Varchar2(50 ) NOT NULL,
  COST_CENTRE_NAME Varchar2(50 ) NOT NULL,
  INACTIVE_AC Char(1 )
)
/

-- Add keys for table CCLA.REF_COST_CENTRES

ALTER TABLE CCLA.REF_COST_CENTRES ADD CONSTRAINT COST_CENTRE_PK PRIMARY KEY (COST_CENTRE_ID)
/

-- Table and Columns comments section
  
COMMENT ON COLUMN CCLA.REF_COST_CENTRES.INACTIVE_AC IS 'Flag to let us know if the CC code is Active / Inactive.  '
/

-- Table CCLA.REF_GENERAL_LEDGER

CREATE TABLE CCLA.REF_GENERAL_LEDGER(
  GENERAL_LEDGER_ID Number(15,0) NOT NULL,
  GL_CODE Varchar2(50 ) NOT NULL,
  GL_CODE_DESCRIPTION Varchar2(50 ) NOT NULL,
  GL_ALT_SEARCH_CODE Varchar2(50 ),
  GL_TYPE_ID Number(15,0) NOT NULL
)
/

-- Add keys for table CCLA.REF_GENERAL_LEDGER

ALTER TABLE CCLA.REF_GENERAL_LEDGER ADD CONSTRAINT GENERAL_LEDGER_PK PRIMARY KEY (GENERAL_LEDGER_ID)
/

CREATE OR REPLACE PUBLIC SYNONYM REF_DEP_PROJECT_CODES FOR CCLA.REF_DEP_PROJECT_CODES;
CREATE OR REPLACE PUBLIC SYNONYM REF_COST_CENTRES FOR CCLA.REF_COST_CENTRES;
CREATE OR REPLACE PUBLIC SYNONYM REF_GENERAL_LEDGER FOR CCLA.REF_GENERAL_LEDGER;

GRANT ALL ON REF_DEP_PROJECT_CODES TO UCMADMIN;
GRANT ALL ON REF_COST_CENTRES TO UCMADMIN;
GRANT ALL ON REF_GENERAL_LEDGER TO UCMADMIN;

-- Load in example data. Has little bearing to the real ref data.
-- DON'T LOAD INTO LIVE.
INSERT INTO REF_GENERAL_LEDGER (GENERAL_LEDGER_ID, GL_CODE, GL_CODE_DESCRIPTION, GL_TYPE_ID) 
VALUES (1, '1800010', 'xxx', 1);
INSERT INTO REF_GENERAL_LEDGER (GENERAL_LEDGER_ID, GL_CODE, GL_CODE_DESCRIPTION, GL_TYPE_ID) 
VALUES (2, '725410', 'xxx', 1);
INSERT INTO REF_GENERAL_LEDGER (GENERAL_LEDGER_ID, GL_CODE, GL_CODE_DESCRIPTION, GL_TYPE_ID) 
VALUES (3, '700060', 'xxx', 1);

INSERT INTO REF_COST_CENTRES (COST_CENTRE_ID, COST_CENTRE_CODE, COST_CENTRE_NAME) 
VALUES (1, 'GEN', 'General');
INSERT INTO REF_COST_CENTRES (COST_CENTRE_ID, COST_CENTRE_CODE, COST_CENTRE_NAME) 
VALUES (2, 'COO', 'Operations');
INSERT INTO REF_COST_CENTRES (COST_CENTRE_ID, COST_CENTRE_CODE, COST_CENTRE_NAME) 
VALUES (3, 'TRA', 'Trading');
INSERT INTO REF_COST_CENTRES (COST_CENTRE_ID, COST_CENTRE_CODE, COST_CENTRE_NAME) 
VALUES (4, 'IT', 'Information Technology');

INSERT INTO REF_DEP_PROJECT_CODES (DEP_PROJECT_CODE_ID, DEP_PROJECT_CODE, DEP_PROJECT_CODE_DESC)
VALUES (1, 'ADP', 'XXX');
INSERT INTO REF_DEP_PROJECT_CODES (DEP_PROJECT_CODE_ID, DEP_PROJECT_CODE, DEP_PROJECT_CODE_DESC)
VALUES (2, 'EVD', 'XXX');
INSERT INTO REF_DEP_PROJECT_CODES (DEP_PROJECT_CODE_ID, DEP_PROJECT_CODE, DEP_PROJECT_CODE_DESC)
VALUES (3, 'DLL', 'XXX');
INSERT INTO REF_DEP_PROJECT_CODES (DEP_PROJECT_CODE_ID, DEP_PROJECT_CODE, DEP_PROJECT_CODE_DESC)
VALUES (4, 'ECD', 'XXX');


